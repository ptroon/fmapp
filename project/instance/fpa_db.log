2020-06-10 00:00:39,615 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:00:39,615 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:00:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:00:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:00:39,618 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:00:39,618 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:00:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:00:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:00:39,619 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:00:39,619 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:00:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:00:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:00:39,620 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:00:39,620 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:00:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:00:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:00:39,622 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:00:39,622 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:00:39,623 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:00:39,623 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:00:39,623 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:00:39,624 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:00:39,624 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:00:39,626 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:00:39,626 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:00:39,627 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:39,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:39,631 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:00:39,631 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:00:39,631 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:39,632 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:39,642 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:00:39,642 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 10, 0, 0, 39, 632632), datetime.datetime(2020, 6, 24, 0, 0, 39, 632632), datetime.datetime(2020, 6, 10, 0, 0, 39, 632632), datetime.datetime(2020, 6, 24, 0, 0, 39, 632632), datetime.datetime(2020, 6, 10, 0, 0, 39, 632632), datetime.datetime(2020, 6, 24, 0, 0, 39, 632632))
2020-06-10 00:00:39,643 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:00:39,643 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:00:39,643 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:00:39,644 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:00:39,644 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:00:39,718 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:00:39,719 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:00:39,719 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:39,719 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:39,723 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:00:50,453 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:00:50,459 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:00:50,459 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:00:50,463 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:50,463 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:50,464 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:00:50,465 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:00:50,470 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:00:50,477 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:50,478 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:50,478 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:00:50,479 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:00:50,481 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:00:50,481 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:00:50,482 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:00:50,484 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:00:50,485 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:00:50,485 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:00:50,486 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:50,486 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:50,486 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:50,487 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:50,490 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:00:50,491 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:00:54,148 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-10 00:00:54,149 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:00:54,149 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-10 00:00:54,150 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:00:54,150 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:00:54,152 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-10 00:05:28,294 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:05:28,296 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:28,296 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:05:28,298 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,298 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,301 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:05:28,301 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:05:28,301 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,301 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,312 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:05:28,312 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 10, 0, 5, 28, 302485), datetime.datetime(2020, 6, 24, 0, 5, 28, 302485), datetime.datetime(2020, 6, 10, 0, 5, 28, 302485), datetime.datetime(2020, 6, 24, 0, 5, 28, 302485), datetime.datetime(2020, 6, 10, 0, 5, 28, 302485), datetime.datetime(2020, 6, 24, 0, 5, 28, 302485))
2020-06-10 00:05:28,314 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:05:28,314 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:05:28,314 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:05:28,314 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:05:28,314 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:05:28,330 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:05:28,331 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:05:28,331 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,332 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,335 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-10 00:05:28,604 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:05:28,605 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:28,605 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:05:28,606 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,606 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,609 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:05:28,711 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:05:28,713 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:28,713 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:05:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,716 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:05:28,720 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:05:28,721 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:28,721 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:05:28,724 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,726 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:05:28,727 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,729 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:28,731 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:05:28,732 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:05:28,734 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:05:28,735 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:28,735 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:05:28,736 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,736 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,738 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:28,739 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:05:28,739 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:28,742 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-10 00:05:30,848 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-10 00:05:30,849 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:30,849 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-10 00:05:30,849 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:30,850 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:30,852 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-10 00:05:40,293 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-10 00:05:40,295 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:40,295 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-06-10 00:05:40,295 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,296 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,298 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:05:40,298 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-06-10 00:05:40,299 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,299 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,309 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:05:40,309 INFO sqlalchemy.engine.base.Engine Thread-35 : (datetime.datetime(2020, 6, 10, 0, 5, 40, 300130), datetime.datetime(2020, 6, 24, 0, 5, 40, 300130), datetime.datetime(2020, 6, 10, 0, 5, 40, 300130), datetime.datetime(2020, 6, 24, 0, 5, 40, 300130), datetime.datetime(2020, 6, 10, 0, 5, 40, 300130), datetime.datetime(2020, 6, 24, 0, 5, 40, 300130))
2020-06-10 00:05:40,309 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:05:40,310 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:05:40,310 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:05:40,310 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:05:40,310 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:05:40,314 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:05:40,314 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-06-10 00:05:40,315 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,315 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,318 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-10 00:05:40,563 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-10 00:05:40,564 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:40,564 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-10 00:05:40,566 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,566 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,568 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-10 00:05:40,636 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-10 00:05:40,637 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:40,637 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-10 00:05:40,639 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-10 00:05:40,639 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,642 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:40,642 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,644 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-10 00:05:40,644 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-10 00:05:40,647 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-10 00:05:40,651 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:40,651 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-10 00:05:40,650 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,653 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,655 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-10 00:05:40,652 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,649 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-10 00:05:40,648 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:05:40,656 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-10 00:05:40,655 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,657 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:05:40,658 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:05:40,659 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-10 00:05:40,661 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-10 00:06:10,173 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-10 00:06:10,174 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:10,174 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-06-10 00:06:10,175 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,175 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,177 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:06:10,177 INFO sqlalchemy.engine.base.Engine Thread-50 : ('philip', 1, 1)
2020-06-10 00:06:10,178 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,178 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,188 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:06:10,188 INFO sqlalchemy.engine.base.Engine Thread-50 : (datetime.datetime(2020, 6, 10, 0, 6, 10, 179312), datetime.datetime(2020, 6, 24, 0, 6, 10, 179312), datetime.datetime(2020, 6, 10, 0, 6, 10, 179312), datetime.datetime(2020, 6, 24, 0, 6, 10, 179312), datetime.datetime(2020, 6, 10, 0, 6, 10, 179312), datetime.datetime(2020, 6, 24, 0, 6, 10, 179312))
2020-06-10 00:06:10,189 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:06:10,189 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:06:10,189 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:10,189 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:10,190 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:10,205 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:06:10,206 INFO sqlalchemy.engine.base.Engine Thread-50 : ('philip', 1, 1)
2020-06-10 00:06:10,206 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,206 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,210 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-10 00:06:10,497 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-10 00:06:10,499 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:10,499 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-10 00:06:10,499 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,500 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,502 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-10 00:06:10,508 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-10 00:06:10,509 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:10,509 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-10 00:06:10,513 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-10 00:06:10,514 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,515 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:10,518 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-10 00:06:10,518 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,517 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-10 00:06:10,520 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:10,520 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-10 00:06:10,521 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-10 00:06:10,522 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,523 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,525 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-10 00:06:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,526 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,529 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-10 00:06:10,557 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-10 00:06:10,558 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:10,558 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-06-10 00:06:10,558 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:10,559 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:10,561 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-10 00:06:13,450 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-10 00:06:13,452 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:13,452 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-06-10 00:06:13,452 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,453 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,455 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:06:13,455 INFO sqlalchemy.engine.base.Engine Thread-66 : ('philip', 1, 1)
2020-06-10 00:06:13,455 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,455 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,463 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:06:13,463 INFO sqlalchemy.engine.base.Engine Thread-66 : ()
2020-06-10 00:06:13,464 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:06:13,464 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:13,464 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:06:13,465 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:06:13,470 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:06:13,470 INFO sqlalchemy.engine.base.Engine Thread-66 : ('philip', 1, 1)
2020-06-10 00:06:13,470 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,471 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,474 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-10 00:06:13,737 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-10 00:06:13,738 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:13,738 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-10 00:06:13,739 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,739 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,741 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-10 00:06:13,811 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-10 00:06:13,815 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-10 00:06:13,822 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:13,820 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-10 00:06:13,824 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:13,824 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-06-10 00:06:13,823 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-10 00:06:13,818 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-06-10 00:06:13,825 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:13,821 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:13,825 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-06-10 00:06:13,825 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,825 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-10 00:06:13,826 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,827 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,827 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,828 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,829 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:13,832 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,830 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:13,832 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-10 00:06:13,830 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-10 00:06:13,835 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-10 00:06:13,837 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-06-10 00:06:23,332 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-06-10 00:06:23,333 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:23,333 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-06-10 00:06:23,334 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,335 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,337 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:06:23,337 INFO sqlalchemy.engine.base.Engine Thread-81 : ('philip', 1, 1)
2020-06-10 00:06:23,338 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,338 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,347 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:06:23,348 INFO sqlalchemy.engine.base.Engine Thread-81 : ()
2020-06-10 00:06:23,348 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:06:23,349 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:06:23,350 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:06:23,350 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:06:23,354 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:06:23,354 INFO sqlalchemy.engine.base.Engine Thread-81 : ('philip', 1, 1)
2020-06-10 00:06:23,354 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,355 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,358 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-06-10 00:06:23,605 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-10 00:06:23,607 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:23,607 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-10 00:06:23,608 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,608 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,610 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-10 00:06:23,689 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-10 00:06:23,690 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:23,691 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-10 00:06:23,695 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-10 00:06:23,696 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:23,698 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-10 00:06:23,698 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-10 00:06:23,699 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,700 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-10 00:06:23,705 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:23,703 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,703 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,702 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:06:23,705 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-10 00:06:23,707 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,709 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-10 00:06:23,709 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-06-10 00:06:23,711 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,712 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-10 00:06:23,713 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,714 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:06:23,717 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-10 00:06:23,717 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:06:23,721 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-10 00:07:06,194 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-10 00:07:06,195 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:06,195 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-10 00:07:06,196 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,196 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,198 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:06,199 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-06-10 00:07:06,199 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,200 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,208 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:07:06,208 INFO sqlalchemy.engine.base.Engine Thread-96 : ()
2020-06-10 00:07:06,209 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:07:06,210 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:06,211 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:06,211 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:06,211 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:06,211 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:07:06,211 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:06,216 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:06,216 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-06-10 00:07:06,217 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,217 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,221 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-10 00:07:06,484 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-10 00:07:06,485 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:06,485 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-10 00:07:06,488 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-10 00:07:06,488 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,490 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:06,490 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,493 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-10 00:07:06,496 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-06-10 00:07:06,503 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:06,500 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-10 00:07:06,501 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:06,503 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-10 00:07:06,498 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-10 00:07:06,503 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-06-10 00:07:06,504 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,506 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,506 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,507 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,507 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,510 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-10 00:07:06,512 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,518 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-10 00:07:06,519 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-06-10 00:07:06,536 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-10 00:07:06,537 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:06,537 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-10 00:07:06,538 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:06,538 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:06,541 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-10 00:07:16,758 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-06-10 00:07:16,759 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:16,759 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-06-10 00:07:16,760 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:16,760 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:16,762 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:16,762 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-06-10 00:07:16,763 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:16,763 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:16,772 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:07:16,772 INFO sqlalchemy.engine.base.Engine Thread-111 : ()
2020-06-10 00:07:16,773 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:07:16,773 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:16,773 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:16,773 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:07:16,773 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:16,773 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:07:16,774 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:16,779 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:16,779 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-06-10 00:07:16,779 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:16,780 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:16,783 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-06-10 00:07:17,032 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-10 00:07:17,034 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:17,034 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-10 00:07:17,035 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:17,035 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:17,037 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-10 00:07:17,102 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-10 00:07:17,104 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:17,104 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-10 00:07:17,107 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-10 00:07:17,108 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:17,108 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-10 00:07:17,109 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:17,110 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:17,110 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:17,113 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-10 00:07:17,117 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:17,116 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-10 00:07:17,117 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-10 00:07:17,113 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:17,120 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-10 00:07:17,124 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:17,124 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-10 00:07:17,124 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:17,126 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:17,126 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-10 00:07:17,125 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:17,127 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:17,130 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-10 00:07:17,131 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-10 00:07:51,503 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:07:51,503 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:07:51,504 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:07:51,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:07:51,505 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:07:51,506 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:07:51,506 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:07:51,506 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:07:51,506 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:07:51,507 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:07:51,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:07:51,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:07:51,507 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:07:51,507 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:07:51,508 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:07:51,508 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:07:51,509 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:07:51,509 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:07:51,509 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:07:51,509 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:07:51,510 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:07:51,510 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:07:51,510 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:07:51,513 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:51,513 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:07:51,513 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,514 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,516 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:51,516 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:07:51,517 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,517 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,527 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:07:51,527 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 10, 0, 7, 51, 518114), datetime.datetime(2020, 6, 24, 0, 7, 51, 518114), datetime.datetime(2020, 6, 10, 0, 7, 51, 518114), datetime.datetime(2020, 6, 24, 0, 7, 51, 518114), datetime.datetime(2020, 6, 10, 0, 7, 51, 518114), datetime.datetime(2020, 6, 24, 0, 7, 51, 518114))
2020-06-10 00:07:51,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:07:51,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:51,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:51,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:51,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:51,599 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:51,599 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:07:51,599 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,600 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,603 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:07:51,854 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:07:51,856 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:51,856 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:07:51,857 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,857 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,871 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:07:51,930 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:07:51,931 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:51,931 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:07:51,935 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,935 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,936 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:07:51,938 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:07:51,939 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:51,943 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:07:51,942 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:07:51,945 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:51,945 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:07:51,946 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,946 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,949 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:07:51,951 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:07:51,953 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:51,953 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:07:51,954 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,954 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,957 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:07:51,958 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:51,958 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:51,961 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:07:56,205 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:07:56,206 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:56,206 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:07:56,207 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,207 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,209 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:56,209 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:07:56,210 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,210 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,219 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:07:56,219 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 10, 0, 7, 56, 210726), datetime.datetime(2020, 6, 24, 0, 7, 56, 210726), datetime.datetime(2020, 6, 10, 0, 7, 56, 210726), datetime.datetime(2020, 6, 24, 0, 7, 56, 210726), datetime.datetime(2020, 6, 10, 0, 7, 56, 210726), datetime.datetime(2020, 6, 24, 0, 7, 56, 210726))
2020-06-10 00:07:56,220 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:07:56,220 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:56,220 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:56,220 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:56,220 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:56,224 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:56,224 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:07:56,225 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,225 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,228 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-10 00:07:56,501 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:07:56,504 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:07:56,505 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:56,508 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:07:56,512 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:56,514 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:07:56,513 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:56,514 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:07:56,512 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:07:56,514 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:07:56,515 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,517 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,516 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:56,519 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:07:56,515 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,517 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,519 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,521 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:07:56,521 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,524 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,524 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:07:56,521 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,528 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:07:56,530 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:07:56,562 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:07:56,563 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:56,564 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:07:56,564 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:56,565 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:56,566 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-10 00:07:59,943 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-10 00:07:59,945 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:07:59,945 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-10 00:07:59,946 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:59,946 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:59,948 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:59,948 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:07:59,949 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:59,949 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:59,958 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:07:59,959 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 6, 10, 0, 7, 59, 950162), datetime.datetime(2020, 6, 24, 0, 7, 59, 950162), datetime.datetime(2020, 6, 10, 0, 7, 59, 950162), datetime.datetime(2020, 6, 24, 0, 7, 59, 950162), datetime.datetime(2020, 6, 10, 0, 7, 59, 950162), datetime.datetime(2020, 6, 24, 0, 7, 59, 950162))
2020-06-10 00:07:59,959 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:07:59,960 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:07:59,960 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:07:59,960 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:59,960 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:07:59,964 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:07:59,964 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:07:59,965 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:07:59,965 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:07:59,968 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-10 00:08:00,217 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-10 00:08:00,220 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-10 00:08:00,224 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-10 00:08:00,227 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-10 00:08:00,228 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:08:00,229 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:08:00,230 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:08:00,231 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:08:00,232 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-10 00:08:00,232 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-10 00:08:00,232 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-10 00:08:00,232 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-10 00:08:00,233 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:08:00,233 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:08:00,235 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:08:00,234 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:08:00,234 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:08:00,238 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:08:00,239 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:08:00,240 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:08:00,242 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-10 00:08:00,243 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-10 00:08:00,244 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-10 00:08:00,247 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-10 00:08:00,275 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-10 00:08:00,276 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:08:00,276 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-10 00:08:00,277 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:08:00,278 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:08:00,280 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-10 00:10:10,147 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-10 00:10:10,148 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:10,149 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-10 00:10:10,151 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,151 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,153 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:10:10,153 INFO sqlalchemy.engine.base.Engine Thread-49 : ('philip', 1, 1)
2020-06-10 00:10:10,154 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,154 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,164 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:10:10,164 INFO sqlalchemy.engine.base.Engine Thread-49 : (datetime.datetime(2020, 6, 10, 0, 10, 10, 155341), datetime.datetime(2020, 6, 24, 0, 10, 10, 155341), datetime.datetime(2020, 6, 10, 0, 10, 10, 155341), datetime.datetime(2020, 6, 24, 0, 10, 10, 155341), datetime.datetime(2020, 6, 10, 0, 10, 10, 155341), datetime.datetime(2020, 6, 24, 0, 10, 10, 155341))
2020-06-10 00:10:10,165 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:10:10,165 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:10:10,165 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:10:10,165 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:10:10,166 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:10:10,180 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:10:10,180 INFO sqlalchemy.engine.base.Engine Thread-49 : ('philip', 1, 1)
2020-06-10 00:10:10,181 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,181 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,185 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-10 00:10:10,462 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-10 00:10:10,463 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:10,463 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-10 00:10:10,464 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,464 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,467 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-10 00:10:10,596 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-10 00:10:10,597 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:10,597 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-10 00:10:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,602 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-10 00:10:10,603 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-10 00:10:10,605 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:10,610 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-10 00:10:10,608 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-10 00:10:10,611 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:10,611 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-10 00:10:10,613 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-10 00:10:10,614 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:10,614 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-10 00:10:10,615 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,615 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,616 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,617 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:10,617 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,618 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-10 00:10:10,618 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:10,622 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-10 00:10:10,623 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-10 00:10:14,426 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-10 00:10:14,427 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:14,427 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-10 00:10:14,428 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,428 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,430 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:10:14,430 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-06-10 00:10:14,430 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,431 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,439 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:10:14,440 INFO sqlalchemy.engine.base.Engine Thread-65 : (datetime.datetime(2020, 6, 10, 0, 10, 14, 431427), datetime.datetime(2020, 6, 24, 0, 10, 14, 431427), datetime.datetime(2020, 6, 10, 0, 10, 14, 431427), datetime.datetime(2020, 6, 24, 0, 10, 14, 431427), datetime.datetime(2020, 6, 10, 0, 10, 14, 431427), datetime.datetime(2020, 6, 24, 0, 10, 14, 431427))
2020-06-10 00:10:14,440 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:10:14,441 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:10:14,441 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:10:14,441 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:10:14,441 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:10:14,445 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:10:14,445 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-06-10 00:10:14,446 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,446 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,449 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-10 00:10:14,709 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-10 00:10:14,710 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:14,710 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-10 00:10:14,711 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,713 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,717 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-10 00:10:14,718 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-10 00:10:14,721 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-10 00:10:14,724 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-10 00:10:14,729 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:14,728 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:14,729 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-10 00:10:14,727 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:14,729 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-10 00:10:14,729 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-10 00:10:14,730 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,730 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,731 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,731 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,732 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,731 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,734 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-10 00:10:14,736 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-10 00:10:14,739 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-10 00:10:14,759 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-06-10 00:10:14,760 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:14,760 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-06-10 00:10:14,760 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:14,761 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:14,763 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-06-10 00:10:53,308 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-10 00:10:53,310 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:53,310 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-06-10 00:10:53,311 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:53,311 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:53,314 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:10:53,314 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-06-10 00:10:53,315 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:53,315 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:53,326 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:10:53,326 INFO sqlalchemy.engine.base.Engine Thread-80 : (datetime.datetime(2020, 6, 10, 0, 10, 53, 315910), datetime.datetime(2020, 6, 24, 0, 10, 53, 315910), datetime.datetime(2020, 6, 10, 0, 10, 53, 315910), datetime.datetime(2020, 6, 24, 0, 10, 53, 315910), datetime.datetime(2020, 6, 10, 0, 10, 53, 315910), datetime.datetime(2020, 6, 24, 0, 10, 53, 315910))
2020-06-10 00:10:53,327 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:10:53,327 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:10:53,327 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:10:53,327 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:10:53,328 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:10:53,343 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:10:53,343 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-06-10 00:10:53,344 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:53,344 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:53,348 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-10 00:10:54,715 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-06-10 00:10:54,716 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:10:54,716 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-06-10 00:10:54,717 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:10:54,717 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:10:54,720 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-06-10 00:11:00,402 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-10 00:11:00,403 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:00,404 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-10 00:11:00,404 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:00,405 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:00,408 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-10 00:11:00,410 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-10 00:11:00,411 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:00,411 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-06-10 00:11:00,415 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-10 00:11:00,418 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-10 00:11:00,422 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:00,419 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:00,422 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-10 00:11:00,418 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:00,422 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-10 00:11:00,422 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:00,425 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-10 00:11:00,425 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:00,426 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:00,428 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:00,429 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-10 00:11:00,429 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:00,432 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-10 00:11:25,477 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-10 00:11:25,478 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:25,478 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-10 00:11:25,479 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,479 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,482 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:11:25,482 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-06-10 00:11:25,482 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,483 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,492 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:11:25,492 INFO sqlalchemy.engine.base.Engine Thread-95 : (datetime.datetime(2020, 6, 10, 0, 11, 25, 483570), datetime.datetime(2020, 6, 24, 0, 11, 25, 483570), datetime.datetime(2020, 6, 10, 0, 11, 25, 483570), datetime.datetime(2020, 6, 24, 0, 11, 25, 483570), datetime.datetime(2020, 6, 10, 0, 11, 25, 483570), datetime.datetime(2020, 6, 24, 0, 11, 25, 483570))
2020-06-10 00:11:25,493 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:11:25,493 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:11:25,493 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:11:25,493 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:11:25,493 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:11:25,497 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:11:25,497 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-06-10 00:11:25,498 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,498 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,501 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-10 00:11:25,745 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-10 00:11:25,746 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:25,746 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-10 00:11:25,747 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,747 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,750 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-10 00:11:25,825 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-10 00:11:25,829 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-10 00:11:25,830 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:25,831 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:25,831 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-10 00:11:25,831 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-10 00:11:25,838 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,838 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-06-10 00:11:25,840 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:25,840 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-06-10 00:11:25,839 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,839 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,842 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,834 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-10 00:11:25,844 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,847 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,846 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-10 00:11:25,847 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:11:25,849 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-10 00:11:25,849 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-06-10 00:11:25,845 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-10 00:11:25,852 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:11:25,852 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:11:25,855 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-10 00:15:53,117 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:15:53,117 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,118 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:15:53,118 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:15:53,119 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:15:53,119 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,119 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:15:53,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:15:53,120 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:15:53,120 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:15:53,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:15:53,121 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:15:53,121 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:15:53,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:15:53,122 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:15:53,122 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,123 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:15:53,123 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,124 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:15:53,124 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,124 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:15:53,127 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:15:53,127 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:15:53,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:53,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:53,130 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:15:53,130 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:15:53,131 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:53,131 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:53,142 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:15:53,142 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:15:53,143 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:15:53,143 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:15:53,143 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:15:53,143 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:15:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:15:53,219 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:15:53,219 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:15:53,220 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:53,220 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:53,224 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:15:54,698 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:15:54,701 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:15:54,701 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:15:54,702 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:54,702 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:54,717 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:15:54,776 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:15:54,777 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:15:54,777 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:15:54,779 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:54,783 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:54,788 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:15:54,790 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:15:54,791 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:15:54,792 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:15:54,793 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:54,793 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:54,794 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:15:54,796 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:15:54,796 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:15:54,797 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:15:54,798 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:54,799 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:54,801 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:15:54,801 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:15:54,804 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:15:54,804 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:15:54,805 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:15:54,806 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:15:54,808 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:16:04,279 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:16:04,280 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:04,280 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:16:04,281 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:04,281 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:04,283 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:04,283 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:16:04,284 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:04,284 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:08,835 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-06-10 00:16:08,839 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-06-10 00:16:08,840 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:08,840 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-06-10 00:16:08,841 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:08,841 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:08,843 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:08,843 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-06-10 00:16:08,844 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:08,844 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:08,852 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:16:08,852 INFO sqlalchemy.engine.base.Engine Thread-25 : ()
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:08,853 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:16:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:16:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:08,858 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:08,859 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-06-10 00:16:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:08,863 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-06-10 00:16:09,096 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-10 00:16:09,097 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:09,097 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-06-10 00:16:09,098 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:09,098 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:09,101 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-10 00:16:09,186 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-10 00:16:09,187 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:09,188 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-10 00:16:09,190 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:09,192 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-06-10 00:16:09,194 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-06-10 00:16:09,195 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:09,202 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-06-10 00:16:09,196 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:09,200 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:09,203 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-06-10 00:16:09,199 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-06-10 00:16:09,204 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-06-10 00:16:09,205 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:09,206 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-06-10 00:16:09,205 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:09,206 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:09,206 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:09,209 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:09,209 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-06-10 00:16:09,207 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:09,212 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:09,212 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-06-10 00:16:09,214 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-06-10 00:16:11,411 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-06-10 00:16:11,412 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:11,412 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-06-10 00:16:11,413 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,413 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,415 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:11,415 INFO sqlalchemy.engine.base.Engine Thread-40 : ('philip', 1, 1)
2020-06-10 00:16:11,416 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,416 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,424 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:16:11,424 INFO sqlalchemy.engine.base.Engine Thread-40 : ()
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:11,425 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:11,426 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:16:11,426 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:11,426 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:11,426 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:11,426 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:11,426 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:16:11,426 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:11,430 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:11,430 INFO sqlalchemy.engine.base.Engine Thread-40 : ('philip', 1, 1)
2020-06-10 00:16:11,431 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,431 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,435 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-06-10 00:16:11,666 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-10 00:16:11,667 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:11,667 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-06-10 00:16:11,668 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,668 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,671 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-10 00:16:11,721 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-06-10 00:16:11,722 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:11,723 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-06-10 00:16:11,725 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-06-10 00:16:11,726 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:11,726 INFO sqlalchemy.engine.base.Engine Thread-52 : (1, 1)
2020-06-10 00:16:11,727 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,728 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,728 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,730 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-06-10 00:16:11,731 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,735 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-06-10 00:16:11,737 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:11,737 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-06-10 00:16:11,737 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,739 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-06-10 00:16:11,739 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,742 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-06-10 00:16:11,746 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:11,747 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-06-10 00:16:11,745 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-06-10 00:16:11,748 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:11,748 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:11,750 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-06-10 00:16:17,682 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-06-10 00:16:17,683 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:17,683 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-06-10 00:16:17,684 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:17,684 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:17,687 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:17,687 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-06-10 00:16:17,687 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:17,687 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:17,696 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:16:17,696 INFO sqlalchemy.engine.base.Engine Thread-55 : (datetime.datetime(2020, 6, 10, 0, 16, 17, 688398), datetime.datetime(2020, 6, 24, 0, 16, 17, 688398), datetime.datetime(2020, 6, 10, 0, 16, 17, 688398), datetime.datetime(2020, 6, 24, 0, 16, 17, 688398), datetime.datetime(2020, 6, 10, 0, 16, 17, 688398), datetime.datetime(2020, 6, 24, 0, 16, 17, 688398))
2020-06-10 00:16:17,697 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:16:17,697 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:17,697 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:17,697 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:17,697 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:17,701 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:17,701 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-06-10 00:16:17,702 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:17,703 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:17,705 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-06-10 00:16:17,952 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-10 00:16:17,954 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:17,954 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-10 00:16:17,955 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:17,955 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:17,957 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-10 00:16:18,020 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-10 00:16:18,022 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:18,022 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-06-10 00:16:18,025 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-10 00:16:18,026 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:18,026 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-10 00:16:18,026 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:18,027 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:18,027 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:18,030 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-10 00:16:18,030 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:18,033 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-06-10 00:16:18,037 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:18,037 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-06-10 00:16:18,039 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-06-10 00:16:18,040 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:18,040 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-06-10 00:16:18,041 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:18,041 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:18,042 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:18,044 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-06-10 00:16:18,044 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:18,046 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-06-10 00:16:18,049 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-06-10 00:16:50,622 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-06-10 00:16:50,623 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:50,623 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-06-10 00:16:50,624 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,625 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,627 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:50,627 INFO sqlalchemy.engine.base.Engine Thread-70 : ('philip', 1, 1)
2020-06-10 00:16:50,628 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,628 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,637 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:16:50,637 INFO sqlalchemy.engine.base.Engine Thread-70 : (datetime.datetime(2020, 6, 10, 0, 16, 50, 629205), datetime.datetime(2020, 6, 24, 0, 16, 50, 629205), datetime.datetime(2020, 6, 10, 0, 16, 50, 629205), datetime.datetime(2020, 6, 24, 0, 16, 50, 629205), datetime.datetime(2020, 6, 10, 0, 16, 50, 629205), datetime.datetime(2020, 6, 24, 0, 16, 50, 629205))
2020-06-10 00:16:50,638 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:16:50,638 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:50,638 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:50,638 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:50,638 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:50,643 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:50,643 INFO sqlalchemy.engine.base.Engine Thread-70 : ('philip', 1, 1)
2020-06-10 00:16:50,643 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,643 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,646 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-06-10 00:16:50,898 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-10 00:16:50,899 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:50,899 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-06-10 00:16:50,900 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,900 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,902 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-10 00:16:50,973 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-06-10 00:16:50,974 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-06-10 00:16:50,977 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:50,977 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-06-10 00:16:50,976 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:50,978 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-06-10 00:16:50,978 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,980 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,983 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-06-10 00:16:50,985 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-06-10 00:16:50,986 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-06-10 00:16:50,987 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,991 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,990 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:50,988 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:50,994 INFO sqlalchemy.engine.base.Engine Thread-83 : (1, 1)
2020-06-10 00:16:50,993 INFO sqlalchemy.engine.base.Engine Thread-84 : (1, 1)
2020-06-10 00:16:50,993 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-06-10 00:16:50,994 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,995 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,996 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:50,997 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:50,999 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-06-10 00:16:51,000 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-06-10 00:16:59,437 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-06-10 00:16:59,438 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:59,438 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-06-10 00:16:59,439 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,439 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,441 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:59,441 INFO sqlalchemy.engine.base.Engine Thread-85 : ('philip', 1, 1)
2020-06-10 00:16:59,442 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,442 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,450 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:16:59,450 INFO sqlalchemy.engine.base.Engine Thread-85 : ()
2020-06-10 00:16:59,451 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:16:59,451 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:59,451 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:59,451 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:16:59,451 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:59,451 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:59,451 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:16:59,452 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:16:59,456 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:16:59,457 INFO sqlalchemy.engine.base.Engine Thread-85 : ('philip', 1, 1)
2020-06-10 00:16:59,457 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,457 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,461 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-06-10 00:16:59,703 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-10 00:16:59,705 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:59,705 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-10 00:16:59,705 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,706 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,708 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-10 00:16:59,776 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-10 00:16:59,777 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:59,777 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-10 00:16:59,780 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-06-10 00:16:59,782 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,783 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:59,784 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-06-10 00:16:59,784 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,787 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-06-10 00:16:59,788 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-06-10 00:16:59,789 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:59,792 INFO sqlalchemy.engine.base.Engine Thread-98 : (1, 1)
2020-06-10 00:16:59,792 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-10 00:16:59,790 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:16:59,793 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,793 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,795 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,794 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,794 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-06-10 00:16:59,798 INFO sqlalchemy.engine.base.Engine Thread-98 : ROLLBACK
2020-06-10 00:16:59,799 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-06-10 00:16:59,800 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:16:59,801 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:16:59,803 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-06-10 00:21:44,104 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-06-10 00:21:44,106 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:44,106 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-06-10 00:21:44,108 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,109 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,111 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:21:44,111 INFO sqlalchemy.engine.base.Engine Thread-100 : ('philip', 1, 1)
2020-06-10 00:21:44,112 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,112 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,122 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:21:44,122 INFO sqlalchemy.engine.base.Engine Thread-100 : ()
2020-06-10 00:21:44,123 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:21:44,123 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:44,124 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:44,125 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:44,125 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:21:44,125 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:21:44,142 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:21:44,142 INFO sqlalchemy.engine.base.Engine Thread-100 : ('philip', 1, 1)
2020-06-10 00:21:44,143 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,143 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,147 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-06-10 00:21:44,410 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-10 00:21:44,411 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:44,412 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-10 00:21:44,412 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,413 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,415 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-10 00:21:44,489 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-06-10 00:21:44,490 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:44,490 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-06-10 00:21:44,493 INFO sqlalchemy.engine.base.Engine Thread-112 : BEGIN (implicit)
2020-06-10 00:21:44,494 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:44,494 INFO sqlalchemy.engine.base.Engine Thread-112 : (1, 1)
2020-06-10 00:21:44,495 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,496 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,496 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,496 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,500 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-06-10 00:21:44,503 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-06-10 00:21:44,507 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-06-10 00:21:44,508 INFO sqlalchemy.engine.base.Engine Thread-112 : ROLLBACK
2020-06-10 00:21:44,509 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:44,510 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:44,511 INFO sqlalchemy.engine.base.Engine Thread-113 : (1, 1)
2020-06-10 00:21:44,512 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-06-10 00:21:44,513 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,514 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:44,514 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,515 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:44,518 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-06-10 00:21:44,519 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-06-10 00:21:48,932 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-06-10 00:21:48,933 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:48,933 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-06-10 00:21:48,934 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:48,934 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:48,936 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:21:48,936 INFO sqlalchemy.engine.base.Engine Thread-115 : ('philip', 1, 1)
2020-06-10 00:21:48,937 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:48,937 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:48,945 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:21:48,945 INFO sqlalchemy.engine.base.Engine Thread-115 : ()
2020-06-10 00:21:48,946 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:21:48,946 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:48,946 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:48,947 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:21:48,948 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:21:48,948 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:21:48,948 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:21:48,952 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:21:48,952 INFO sqlalchemy.engine.base.Engine Thread-115 : ('philip', 1, 1)
2020-06-10 00:21:48,953 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:48,953 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:48,957 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-06-10 00:21:49,189 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-10 00:21:49,190 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:49,190 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-10 00:21:49,191 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:49,191 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:49,194 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-10 00:21:49,260 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-06-10 00:21:49,262 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:49,262 INFO sqlalchemy.engine.base.Engine Thread-126 : (1, 1)
2020-06-10 00:21:49,262 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:49,263 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:49,268 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-06-10 00:21:49,269 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:49,269 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-06-10 00:21:49,270 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-06-10 00:21:49,273 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-06-10 00:21:49,274 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:49,275 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-06-10 00:21:49,275 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:49,275 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:49,276 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:49,276 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:49,279 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-06-10 00:21:49,281 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-06-10 00:21:49,282 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:21:49,284 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-06-10 00:21:49,285 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-06-10 00:21:49,286 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:21:49,287 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:21:49,289 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-06-10 00:24:06,871 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-06-10 00:24:06,872 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:06,872 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-06-10 00:24:06,873 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:06,873 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:06,875 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:24:06,875 INFO sqlalchemy.engine.base.Engine Thread-130 : ('philip', 1, 1)
2020-06-10 00:24:06,876 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:06,876 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:06,879 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:24:06,879 INFO sqlalchemy.engine.base.Engine Thread-130 : (75,)
2020-06-10 00:24:06,880 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:24:06,881 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:24:06,881 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:24:06,882 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:24:06,882 INFO sqlalchemy.engine.base.Engine Thread-130 : (78,)
2020-06-10 00:24:06,882 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:24:06,883 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:24:06,883 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:24:06,883 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:24:06,897 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:24:06,897 INFO sqlalchemy.engine.base.Engine Thread-130 : ('philip', 1, 1)
2020-06-10 00:24:06,898 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:06,898 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:12,300 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-06-10 00:24:12,557 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-06-10 00:24:12,558 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:12,558 INFO sqlalchemy.engine.base.Engine Thread-140 : (1, 1)
2020-06-10 00:24:12,559 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:12,559 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:12,562 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-06-10 00:24:12,643 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-06-10 00:24:12,644 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:12,645 INFO sqlalchemy.engine.base.Engine Thread-141 : (1, 1)
2020-06-10 00:24:12,648 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-06-10 00:24:12,649 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:12,650 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:12,650 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:12,652 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-06-10 00:24:12,656 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-06-10 00:24:12,658 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-06-10 00:24:12,659 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:12,659 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-06-10 00:24:12,660 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:12,661 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:12,660 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:12,664 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:12,667 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-06-10 00:24:12,665 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-06-10 00:24:12,662 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-06-10 00:24:12,669 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:12,670 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-06-10 00:24:12,671 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:12,671 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:12,673 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-06-10 00:24:28,879 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-06-10 00:24:28,880 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:28,881 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-06-10 00:24:28,882 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:28,882 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:28,884 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:24:28,884 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-06-10 00:24:28,885 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:28,885 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:28,887 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:24:28,887 INFO sqlalchemy.engine.base.Engine Thread-145 : (75,)
2020-06-10 00:24:28,888 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:24:28,888 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:24:28,888 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:24:28,889 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:24:28,890 INFO sqlalchemy.engine.base.Engine Thread-145 : (78,)
2020-06-10 00:24:28,890 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:24:28,890 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:24:28,890 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:24:28,890 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:24:28,896 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:24:28,896 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-06-10 00:24:28,896 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:28,897 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:34,160 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-06-10 00:24:34,435 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-06-10 00:24:34,436 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:34,436 INFO sqlalchemy.engine.base.Engine Thread-155 : (1, 1)
2020-06-10 00:24:34,437 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:34,437 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:34,439 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-06-10 00:24:34,521 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-06-10 00:24:34,522 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:34,522 INFO sqlalchemy.engine.base.Engine Thread-156 : (1, 1)
2020-06-10 00:24:34,524 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-06-10 00:24:34,525 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:34,525 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-06-10 00:24:34,526 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:34,526 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:34,536 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:34,533 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-10 00:24:34,537 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:34,538 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-06-10 00:24:34,535 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-06-10 00:24:34,530 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:34,543 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-06-10 00:24:34,541 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:34,540 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-06-10 00:24:34,544 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-06-10 00:24:34,541 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:34,545 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:34,546 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:34,546 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:34,548 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-06-10 00:24:34,550 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-10 00:24:49,228 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-06-10 00:24:49,229 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:49,229 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-06-10 00:24:49,230 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,230 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,232 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:24:49,232 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-06-10 00:24:49,233 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,233 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,242 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:24:49,242 INFO sqlalchemy.engine.base.Engine Thread-160 : (datetime.datetime(2020, 6, 10, 0, 24, 49, 234228), datetime.datetime(2020, 6, 24, 0, 24, 49, 234228), datetime.datetime(2020, 6, 10, 0, 24, 49, 234228), datetime.datetime(2020, 6, 24, 0, 24, 49, 234228), datetime.datetime(2020, 6, 10, 0, 24, 49, 234228), datetime.datetime(2020, 6, 24, 0, 24, 49, 234228))
2020-06-10 00:24:49,243 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:24:49,243 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:24:49,243 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:24:49,244 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:24:49,244 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:24:49,248 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:24:49,248 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-06-10 00:24:49,248 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,249 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,251 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-06-10 00:24:49,504 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-06-10 00:24:49,505 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:49,506 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-06-10 00:24:49,509 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-06-10 00:24:49,511 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-06-10 00:24:49,511 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,515 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,514 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:49,512 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:49,517 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-06-10 00:24:49,519 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-06-10 00:24:49,519 INFO sqlalchemy.engine.base.Engine Thread-171 : (1, 1)
2020-06-10 00:24:49,519 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-06-10 00:24:49,520 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:49,523 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-06-10 00:24:49,522 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,523 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,524 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,524 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,527 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-06-10 00:24:49,528 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-06-10 00:24:49,528 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,530 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,532 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-06-10 00:24:49,551 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-06-10 00:24:49,552 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:24:49,552 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-06-10 00:24:49,553 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:24:49,553 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:24:49,555 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-06-10 00:25:25,585 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-06-10 00:25:25,586 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:25,586 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-06-10 00:25:25,587 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:25,588 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:25,590 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:25:25,590 INFO sqlalchemy.engine.base.Engine Thread-175 : ('philip', 1, 1)
2020-06-10 00:25:25,590 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:25,591 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:25,600 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:25:25,600 INFO sqlalchemy.engine.base.Engine Thread-175 : (datetime.datetime(2020, 6, 10, 0, 25, 25, 591594), datetime.datetime(2020, 6, 24, 0, 25, 25, 591594), datetime.datetime(2020, 6, 10, 0, 25, 25, 591594), datetime.datetime(2020, 6, 24, 0, 25, 25, 591594), datetime.datetime(2020, 6, 10, 0, 25, 25, 591594), datetime.datetime(2020, 6, 24, 0, 25, 25, 591594))
2020-06-10 00:25:25,600 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:25:25,601 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:25:25,601 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:25,601 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:25,601 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:25,605 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:25:25,605 INFO sqlalchemy.engine.base.Engine Thread-175 : ('philip', 1, 1)
2020-06-10 00:25:25,606 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:25,606 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:25,609 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-06-10 00:25:25,715 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-06-10 00:25:25,716 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:25,716 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-06-10 00:25:25,717 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:25,717 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:25,719 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-06-10 00:25:38,845 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-06-10 00:25:38,846 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:38,846 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-06-10 00:25:38,846 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:38,846 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:38,849 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:25:38,849 INFO sqlalchemy.engine.base.Engine Thread-177 : ('philip', 1, 1)
2020-06-10 00:25:38,849 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:38,850 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:38,857 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:25:38,857 INFO sqlalchemy.engine.base.Engine Thread-177 : ()
2020-06-10 00:25:38,858 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:25:38,858 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:38,859 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:38,860 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:25:38,860 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:25:38,864 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:25:38,864 INFO sqlalchemy.engine.base.Engine Thread-177 : ('philip', 1, 1)
2020-06-10 00:25:38,865 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:38,865 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:38,869 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-06-10 00:25:39,125 INFO sqlalchemy.engine.base.Engine Thread-187 : BEGIN (implicit)
2020-06-10 00:25:39,126 INFO sqlalchemy.engine.base.Engine Thread-187 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:39,126 INFO sqlalchemy.engine.base.Engine Thread-187 : (1, 1)
2020-06-10 00:25:39,127 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:39,127 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:39,129 INFO sqlalchemy.engine.base.Engine Thread-187 : ROLLBACK
2020-06-10 00:25:39,190 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-06-10 00:25:39,191 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:39,194 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-06-10 00:25:39,194 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-06-10 00:25:39,196 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:39,197 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-06-10 00:25:39,199 INFO sqlalchemy.engine.base.Engine Thread-190 : BEGIN (implicit)
2020-06-10 00:25:39,200 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:39,201 INFO sqlalchemy.engine.base.Engine Thread-190 : (1, 1)
2020-06-10 00:25:39,201 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:39,202 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:39,204 INFO sqlalchemy.engine.base.Engine Thread-190 : ROLLBACK
2020-06-10 00:25:39,206 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:39,206 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:39,208 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:39,207 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-06-10 00:25:39,208 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:39,210 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:39,214 INFO sqlalchemy.engine.base.Engine Thread-191 : (1, 1)
2020-06-10 00:25:39,214 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-06-10 00:25:39,212 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-06-10 00:25:39,215 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:39,217 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:39,219 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-06-10 00:25:53,498 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-06-10 00:25:53,499 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:25:53,499 INFO sqlalchemy.engine.base.Engine Thread-192 : (1, 1)
2020-06-10 00:25:53,499 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:53,500 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:53,502 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:25:53,502 INFO sqlalchemy.engine.base.Engine Thread-192 : ('philip', 1, 1)
2020-06-10 00:25:53,503 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:53,503 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:53,511 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:25:53,511 INFO sqlalchemy.engine.base.Engine Thread-192 : ()
2020-06-10 00:25:53,512 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:25:53,513 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:53,513 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:53,513 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:25:53,513 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:25:53,513 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:53,513 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:25:53,513 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:53,514 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:25:53,514 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:53,514 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:53,514 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:25:53,514 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:25:53,514 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:25:53,514 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:25:53,518 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:25:53,519 INFO sqlalchemy.engine.base.Engine Thread-192 : ('philip', 1, 1)
2020-06-10 00:25:53,519 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:25:53,520 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:25:53,524 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-06-10 00:26:00,400 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-06-10 00:26:00,401 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:26:00,401 INFO sqlalchemy.engine.base.Engine Thread-193 : (1, 1)
2020-06-10 00:26:00,401 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:26:00,402 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:26:00,404 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-06-10 00:27:04,583 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-06-10 00:27:04,584 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:04,585 INFO sqlalchemy.engine.base.Engine Thread-194 : (1, 1)
2020-06-10 00:27:04,585 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,586 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,588 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:04,588 INFO sqlalchemy.engine.base.Engine Thread-194 : ('philip', 1, 1)
2020-06-10 00:27:04,589 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,589 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,591 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:27:04,591 INFO sqlalchemy.engine.base.Engine Thread-194 : (0,)
2020-06-10 00:27:04,592 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:04,592 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:04,592 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:27:04,593 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:27:04,594 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:27:04,596 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-06-10 00:27:04,596 INFO sqlalchemy.engine.base.Engine Thread-194 : (0, 1)
2020-06-10 00:27:04,597 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:04,597 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:04,598 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:27:04,598 INFO sqlalchemy.engine.base.Engine Thread-194 : (66,)
2020-06-10 00:27:04,598 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:04,599 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:27:04,599 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:27:04,618 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:04,618 INFO sqlalchemy.engine.base.Engine Thread-194 : ('philip', 1, 1)
2020-06-10 00:27:04,618 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,619 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,622 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-06-10 00:27:04,885 INFO sqlalchemy.engine.base.Engine Thread-204 : BEGIN (implicit)
2020-06-10 00:27:04,886 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:04,886 INFO sqlalchemy.engine.base.Engine Thread-204 : (1, 1)
2020-06-10 00:27:04,887 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,887 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,889 INFO sqlalchemy.engine.base.Engine Thread-204 : ROLLBACK
2020-06-10 00:27:04,959 INFO sqlalchemy.engine.base.Engine Thread-205 : BEGIN (implicit)
2020-06-10 00:27:04,961 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:04,963 INFO sqlalchemy.engine.base.Engine Thread-206 : BEGIN (implicit)
2020-06-10 00:27:04,963 INFO sqlalchemy.engine.base.Engine Thread-205 : (1, 1)
2020-06-10 00:27:04,964 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:04,964 INFO sqlalchemy.engine.base.Engine Thread-206 : (1, 1)
2020-06-10 00:27:04,965 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,965 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,967 INFO sqlalchemy.engine.base.Engine Thread-205 : ROLLBACK
2020-06-10 00:27:04,967 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,969 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,971 INFO sqlalchemy.engine.base.Engine Thread-206 : ROLLBACK
2020-06-10 00:27:04,974 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-06-10 00:27:04,977 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-06-10 00:27:04,978 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:04,979 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:04,979 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-06-10 00:27:04,980 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-06-10 00:27:04,980 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,981 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:04,981 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,981 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:04,985 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-06-10 00:27:04,986 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-06-10 00:27:07,785 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-06-10 00:27:07,786 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:07,786 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-06-10 00:27:07,786 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:07,787 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:07,789 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:07,789 INFO sqlalchemy.engine.base.Engine Thread-209 : ('philip', 1, 1)
2020-06-10 00:27:07,789 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:07,790 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:07,791 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:27:07,791 INFO sqlalchemy.engine.base.Engine Thread-209 : ('0', 1)
2020-06-10 00:27:07,791 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:07,794 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:27:07,794 INFO sqlalchemy.engine.base.Engine Thread-209 : (0,)
2020-06-10 00:27:07,794 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:27:07,795 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:27:07,796 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:27:07,798 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:27:07,799 INFO sqlalchemy.engine.base.Engine Thread-209 : (0,)
2020-06-10 00:27:07,799 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:27:07,800 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:27:07,801 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:27:07,802 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:27:07,803 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:27:07,804 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:27:07,805 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:27:07,806 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:27:07,806 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:27:07,806 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:27:07,806 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:27:07,806 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:27:07,806 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:27:07,806 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:27:07,838 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:07,838 INFO sqlalchemy.engine.base.Engine Thread-209 : ('philip', 1, 1)
2020-06-10 00:27:07,838 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:07,838 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:07,843 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-06-10 00:27:08,090 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-06-10 00:27:08,091 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:08,091 INFO sqlalchemy.engine.base.Engine Thread-219 : (1, 1)
2020-06-10 00:27:08,092 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:08,092 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:08,095 INFO sqlalchemy.engine.base.Engine Thread-219 : ROLLBACK
2020-06-10 00:27:08,170 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-06-10 00:27:08,171 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:08,171 INFO sqlalchemy.engine.base.Engine Thread-220 : (1, 1)
2020-06-10 00:27:08,174 INFO sqlalchemy.engine.base.Engine Thread-221 : BEGIN (implicit)
2020-06-10 00:27:08,175 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:08,176 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:08,185 INFO sqlalchemy.engine.base.Engine Thread-221 : (1, 1)
2020-06-10 00:27:08,181 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-06-10 00:27:08,185 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:08,184 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-06-10 00:27:08,186 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:08,188 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-06-10 00:27:08,190 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:08,190 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-06-10 00:27:08,191 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:08,191 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-06-10 00:27:08,191 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:08,193 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:08,195 INFO sqlalchemy.engine.base.Engine Thread-221 : ROLLBACK
2020-06-10 00:27:08,192 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:08,198 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-06-10 00:27:08,198 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:08,200 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:08,202 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-06-10 00:27:20,158 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-06-10 00:27:20,159 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:20,159 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-06-10 00:27:20,160 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,161 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,163 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:20,163 INFO sqlalchemy.engine.base.Engine Thread-224 : ('philip', 1, 1)
2020-06-10 00:27:20,164 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,164 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,166 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:27:20,166 INFO sqlalchemy.engine.base.Engine Thread-224 : (0,)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:27:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:27:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:27:20,169 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:27:20,170 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:27:20,170 INFO sqlalchemy.engine.base.Engine Thread-224 : (66, 1)
2020-06-10 00:27:20,171 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:20,171 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:20,172 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:27:20,172 INFO sqlalchemy.engine.base.Engine Thread-224 : (66,)
2020-06-10 00:27:20,173 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:20,173 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:27:20,173 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:27:20,177 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:20,177 INFO sqlalchemy.engine.base.Engine Thread-224 : ('philip', 1, 1)
2020-06-10 00:27:20,178 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,178 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,181 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-06-10 00:27:20,429 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-06-10 00:27:20,430 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:20,430 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-06-10 00:27:20,431 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,431 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,434 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-06-10 00:27:20,515 INFO sqlalchemy.engine.base.Engine Thread-235 : BEGIN (implicit)
2020-06-10 00:27:20,518 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:20,518 INFO sqlalchemy.engine.base.Engine Thread-235 : (1, 1)
2020-06-10 00:27:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,521 INFO sqlalchemy.engine.base.Engine Thread-237 : BEGIN (implicit)
2020-06-10 00:27:20,522 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,530 INFO sqlalchemy.engine.base.Engine Thread-235 : ROLLBACK
2020-06-10 00:27:20,526 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:20,528 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-06-10 00:27:20,523 INFO sqlalchemy.engine.base.Engine Thread-236 : BEGIN (implicit)
2020-06-10 00:27:20,531 INFO sqlalchemy.engine.base.Engine Thread-237 : (1, 1)
2020-06-10 00:27:20,535 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,534 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:20,535 INFO sqlalchemy.engine.base.Engine Thread-236 : (1, 1)
2020-06-10 00:27:20,535 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,533 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:20,536 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-06-10 00:27:20,537 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,538 INFO sqlalchemy.engine.base.Engine Thread-237 : ROLLBACK
2020-06-10 00:27:20,539 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:20,539 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,540 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:20,542 INFO sqlalchemy.engine.base.Engine Thread-236 : ROLLBACK
2020-06-10 00:27:20,545 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-06-10 00:27:28,007 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-06-10 00:27:28,008 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:28,008 INFO sqlalchemy.engine.base.Engine Thread-239 : (1, 1)
2020-06-10 00:27:28,009 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,009 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,012 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:28,012 INFO sqlalchemy.engine.base.Engine Thread-239 : ('philip', 1, 1)
2020-06-10 00:27:28,013 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,013 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,016 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:27:28,016 INFO sqlalchemy.engine.base.Engine Thread-239 : (0,)
2020-06-10 00:27:28,017 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:28,017 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:28,017 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:27:28,018 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:27:28,019 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:27:28,021 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:27:28,021 INFO sqlalchemy.engine.base.Engine Thread-239 : ('78',)
2020-06-10 00:27:28,022 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:28,022 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:27:28,022 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:27:28,022 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:27:28,027 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:28,027 INFO sqlalchemy.engine.base.Engine Thread-239 : ('philip', 1, 1)
2020-06-10 00:27:28,028 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,028 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,032 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-06-10 00:27:28,272 INFO sqlalchemy.engine.base.Engine Thread-249 : BEGIN (implicit)
2020-06-10 00:27:28,274 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:28,274 INFO sqlalchemy.engine.base.Engine Thread-249 : (1, 1)
2020-06-10 00:27:28,275 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,275 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,278 INFO sqlalchemy.engine.base.Engine Thread-249 : ROLLBACK
2020-06-10 00:27:28,370 INFO sqlalchemy.engine.base.Engine Thread-250 : BEGIN (implicit)
2020-06-10 00:27:28,372 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:28,374 INFO sqlalchemy.engine.base.Engine Thread-251 : BEGIN (implicit)
2020-06-10 00:27:28,382 INFO sqlalchemy.engine.base.Engine Thread-251 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:28,378 INFO sqlalchemy.engine.base.Engine Thread-250 : (1, 1)
2020-06-10 00:27:28,380 INFO sqlalchemy.engine.base.Engine Thread-252 : BEGIN (implicit)
2020-06-10 00:27:28,378 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-06-10 00:27:28,382 INFO sqlalchemy.engine.base.Engine Thread-251 : (1, 1)
2020-06-10 00:27:28,383 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,384 INFO sqlalchemy.engine.base.Engine Thread-252 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:28,385 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:28,386 INFO sqlalchemy.engine.base.Engine Thread-253 : (1, 1)
2020-06-10 00:27:28,386 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,386 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,387 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,386 INFO sqlalchemy.engine.base.Engine Thread-252 : (1, 1)
2020-06-10 00:27:28,389 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,391 INFO sqlalchemy.engine.base.Engine Thread-251 : ROLLBACK
2020-06-10 00:27:28,391 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,392 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:28,393 INFO sqlalchemy.engine.base.Engine Thread-250 : ROLLBACK
2020-06-10 00:27:28,396 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-06-10 00:27:28,396 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:28,400 INFO sqlalchemy.engine.base.Engine Thread-252 : ROLLBACK
2020-06-10 00:27:34,185 INFO sqlalchemy.engine.base.Engine Thread-254 : BEGIN (implicit)
2020-06-10 00:27:34,186 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:34,186 INFO sqlalchemy.engine.base.Engine Thread-254 : (1, 1)
2020-06-10 00:27:34,187 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,187 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,189 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:34,189 INFO sqlalchemy.engine.base.Engine Thread-254 : ('philip', 1, 1)
2020-06-10 00:27:34,190 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,190 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,192 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:27:34,192 INFO sqlalchemy.engine.base.Engine Thread-254 : (0,)
2020-06-10 00:27:34,193 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:34,193 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:27:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:27:34,195 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:27:34,197 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:27:34,197 INFO sqlalchemy.engine.base.Engine Thread-254 : ('75',)
2020-06-10 00:27:34,198 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:34,198 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:27:34,198 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:27:34,202 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:34,202 INFO sqlalchemy.engine.base.Engine Thread-254 : ('philip', 1, 1)
2020-06-10 00:27:34,202 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,203 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,206 INFO sqlalchemy.engine.base.Engine Thread-254 : ROLLBACK
2020-06-10 00:27:34,467 INFO sqlalchemy.engine.base.Engine Thread-264 : BEGIN (implicit)
2020-06-10 00:27:34,470 INFO sqlalchemy.engine.base.Engine Thread-265 : BEGIN (implicit)
2020-06-10 00:27:34,473 INFO sqlalchemy.engine.base.Engine Thread-266 : BEGIN (implicit)
2020-06-10 00:27:34,480 INFO sqlalchemy.engine.base.Engine Thread-266 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:34,478 INFO sqlalchemy.engine.base.Engine Thread-267 : BEGIN (implicit)
2020-06-10 00:27:34,481 INFO sqlalchemy.engine.base.Engine Thread-267 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:34,481 INFO sqlalchemy.engine.base.Engine Thread-267 : (1, 1)
2020-06-10 00:27:34,480 INFO sqlalchemy.engine.base.Engine Thread-266 : (1, 1)
2020-06-10 00:27:34,479 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:34,482 INFO sqlalchemy.engine.base.Engine Thread-265 : (1, 1)
2020-06-10 00:27:34,476 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:34,482 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,482 INFO sqlalchemy.engine.base.Engine Thread-264 : (1, 1)
2020-06-10 00:27:34,483 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,483 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,484 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,484 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,488 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,487 INFO sqlalchemy.engine.base.Engine Thread-266 : ROLLBACK
2020-06-10 00:27:34,487 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,484 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,496 INFO sqlalchemy.engine.base.Engine Thread-265 : ROLLBACK
2020-06-10 00:27:34,493 INFO sqlalchemy.engine.base.Engine Thread-267 : ROLLBACK
2020-06-10 00:27:34,491 INFO sqlalchemy.engine.base.Engine Thread-264 : ROLLBACK
2020-06-10 00:27:34,528 INFO sqlalchemy.engine.base.Engine Thread-268 : BEGIN (implicit)
2020-06-10 00:27:34,529 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:34,529 INFO sqlalchemy.engine.base.Engine Thread-268 : (1, 1)
2020-06-10 00:27:34,530 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:34,530 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:34,532 INFO sqlalchemy.engine.base.Engine Thread-268 : ROLLBACK
2020-06-10 00:27:37,320 INFO sqlalchemy.engine.base.Engine Thread-269 : BEGIN (implicit)
2020-06-10 00:27:37,321 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:37,321 INFO sqlalchemy.engine.base.Engine Thread-269 : (1, 1)
2020-06-10 00:27:37,322 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,322 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,324 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:37,324 INFO sqlalchemy.engine.base.Engine Thread-269 : ('philip', 1, 1)
2020-06-10 00:27:37,325 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,325 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,326 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:27:37,327 INFO sqlalchemy.engine.base.Engine Thread-269 : ('0', 1)
2020-06-10 00:27:37,327 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:37,329 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:27:37,329 INFO sqlalchemy.engine.base.Engine Thread-269 : (0,)
2020-06-10 00:27:37,330 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:37,330 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:27:37,330 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:27:37,331 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:27:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:27:37,334 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:27:37,334 INFO sqlalchemy.engine.base.Engine Thread-269 : (0,)
2020-06-10 00:27:37,335 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:27:37,335 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:27:37,335 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:27:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:27:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:27:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:27:37,339 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:27:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:27:37,341 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:27:37,342 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:27:37,343 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:27:37,343 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:27:37,343 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:27:37,343 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:27:37,343 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:27:37,343 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:27:37,349 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:27:37,349 INFO sqlalchemy.engine.base.Engine Thread-269 : ('philip', 1, 1)
2020-06-10 00:27:37,350 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,350 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,355 INFO sqlalchemy.engine.base.Engine Thread-269 : ROLLBACK
2020-06-10 00:27:37,595 INFO sqlalchemy.engine.base.Engine Thread-279 : BEGIN (implicit)
2020-06-10 00:27:37,596 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:37,596 INFO sqlalchemy.engine.base.Engine Thread-279 : (1, 1)
2020-06-10 00:27:37,597 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,597 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,599 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-06-10 00:27:37,665 INFO sqlalchemy.engine.base.Engine Thread-280 : BEGIN (implicit)
2020-06-10 00:27:37,667 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:37,667 INFO sqlalchemy.engine.base.Engine Thread-280 : (1, 1)
2020-06-10 00:27:37,667 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,668 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,672 INFO sqlalchemy.engine.base.Engine Thread-281 : BEGIN (implicit)
2020-06-10 00:27:37,679 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:37,678 INFO sqlalchemy.engine.base.Engine Thread-283 : BEGIN (implicit)
2020-06-10 00:27:37,680 INFO sqlalchemy.engine.base.Engine Thread-281 : (1, 1)
2020-06-10 00:27:37,681 INFO sqlalchemy.engine.base.Engine Thread-282 : BEGIN (implicit)
2020-06-10 00:27:37,684 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:37,682 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:27:37,684 INFO sqlalchemy.engine.base.Engine Thread-282 : (1, 1)
2020-06-10 00:27:37,675 INFO sqlalchemy.engine.base.Engine Thread-280 : ROLLBACK
2020-06-10 00:27:37,684 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,684 INFO sqlalchemy.engine.base.Engine Thread-283 : (1, 1)
2020-06-10 00:27:37,685 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,686 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,687 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,689 INFO sqlalchemy.engine.base.Engine Thread-281 : ROLLBACK
2020-06-10 00:27:37,689 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:27:37,691 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-06-10 00:27:37,692 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:27:37,695 INFO sqlalchemy.engine.base.Engine Thread-283 : ROLLBACK
2020-06-10 00:28:14,682 INFO sqlalchemy.engine.base.Engine Thread-284 : BEGIN (implicit)
2020-06-10 00:28:14,683 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:14,683 INFO sqlalchemy.engine.base.Engine Thread-284 : (1, 1)
2020-06-10 00:28:14,684 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:14,685 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:14,687 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:28:14,687 INFO sqlalchemy.engine.base.Engine Thread-284 : ('philip', 1, 1)
2020-06-10 00:28:14,688 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:14,688 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:14,689 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:28:14,689 INFO sqlalchemy.engine.base.Engine Thread-284 : ('0', 1)
2020-06-10 00:28:14,690 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:14,692 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:28:14,693 INFO sqlalchemy.engine.base.Engine Thread-284 : (0,)
2020-06-10 00:28:14,693 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:14,693 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:28:14,694 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:28:14,695 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:28:14,697 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:28:14,697 INFO sqlalchemy.engine.base.Engine Thread-284 : (0,)
2020-06-10 00:28:14,698 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:14,698 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:28:14,698 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:28:14,699 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:28:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:28:14,701 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:28:14,702 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:28:14,703 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:28:14,704 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:28:14,709 INFO sqlalchemy.engine.base.Engine Thread-284 : INSERT INTO parameters (id, param_name, param_value, param_group, param_parent, param_disabled, param_critical) VALUES (%s, %s, %s, %s, %s, %s, %s)
2020-06-10 00:28:14,709 INFO sqlalchemy.engine.base.Engine Thread-284 : ('0', 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:28:14,710 INFO sqlalchemy.engine.base.Engine Thread-284 : COMMIT
2020-06-10 00:28:14,764 INFO sqlalchemy.engine.base.Engine Thread-285 : BEGIN (implicit)
2020-06-10 00:28:14,765 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:14,765 INFO sqlalchemy.engine.base.Engine Thread-285 : (1, 1)
2020-06-10 00:28:14,765 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:14,766 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:14,768 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:28:14,768 INFO sqlalchemy.engine.base.Engine Thread-285 : ('philip', 1, 1)
2020-06-10 00:28:14,769 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:14,769 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:14,771 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:28:14,771 INFO sqlalchemy.engine.base.Engine Thread-285 : (0,)
2020-06-10 00:28:14,772 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:14,772 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:28:14,773 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:28:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:28:14,776 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:28:14,777 INFO sqlalchemy.engine.base.Engine Thread-285 : (75, 1)
2020-06-10 00:28:14,777 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:14,777 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:28:14,778 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:28:14,778 INFO sqlalchemy.engine.base.Engine Thread-285 : (75,)
2020-06-10 00:28:14,779 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:14,779 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:28:14,779 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:28:14,783 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:28:14,783 INFO sqlalchemy.engine.base.Engine Thread-285 : ('philip', 1, 1)
2020-06-10 00:28:14,784 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:14,784 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:14,787 INFO sqlalchemy.engine.base.Engine Thread-285 : ROLLBACK
2020-06-10 00:28:15,040 INFO sqlalchemy.engine.base.Engine Thread-295 : BEGIN (implicit)
2020-06-10 00:28:15,042 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:15,042 INFO sqlalchemy.engine.base.Engine Thread-295 : (1, 1)
2020-06-10 00:28:15,043 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:15,043 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:15,045 INFO sqlalchemy.engine.base.Engine Thread-295 : ROLLBACK
2020-06-10 00:28:15,123 INFO sqlalchemy.engine.base.Engine Thread-297 : BEGIN (implicit)
2020-06-10 00:28:15,124 INFO sqlalchemy.engine.base.Engine Thread-296 : BEGIN (implicit)
2020-06-10 00:28:15,126 INFO sqlalchemy.engine.base.Engine Thread-297 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:15,128 INFO sqlalchemy.engine.base.Engine Thread-298 : BEGIN (implicit)
2020-06-10 00:28:15,130 INFO sqlalchemy.engine.base.Engine Thread-296 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:15,133 INFO sqlalchemy.engine.base.Engine Thread-299 : BEGIN (implicit)
2020-06-10 00:28:15,133 INFO sqlalchemy.engine.base.Engine Thread-297 : (1, 1)
2020-06-10 00:28:15,134 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:15,136 INFO sqlalchemy.engine.base.Engine Thread-298 : (1, 1)
2020-06-10 00:28:15,134 INFO sqlalchemy.engine.base.Engine Thread-296 : (1, 1)
2020-06-10 00:28:15,135 INFO sqlalchemy.engine.base.Engine Thread-299 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:15,136 INFO sqlalchemy.engine.base.Engine Thread-299 : (1, 1)
2020-06-10 00:28:15,136 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:15,137 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:15,138 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:15,140 INFO sqlalchemy.engine.base.Engine Thread-297 : ROLLBACK
2020-06-10 00:28:15,140 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:15,142 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:15,140 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:15,144 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:15,145 INFO sqlalchemy.engine.base.Engine Thread-298 : ROLLBACK
2020-06-10 00:28:15,146 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:15,147 INFO sqlalchemy.engine.base.Engine Thread-299 : ROLLBACK
2020-06-10 00:28:15,150 INFO sqlalchemy.engine.base.Engine Thread-296 : ROLLBACK
2020-06-10 00:28:19,808 INFO sqlalchemy.engine.base.Engine Thread-300 : BEGIN (implicit)
2020-06-10 00:28:19,809 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:19,809 INFO sqlalchemy.engine.base.Engine Thread-300 : (1, 1)
2020-06-10 00:28:19,810 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:19,810 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:19,813 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:28:19,813 INFO sqlalchemy.engine.base.Engine Thread-300 : ('philip', 1, 1)
2020-06-10 00:28:19,813 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:19,814 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:19,816 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:28:19,816 INFO sqlalchemy.engine.base.Engine Thread-300 : (0,)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:28:19,817 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:28:19,818 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:28:19,819 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:28:19,819 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:28:19,820 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:28:19,820 INFO sqlalchemy.engine.base.Engine Thread-300 : ('132',)
2020-06-10 00:28:19,821 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:19,827 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:28:19,827 INFO sqlalchemy.engine.base.Engine Thread-300 : ('philip', 1, 1)
2020-06-10 00:28:19,827 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:19,828 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:19,831 INFO sqlalchemy.engine.base.Engine Thread-300 : ROLLBACK
2020-06-10 00:28:20,084 INFO sqlalchemy.engine.base.Engine Thread-310 : BEGIN (implicit)
2020-06-10 00:28:20,085 INFO sqlalchemy.engine.base.Engine Thread-310 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:20,086 INFO sqlalchemy.engine.base.Engine Thread-310 : (1, 1)
2020-06-10 00:28:20,088 INFO sqlalchemy.engine.base.Engine Thread-311 : BEGIN (implicit)
2020-06-10 00:28:20,090 INFO sqlalchemy.engine.base.Engine Thread-312 : BEGIN (implicit)
2020-06-10 00:28:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:20,094 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:20,094 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:20,095 INFO sqlalchemy.engine.base.Engine Thread-312 : (1, 1)
2020-06-10 00:28:20,092 INFO sqlalchemy.engine.base.Engine Thread-311 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:20,096 INFO sqlalchemy.engine.base.Engine Thread-313 : BEGIN (implicit)
2020-06-10 00:28:20,097 INFO sqlalchemy.engine.base.Engine Thread-311 : (1, 1)
2020-06-10 00:28:20,098 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:20,099 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:20,102 INFO sqlalchemy.engine.base.Engine Thread-313 : (1, 1)
2020-06-10 00:28:20,102 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:20,102 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:20,100 INFO sqlalchemy.engine.base.Engine Thread-310 : ROLLBACK
2020-06-10 00:28:20,102 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:20,104 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:20,112 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:20,114 INFO sqlalchemy.engine.base.Engine Thread-313 : ROLLBACK
2020-06-10 00:28:20,105 INFO sqlalchemy.engine.base.Engine Thread-311 : ROLLBACK
2020-06-10 00:28:20,112 INFO sqlalchemy.engine.base.Engine Thread-312 : ROLLBACK
2020-06-10 00:28:20,136 INFO sqlalchemy.engine.base.Engine Thread-314 : BEGIN (implicit)
2020-06-10 00:28:20,137 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:20,137 INFO sqlalchemy.engine.base.Engine Thread-314 : (1, 1)
2020-06-10 00:28:20,138 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:20,138 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:20,141 INFO sqlalchemy.engine.base.Engine Thread-314 : ROLLBACK
2020-06-10 00:28:21,870 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-06-10 00:28:21,871 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:21,871 INFO sqlalchemy.engine.base.Engine Thread-315 : (1, 1)
2020-06-10 00:28:21,872 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:21,872 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:21,874 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:28:21,874 INFO sqlalchemy.engine.base.Engine Thread-315 : ('philip', 1, 1)
2020-06-10 00:28:21,875 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:21,875 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:21,876 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:28:21,877 INFO sqlalchemy.engine.base.Engine Thread-315 : ('0', 1)
2020-06-10 00:28:21,877 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:21,879 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:28:21,879 INFO sqlalchemy.engine.base.Engine Thread-315 : (0,)
2020-06-10 00:28:21,879 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:28:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:28:21,881 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:28:21,883 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:28:21,883 INFO sqlalchemy.engine.base.Engine Thread-315 : (0,)
2020-06-10 00:28:21,884 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:28:21,884 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:28:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:28:21,886 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:28:21,887 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:28:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:28:21,889 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:28:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:28:21,891 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:28:21,891 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:28:21,891 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:28:21,897 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:28:21,897 INFO sqlalchemy.engine.base.Engine Thread-315 : ('philip', 1, 1)
2020-06-10 00:28:21,898 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:21,898 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:21,902 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-06-10 00:28:22,138 INFO sqlalchemy.engine.base.Engine Thread-325 : BEGIN (implicit)
2020-06-10 00:28:22,139 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:22,139 INFO sqlalchemy.engine.base.Engine Thread-325 : (1, 1)
2020-06-10 00:28:22,139 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:22,139 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:22,142 INFO sqlalchemy.engine.base.Engine Thread-325 : ROLLBACK
2020-06-10 00:28:22,213 INFO sqlalchemy.engine.base.Engine Thread-326 : BEGIN (implicit)
2020-06-10 00:28:22,214 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:22,214 INFO sqlalchemy.engine.base.Engine Thread-326 : (1, 1)
2020-06-10 00:28:22,216 INFO sqlalchemy.engine.base.Engine Thread-327 : BEGIN (implicit)
2020-06-10 00:28:22,218 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:22,218 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:22,218 INFO sqlalchemy.engine.base.Engine Thread-327 : (1, 1)
2020-06-10 00:28:22,219 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:22,222 INFO sqlalchemy.engine.base.Engine Thread-328 : BEGIN (implicit)
2020-06-10 00:28:22,225 INFO sqlalchemy.engine.base.Engine Thread-326 : ROLLBACK
2020-06-10 00:28:22,226 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:22,229 INFO sqlalchemy.engine.base.Engine Thread-328 : (1, 1)
2020-06-10 00:28:22,228 INFO sqlalchemy.engine.base.Engine Thread-329 : BEGIN (implicit)
2020-06-10 00:28:22,227 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:22,231 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:22,231 INFO sqlalchemy.engine.base.Engine Thread-329 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:28:22,230 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:22,231 INFO sqlalchemy.engine.base.Engine Thread-329 : (1, 1)
2020-06-10 00:28:22,232 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:22,236 INFO sqlalchemy.engine.base.Engine Thread-328 : ROLLBACK
2020-06-10 00:28:22,234 INFO sqlalchemy.engine.base.Engine Thread-327 : ROLLBACK
2020-06-10 00:28:22,236 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:28:22,237 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:28:22,239 INFO sqlalchemy.engine.base.Engine Thread-329 : ROLLBACK
2020-06-10 00:29:27,099 INFO sqlalchemy.engine.base.Engine Thread-330 : BEGIN (implicit)
2020-06-10 00:29:27,101 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:27,101 INFO sqlalchemy.engine.base.Engine Thread-330 : (1, 1)
2020-06-10 00:29:27,101 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,102 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,104 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:27,104 INFO sqlalchemy.engine.base.Engine Thread-330 : ('philip', 1, 1)
2020-06-10 00:29:27,105 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,105 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,106 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:29:27,106 INFO sqlalchemy.engine.base.Engine Thread-330 : ('0', 1)
2020-06-10 00:29:27,107 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:27,109 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:29:27,109 INFO sqlalchemy.engine.base.Engine Thread-330 : (0,)
2020-06-10 00:29:27,110 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:27,110 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:29:27,110 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:29:27,110 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:29:27,110 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:29:27,110 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:29:27,111 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:29:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:29:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:29:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:29:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:29:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:29:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:29:27,114 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:29:27,114 INFO sqlalchemy.engine.base.Engine Thread-330 : (0,)
2020-06-10 00:29:27,115 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:27,115 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:29:27,115 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:29:27,115 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:29:27,115 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:27,115 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:29:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:29:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:29:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:29:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:29:27,120 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:29:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:29:27,125 INFO sqlalchemy.engine.base.Engine Thread-330 : INSERT INTO parameters (id, param_name, param_value, param_group, param_parent, param_disabled, param_critical) VALUES (%s, %s, %s, %s, %s, %s, %s)
2020-06-10 00:29:27,125 INFO sqlalchemy.engine.base.Engine Thread-330 : ('0', 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:29:27,126 INFO sqlalchemy.engine.base.Engine Thread-330 : COMMIT
2020-06-10 00:29:27,163 INFO sqlalchemy.engine.base.Engine Thread-331 : BEGIN (implicit)
2020-06-10 00:29:27,164 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:27,164 INFO sqlalchemy.engine.base.Engine Thread-331 : (1, 1)
2020-06-10 00:29:27,165 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,165 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,167 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:27,167 INFO sqlalchemy.engine.base.Engine Thread-331 : ('philip', 1, 1)
2020-06-10 00:29:27,167 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,168 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,169 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:29:27,169 INFO sqlalchemy.engine.base.Engine Thread-331 : (0,)
2020-06-10 00:29:27,170 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:27,170 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:29:27,170 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:29:27,170 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:29:27,170 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:29:27,171 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:29:27,172 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:29:27,174 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:29:27,174 INFO sqlalchemy.engine.base.Engine Thread-331 : (132, 1)
2020-06-10 00:29:27,174 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:27,175 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:27,176 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:29:27,176 INFO sqlalchemy.engine.base.Engine Thread-331 : (132,)
2020-06-10 00:29:27,176 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:27,177 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:29:27,180 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:27,180 INFO sqlalchemy.engine.base.Engine Thread-331 : ('philip', 1, 1)
2020-06-10 00:29:27,181 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,181 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,184 INFO sqlalchemy.engine.base.Engine Thread-331 : ROLLBACK
2020-06-10 00:29:27,428 INFO sqlalchemy.engine.base.Engine Thread-341 : BEGIN (implicit)
2020-06-10 00:29:27,429 INFO sqlalchemy.engine.base.Engine Thread-341 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:27,430 INFO sqlalchemy.engine.base.Engine Thread-341 : (1, 1)
2020-06-10 00:29:27,430 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,431 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,433 INFO sqlalchemy.engine.base.Engine Thread-341 : ROLLBACK
2020-06-10 00:29:27,508 INFO sqlalchemy.engine.base.Engine Thread-342 : BEGIN (implicit)
2020-06-10 00:29:27,509 INFO sqlalchemy.engine.base.Engine Thread-342 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:27,509 INFO sqlalchemy.engine.base.Engine Thread-342 : (1, 1)
2020-06-10 00:29:27,512 INFO sqlalchemy.engine.base.Engine Thread-343 : BEGIN (implicit)
2020-06-10 00:29:27,512 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,513 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:27,519 INFO sqlalchemy.engine.base.Engine Thread-343 : (1, 1)
2020-06-10 00:29:27,516 INFO sqlalchemy.engine.base.Engine Thread-344 : BEGIN (implicit)
2020-06-10 00:29:27,519 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,518 INFO sqlalchemy.engine.base.Engine Thread-345 : BEGIN (implicit)
2020-06-10 00:29:27,524 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:27,524 INFO sqlalchemy.engine.base.Engine Thread-345 : (1, 1)
2020-06-10 00:29:27,523 INFO sqlalchemy.engine.base.Engine Thread-342 : ROLLBACK
2020-06-10 00:29:27,521 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,525 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,520 INFO sqlalchemy.engine.base.Engine Thread-344 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:27,526 INFO sqlalchemy.engine.base.Engine Thread-344 : (1, 1)
2020-06-10 00:29:27,527 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,528 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,528 INFO sqlalchemy.engine.base.Engine Thread-343 : ROLLBACK
2020-06-10 00:29:27,530 INFO sqlalchemy.engine.base.Engine Thread-344 : ROLLBACK
2020-06-10 00:29:27,532 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:27,532 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:27,534 INFO sqlalchemy.engine.base.Engine Thread-345 : ROLLBACK
2020-06-10 00:29:30,301 INFO sqlalchemy.engine.base.Engine Thread-346 : BEGIN (implicit)
2020-06-10 00:29:30,302 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:30,302 INFO sqlalchemy.engine.base.Engine Thread-346 : (1, 1)
2020-06-10 00:29:30,303 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,303 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,305 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:30,305 INFO sqlalchemy.engine.base.Engine Thread-346 : ('philip', 1, 1)
2020-06-10 00:29:30,306 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,306 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,308 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:29:30,308 INFO sqlalchemy.engine.base.Engine Thread-346 : ('0', 1)
2020-06-10 00:29:30,308 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:30,310 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:29:30,310 INFO sqlalchemy.engine.base.Engine Thread-346 : (0,)
2020-06-10 00:29:30,311 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:30,311 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:29:30,311 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:29:30,311 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:29:30,311 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:29:30,311 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:29:30,312 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:29:30,313 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:29:30,313 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:29:30,313 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:29:30,313 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:29:30,313 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:29:30,313 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:29:30,313 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:29:30,315 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:29:30,315 INFO sqlalchemy.engine.base.Engine Thread-346 : (0,)
2020-06-10 00:29:30,316 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:30,316 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:29:30,316 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:29:30,316 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:29:30,316 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:29:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:29:30,318 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:29:30,319 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:29:30,320 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:29:30,321 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:29:30,322 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:29:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:29:30,329 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:30,330 INFO sqlalchemy.engine.base.Engine Thread-346 : ('philip', 1, 1)
2020-06-10 00:29:30,330 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,331 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,335 INFO sqlalchemy.engine.base.Engine Thread-346 : ROLLBACK
2020-06-10 00:29:30,576 INFO sqlalchemy.engine.base.Engine Thread-356 : BEGIN (implicit)
2020-06-10 00:29:30,577 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:30,577 INFO sqlalchemy.engine.base.Engine Thread-356 : (1, 1)
2020-06-10 00:29:30,577 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,578 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,580 INFO sqlalchemy.engine.base.Engine Thread-356 : ROLLBACK
2020-06-10 00:29:30,655 INFO sqlalchemy.engine.base.Engine Thread-357 : BEGIN (implicit)
2020-06-10 00:29:30,657 INFO sqlalchemy.engine.base.Engine Thread-358 : BEGIN (implicit)
2020-06-10 00:29:30,659 INFO sqlalchemy.engine.base.Engine Thread-357 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:30,660 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:30,660 INFO sqlalchemy.engine.base.Engine Thread-357 : (1, 1)
2020-06-10 00:29:30,663 INFO sqlalchemy.engine.base.Engine Thread-359 : BEGIN (implicit)
2020-06-10 00:29:30,666 INFO sqlalchemy.engine.base.Engine Thread-360 : BEGIN (implicit)
2020-06-10 00:29:30,668 INFO sqlalchemy.engine.base.Engine Thread-360 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:30,667 INFO sqlalchemy.engine.base.Engine Thread-359 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:30,667 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,669 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,666 INFO sqlalchemy.engine.base.Engine Thread-358 : (1, 1)
2020-06-10 00:29:30,669 INFO sqlalchemy.engine.base.Engine Thread-359 : (1, 1)
2020-06-10 00:29:30,669 INFO sqlalchemy.engine.base.Engine Thread-360 : (1, 1)
2020-06-10 00:29:30,671 INFO sqlalchemy.engine.base.Engine Thread-357 : ROLLBACK
2020-06-10 00:29:30,672 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,672 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,675 INFO sqlalchemy.engine.base.Engine Thread-358 : ROLLBACK
2020-06-10 00:29:30,675 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,675 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,678 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:30,678 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:30,679 INFO sqlalchemy.engine.base.Engine Thread-359 : ROLLBACK
2020-06-10 00:29:30,682 INFO sqlalchemy.engine.base.Engine Thread-360 : ROLLBACK
2020-06-10 00:29:46,627 INFO sqlalchemy.engine.base.Engine Thread-361 : BEGIN (implicit)
2020-06-10 00:29:46,628 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:46,628 INFO sqlalchemy.engine.base.Engine Thread-361 : (1, 1)
2020-06-10 00:29:46,631 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:46,632 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:46,634 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:46,634 INFO sqlalchemy.engine.base.Engine Thread-361 : ('philip', 1, 1)
2020-06-10 00:29:46,641 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:46,641 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:46,643 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:29:46,643 INFO sqlalchemy.engine.base.Engine Thread-361 : ('0', 1)
2020-06-10 00:29:46,643 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:46,646 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:29:46,646 INFO sqlalchemy.engine.base.Engine Thread-361 : (0,)
2020-06-10 00:29:46,646 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:29:46,647 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:29:46,648 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:29:46,649 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:29:46,651 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:29:46,651 INFO sqlalchemy.engine.base.Engine Thread-361 : (0,)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:29:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:29:46,653 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:29:46,654 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:29:46,655 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:29:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:29:46,657 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:29:46,658 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:29:46,659 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:29:46,659 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:29:46,659 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:29:46,659 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:29:46,662 INFO sqlalchemy.engine.base.Engine Thread-361 : INSERT INTO parameters (id, param_name, param_value, param_group, param_parent, param_disabled, param_critical) VALUES (%s, %s, %s, %s, %s, %s, %s)
2020-06-10 00:29:46,662 INFO sqlalchemy.engine.base.Engine Thread-361 : ('0', 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:29:46,663 INFO sqlalchemy.engine.base.Engine Thread-361 : COMMIT
2020-06-10 00:29:46,701 INFO sqlalchemy.engine.base.Engine Thread-362 : BEGIN (implicit)
2020-06-10 00:29:46,702 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:46,702 INFO sqlalchemy.engine.base.Engine Thread-362 : (1, 1)
2020-06-10 00:29:46,703 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:46,703 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:46,705 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:46,705 INFO sqlalchemy.engine.base.Engine Thread-362 : ('philip', 1, 1)
2020-06-10 00:29:46,706 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:46,706 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:46,708 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:29:46,708 INFO sqlalchemy.engine.base.Engine Thread-362 : (0,)
2020-06-10 00:29:46,708 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:29:46,709 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:29:46,710 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:29:46,711 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:29:46,711 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:29:46,713 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:29:46,713 INFO sqlalchemy.engine.base.Engine Thread-362 : (132, 1)
2020-06-10 00:29:46,713 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:46,713 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:46,714 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:29:46,714 INFO sqlalchemy.engine.base.Engine Thread-362 : (132,)
2020-06-10 00:29:46,715 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:46,715 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:29:46,715 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:29:46,719 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:46,719 INFO sqlalchemy.engine.base.Engine Thread-362 : ('philip', 1, 1)
2020-06-10 00:29:46,720 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:46,720 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:46,723 INFO sqlalchemy.engine.base.Engine Thread-362 : ROLLBACK
2020-06-10 00:29:46,983 INFO sqlalchemy.engine.base.Engine Thread-372 : BEGIN (implicit)
2020-06-10 00:29:46,984 INFO sqlalchemy.engine.base.Engine Thread-372 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:46,984 INFO sqlalchemy.engine.base.Engine Thread-372 : (1, 1)
2020-06-10 00:29:46,985 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:46,986 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:46,988 INFO sqlalchemy.engine.base.Engine Thread-372 : ROLLBACK
2020-06-10 00:29:47,043 INFO sqlalchemy.engine.base.Engine Thread-373 : BEGIN (implicit)
2020-06-10 00:29:47,043 INFO sqlalchemy.engine.base.Engine Thread-373 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:47,044 INFO sqlalchemy.engine.base.Engine Thread-373 : (1, 1)
2020-06-10 00:29:47,044 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:47,045 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:47,047 INFO sqlalchemy.engine.base.Engine Thread-373 : ROLLBACK
2020-06-10 00:29:47,055 INFO sqlalchemy.engine.base.Engine Thread-374 : BEGIN (implicit)
2020-06-10 00:29:47,058 INFO sqlalchemy.engine.base.Engine Thread-375 : BEGIN (implicit)
2020-06-10 00:29:47,060 INFO sqlalchemy.engine.base.Engine Thread-374 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:47,062 INFO sqlalchemy.engine.base.Engine Thread-376 : BEGIN (implicit)
2020-06-10 00:29:47,063 INFO sqlalchemy.engine.base.Engine Thread-375 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:47,064 INFO sqlalchemy.engine.base.Engine Thread-375 : (1, 1)
2020-06-10 00:29:47,064 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:47,063 INFO sqlalchemy.engine.base.Engine Thread-374 : (1, 1)
2020-06-10 00:29:47,064 INFO sqlalchemy.engine.base.Engine Thread-376 : (1, 1)
2020-06-10 00:29:47,065 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:47,066 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:47,066 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:47,067 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:47,069 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:47,069 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:47,073 INFO sqlalchemy.engine.base.Engine Thread-374 : ROLLBACK
2020-06-10 00:29:47,071 INFO sqlalchemy.engine.base.Engine Thread-376 : ROLLBACK
2020-06-10 00:29:47,069 INFO sqlalchemy.engine.base.Engine Thread-375 : ROLLBACK
2020-06-10 00:29:52,596 INFO sqlalchemy.engine.base.Engine Thread-377 : BEGIN (implicit)
2020-06-10 00:29:52,597 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:52,597 INFO sqlalchemy.engine.base.Engine Thread-377 : (1, 1)
2020-06-10 00:29:52,598 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:52,598 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:52,600 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:52,600 INFO sqlalchemy.engine.base.Engine Thread-377 : ('philip', 1, 1)
2020-06-10 00:29:52,601 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:52,601 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:52,603 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:29:52,603 INFO sqlalchemy.engine.base.Engine Thread-377 : ('0', 1)
2020-06-10 00:29:52,603 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:52,606 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:29:52,606 INFO sqlalchemy.engine.base.Engine Thread-377 : (0,)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:29:52,607 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:29:52,608 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:29:52,609 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:29:52,609 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:29:52,609 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:29:52,609 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:29:52,610 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:29:52,611 INFO sqlalchemy.engine.base.Engine Thread-377 : (0,)
2020-06-10 00:29:52,611 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:29:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:29:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:29:52,614 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:29:52,615 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:29:52,616 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:29:52,617 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:29:52,618 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:29:52,618 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:29:52,618 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:29:52,618 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:29:52,618 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:29:52,618 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:29:52,618 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:29:52,625 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:29:52,625 INFO sqlalchemy.engine.base.Engine Thread-377 : ('philip', 1, 1)
2020-06-10 00:29:52,626 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:52,626 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:52,631 INFO sqlalchemy.engine.base.Engine Thread-377 : ROLLBACK
2020-06-10 00:29:52,892 INFO sqlalchemy.engine.base.Engine Thread-387 : BEGIN (implicit)
2020-06-10 00:29:52,893 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:52,893 INFO sqlalchemy.engine.base.Engine Thread-387 : (1, 1)
2020-06-10 00:29:52,894 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:52,894 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:52,896 INFO sqlalchemy.engine.base.Engine Thread-387 : ROLLBACK
2020-06-10 00:29:52,946 INFO sqlalchemy.engine.base.Engine Thread-389 : BEGIN (implicit)
2020-06-10 00:29:52,948 INFO sqlalchemy.engine.base.Engine Thread-388 : BEGIN (implicit)
2020-06-10 00:29:52,949 INFO sqlalchemy.engine.base.Engine Thread-389 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:52,950 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:52,950 INFO sqlalchemy.engine.base.Engine Thread-389 : (1, 1)
2020-06-10 00:29:52,951 INFO sqlalchemy.engine.base.Engine Thread-388 : (1, 1)
2020-06-10 00:29:52,990 INFO sqlalchemy.engine.base.Engine Thread-390 : BEGIN (implicit)
2020-06-10 00:29:52,991 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:52,994 INFO sqlalchemy.engine.base.Engine Thread-391 : BEGIN (implicit)
2020-06-10 00:29:52,995 INFO sqlalchemy.engine.base.Engine Thread-390 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:52,997 INFO sqlalchemy.engine.base.Engine Thread-390 : (1, 1)
2020-06-10 00:29:52,997 INFO sqlalchemy.engine.base.Engine Thread-391 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:29:52,996 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:52,997 INFO sqlalchemy.engine.base.Engine Thread-391 : (1, 1)
2020-06-10 00:29:52,998 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:52,999 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:53,003 INFO sqlalchemy.engine.base.Engine Thread-388 : ROLLBACK
2020-06-10 00:29:52,999 DEBUG sqlalchemy.engine.base.Engine Thread-391 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:53,001 INFO sqlalchemy.engine.base.Engine Thread-389 : ROLLBACK
2020-06-10 00:29:52,998 DEBUG sqlalchemy.engine.base.Engine Thread-390 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:29:53,005 DEBUG sqlalchemy.engine.base.Engine Thread-390 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:53,004 DEBUG sqlalchemy.engine.base.Engine Thread-391 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:29:53,008 INFO sqlalchemy.engine.base.Engine Thread-390 : ROLLBACK
2020-06-10 00:29:53,011 INFO sqlalchemy.engine.base.Engine Thread-391 : ROLLBACK
2020-06-10 00:30:16,909 INFO sqlalchemy.engine.base.Engine Thread-392 : BEGIN (implicit)
2020-06-10 00:30:16,910 INFO sqlalchemy.engine.base.Engine Thread-392 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:16,910 INFO sqlalchemy.engine.base.Engine Thread-392 : (1, 1)
2020-06-10 00:30:16,911 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:16,911 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:16,913 INFO sqlalchemy.engine.base.Engine Thread-392 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:16,913 INFO sqlalchemy.engine.base.Engine Thread-392 : ('philip', 1, 1)
2020-06-10 00:30:16,914 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:16,914 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:16,915 INFO sqlalchemy.engine.base.Engine Thread-392 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:30:16,915 INFO sqlalchemy.engine.base.Engine Thread-392 : ('0', 1)
2020-06-10 00:30:16,916 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:16,918 INFO sqlalchemy.engine.base.Engine Thread-392 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:30:16,918 INFO sqlalchemy.engine.base.Engine Thread-392 : (0,)
2020-06-10 00:30:16,919 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:16,919 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:30:16,919 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:30:16,919 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:30:16,919 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:30:16,919 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:30:16,919 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:30:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:30:16,921 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:30:16,921 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:30:16,921 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:30:16,921 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:30:16,921 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:30:16,921 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:30:16,923 INFO sqlalchemy.engine.base.Engine Thread-392 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:30:16,923 INFO sqlalchemy.engine.base.Engine Thread-392 : (0,)
2020-06-10 00:30:16,924 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:30:16,925 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:30:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:30:16,927 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:30:16,929 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:30:16,930 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:30:16,931 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:30:16,931 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:30:16,931 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:30:16,931 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:30:16,931 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:30:16,931 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:30:16,931 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:30:16,934 INFO sqlalchemy.engine.base.Engine Thread-392 : INSERT INTO parameters (id, param_name, param_value, param_group, param_parent, param_disabled, param_critical) VALUES (%s, %s, %s, %s, %s, %s, %s)
2020-06-10 00:30:16,934 INFO sqlalchemy.engine.base.Engine Thread-392 : ('0', 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:30:16,935 INFO sqlalchemy.engine.base.Engine Thread-392 : COMMIT
2020-06-10 00:30:16,971 INFO sqlalchemy.engine.base.Engine Thread-393 : BEGIN (implicit)
2020-06-10 00:30:16,973 INFO sqlalchemy.engine.base.Engine Thread-393 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:16,973 INFO sqlalchemy.engine.base.Engine Thread-393 : (1, 1)
2020-06-10 00:30:16,973 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:16,974 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:16,976 INFO sqlalchemy.engine.base.Engine Thread-393 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:16,976 INFO sqlalchemy.engine.base.Engine Thread-393 : ('philip', 1, 1)
2020-06-10 00:30:16,977 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:16,977 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:16,979 INFO sqlalchemy.engine.base.Engine Thread-393 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:30:16,979 INFO sqlalchemy.engine.base.Engine Thread-393 : (0,)
2020-06-10 00:30:16,980 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:16,980 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:30:16,980 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:30:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:30:16,982 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:30:16,984 INFO sqlalchemy.engine.base.Engine Thread-393 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:30:16,984 INFO sqlalchemy.engine.base.Engine Thread-393 : (132, 1)
2020-06-10 00:30:16,985 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:16,985 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:30:16,986 INFO sqlalchemy.engine.base.Engine Thread-393 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:30:16,986 INFO sqlalchemy.engine.base.Engine Thread-393 : (132,)
2020-06-10 00:30:16,987 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:16,987 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:30:16,987 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:30:16,987 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:30:16,991 INFO sqlalchemy.engine.base.Engine Thread-393 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:16,991 INFO sqlalchemy.engine.base.Engine Thread-393 : ('philip', 1, 1)
2020-06-10 00:30:16,992 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:16,992 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:16,995 INFO sqlalchemy.engine.base.Engine Thread-393 : ROLLBACK
2020-06-10 00:30:17,235 INFO sqlalchemy.engine.base.Engine Thread-403 : BEGIN (implicit)
2020-06-10 00:30:17,237 INFO sqlalchemy.engine.base.Engine Thread-403 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:17,237 INFO sqlalchemy.engine.base.Engine Thread-403 : (1, 1)
2020-06-10 00:30:17,238 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:17,238 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:17,240 INFO sqlalchemy.engine.base.Engine Thread-403 : ROLLBACK
2020-06-10 00:30:17,318 INFO sqlalchemy.engine.base.Engine Thread-404 : BEGIN (implicit)
2020-06-10 00:30:17,319 INFO sqlalchemy.engine.base.Engine Thread-404 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:17,319 INFO sqlalchemy.engine.base.Engine Thread-404 : (1, 1)
2020-06-10 00:30:17,322 INFO sqlalchemy.engine.base.Engine Thread-405 : BEGIN (implicit)
2020-06-10 00:30:17,322 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:17,324 INFO sqlalchemy.engine.base.Engine Thread-405 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:17,326 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:17,326 INFO sqlalchemy.engine.base.Engine Thread-405 : (1, 1)
2020-06-10 00:30:17,328 INFO sqlalchemy.engine.base.Engine Thread-406 : BEGIN (implicit)
2020-06-10 00:30:17,331 INFO sqlalchemy.engine.base.Engine Thread-407 : BEGIN (implicit)
2020-06-10 00:30:17,333 INFO sqlalchemy.engine.base.Engine Thread-404 : ROLLBACK
2020-06-10 00:30:17,334 INFO sqlalchemy.engine.base.Engine Thread-406 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:17,336 INFO sqlalchemy.engine.base.Engine Thread-407 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:17,338 INFO sqlalchemy.engine.base.Engine Thread-407 : (1, 1)
2020-06-10 00:30:17,338 INFO sqlalchemy.engine.base.Engine Thread-406 : (1, 1)
2020-06-10 00:30:17,336 DEBUG sqlalchemy.engine.base.Engine Thread-405 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:17,338 DEBUG sqlalchemy.engine.base.Engine Thread-407 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:17,339 DEBUG sqlalchemy.engine.base.Engine Thread-405 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:17,339 DEBUG sqlalchemy.engine.base.Engine Thread-406 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:17,342 DEBUG sqlalchemy.engine.base.Engine Thread-406 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:17,342 INFO sqlalchemy.engine.base.Engine Thread-405 : ROLLBACK
2020-06-10 00:30:17,339 DEBUG sqlalchemy.engine.base.Engine Thread-407 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:17,344 INFO sqlalchemy.engine.base.Engine Thread-406 : ROLLBACK
2020-06-10 00:30:17,347 INFO sqlalchemy.engine.base.Engine Thread-407 : ROLLBACK
2020-06-10 00:30:21,385 INFO sqlalchemy.engine.base.Engine Thread-408 : BEGIN (implicit)
2020-06-10 00:30:21,386 INFO sqlalchemy.engine.base.Engine Thread-408 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:21,386 INFO sqlalchemy.engine.base.Engine Thread-408 : (1, 1)
2020-06-10 00:30:21,387 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,387 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,390 INFO sqlalchemy.engine.base.Engine Thread-408 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:21,390 INFO sqlalchemy.engine.base.Engine Thread-408 : ('philip', 1, 1)
2020-06-10 00:30:21,391 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,391 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,393 INFO sqlalchemy.engine.base.Engine Thread-408 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:30:21,393 INFO sqlalchemy.engine.base.Engine Thread-408 : ('0', 1)
2020-06-10 00:30:21,393 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:21,396 INFO sqlalchemy.engine.base.Engine Thread-408 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:30:21,396 INFO sqlalchemy.engine.base.Engine Thread-408 : (0,)
2020-06-10 00:30:21,396 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:30:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:30:21,398 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:30:21,401 INFO sqlalchemy.engine.base.Engine Thread-408 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:30:21,401 INFO sqlalchemy.engine.base.Engine Thread-408 : (0,)
2020-06-10 00:30:21,401 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:30:21,402 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:30:21,403 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:30:21,404 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:30:21,406 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:30:21,407 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:30:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:30:21,414 INFO sqlalchemy.engine.base.Engine Thread-408 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:21,414 INFO sqlalchemy.engine.base.Engine Thread-408 : ('philip', 1, 1)
2020-06-10 00:30:21,415 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,415 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,419 INFO sqlalchemy.engine.base.Engine Thread-408 : ROLLBACK
2020-06-10 00:30:21,679 INFO sqlalchemy.engine.base.Engine Thread-418 : BEGIN (implicit)
2020-06-10 00:30:21,680 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:21,680 INFO sqlalchemy.engine.base.Engine Thread-418 : (1, 1)
2020-06-10 00:30:21,681 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,681 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,683 INFO sqlalchemy.engine.base.Engine Thread-418 : ROLLBACK
2020-06-10 00:30:21,744 INFO sqlalchemy.engine.base.Engine Thread-419 : BEGIN (implicit)
2020-06-10 00:30:21,745 INFO sqlalchemy.engine.base.Engine Thread-419 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:21,745 INFO sqlalchemy.engine.base.Engine Thread-419 : (1, 1)
2020-06-10 00:30:21,746 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,747 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,751 INFO sqlalchemy.engine.base.Engine Thread-420 : BEGIN (implicit)
2020-06-10 00:30:21,753 INFO sqlalchemy.engine.base.Engine Thread-420 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:21,753 INFO sqlalchemy.engine.base.Engine Thread-420 : (1, 1)
2020-06-10 00:30:21,754 INFO sqlalchemy.engine.base.Engine Thread-419 : ROLLBACK
2020-06-10 00:30:21,755 DEBUG sqlalchemy.engine.base.Engine Thread-420 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,758 INFO sqlalchemy.engine.base.Engine Thread-421 : BEGIN (implicit)
2020-06-10 00:30:21,761 INFO sqlalchemy.engine.base.Engine Thread-422 : BEGIN (implicit)
2020-06-10 00:30:21,764 INFO sqlalchemy.engine.base.Engine Thread-422 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:21,763 INFO sqlalchemy.engine.base.Engine Thread-421 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:21,764 INFO sqlalchemy.engine.base.Engine Thread-422 : (1, 1)
2020-06-10 00:30:21,762 DEBUG sqlalchemy.engine.base.Engine Thread-420 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,764 INFO sqlalchemy.engine.base.Engine Thread-421 : (1, 1)
2020-06-10 00:30:21,766 DEBUG sqlalchemy.engine.base.Engine Thread-422 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,767 INFO sqlalchemy.engine.base.Engine Thread-420 : ROLLBACK
2020-06-10 00:30:21,768 DEBUG sqlalchemy.engine.base.Engine Thread-422 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,768 DEBUG sqlalchemy.engine.base.Engine Thread-421 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:21,770 DEBUG sqlalchemy.engine.base.Engine Thread-421 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:21,772 INFO sqlalchemy.engine.base.Engine Thread-422 : ROLLBACK
2020-06-10 00:30:21,773 INFO sqlalchemy.engine.base.Engine Thread-421 : ROLLBACK
2020-06-10 00:30:53,680 INFO sqlalchemy.engine.base.Engine Thread-423 : BEGIN (implicit)
2020-06-10 00:30:53,682 INFO sqlalchemy.engine.base.Engine Thread-423 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:53,682 INFO sqlalchemy.engine.base.Engine Thread-423 : (1, 1)
2020-06-10 00:30:53,682 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:53,683 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:53,685 INFO sqlalchemy.engine.base.Engine Thread-423 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:53,685 INFO sqlalchemy.engine.base.Engine Thread-423 : ('philip', 1, 1)
2020-06-10 00:30:53,685 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:53,686 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:53,687 INFO sqlalchemy.engine.base.Engine Thread-423 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:30:53,687 INFO sqlalchemy.engine.base.Engine Thread-423 : ('0', 1)
2020-06-10 00:30:53,687 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:53,690 INFO sqlalchemy.engine.base.Engine Thread-423 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:30:53,690 INFO sqlalchemy.engine.base.Engine Thread-423 : (0,)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:30:53,691 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:30:53,692 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:30:53,693 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:30:53,695 INFO sqlalchemy.engine.base.Engine Thread-423 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-06-10 00:30:53,695 INFO sqlalchemy.engine.base.Engine Thread-423 : (0,)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:30:53,696 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-10 00:30:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-06-10 00:30:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-06-10 00:30:53,699 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-06-10 00:30:53,700 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-06-10 00:30:53,701 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-10 00:30:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:30:53,705 INFO sqlalchemy.engine.base.Engine Thread-423 : INSERT INTO parameters (id, param_name, param_value, param_group, param_parent, param_disabled, param_critical) VALUES (%s, %s, %s, %s, %s, %s, %s)
2020-06-10 00:30:53,705 INFO sqlalchemy.engine.base.Engine Thread-423 : ('0', 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:30:53,706 INFO sqlalchemy.engine.base.Engine Thread-423 : COMMIT
2020-06-10 00:30:54,739 INFO sqlalchemy.engine.base.Engine Thread-424 : BEGIN (implicit)
2020-06-10 00:30:54,740 INFO sqlalchemy.engine.base.Engine Thread-424 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:30:54,740 INFO sqlalchemy.engine.base.Engine Thread-424 : (1, 1)
2020-06-10 00:30:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:54,743 INFO sqlalchemy.engine.base.Engine Thread-424 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:54,743 INFO sqlalchemy.engine.base.Engine Thread-424 : ('philip', 1, 1)
2020-06-10 00:30:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:54,746 INFO sqlalchemy.engine.base.Engine Thread-424 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:30:54,746 INFO sqlalchemy.engine.base.Engine Thread-424 : (0,)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:30:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:30:54,748 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:30:54,749 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:30:54,749 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:30:54,749 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:30:54,751 INFO sqlalchemy.engine.base.Engine Thread-424 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:30:54,751 INFO sqlalchemy.engine.base.Engine Thread-424 : (132, 1)
2020-06-10 00:30:54,751 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:54,751 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:30:54,752 INFO sqlalchemy.engine.base.Engine Thread-424 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:30:54,752 INFO sqlalchemy.engine.base.Engine Thread-424 : (132,)
2020-06-10 00:30:54,753 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:30:54,753 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:30:54,753 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:30:54,753 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:30:54,753 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:30:54,757 INFO sqlalchemy.engine.base.Engine Thread-424 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:30:54,758 INFO sqlalchemy.engine.base.Engine Thread-424 : ('philip', 1, 1)
2020-06-10 00:30:54,758 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:30:54,758 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:30:54,762 INFO sqlalchemy.engine.base.Engine Thread-424 : ROLLBACK
2020-06-10 00:31:00,881 INFO sqlalchemy.engine.base.Engine Thread-434 : BEGIN (implicit)
2020-06-10 00:31:00,882 INFO sqlalchemy.engine.base.Engine Thread-434 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:31:00,882 INFO sqlalchemy.engine.base.Engine Thread-434 : (1, 1)
2020-06-10 00:31:00,885 INFO sqlalchemy.engine.base.Engine Thread-435 : BEGIN (implicit)
2020-06-10 00:31:00,885 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:31:00,886 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:31:00,887 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:31:00,887 INFO sqlalchemy.engine.base.Engine Thread-435 : (1, 1)
2020-06-10 00:31:00,890 INFO sqlalchemy.engine.base.Engine Thread-436 : BEGIN (implicit)
2020-06-10 00:31:00,892 INFO sqlalchemy.engine.base.Engine Thread-434 : ROLLBACK
2020-06-10 00:31:00,893 INFO sqlalchemy.engine.base.Engine Thread-436 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:31:00,893 INFO sqlalchemy.engine.base.Engine Thread-436 : (1, 1)
2020-06-10 00:31:00,893 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:31:00,894 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:31:00,896 INFO sqlalchemy.engine.base.Engine Thread-435 : ROLLBACK
2020-06-10 00:31:00,898 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:31:00,898 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:31:00,900 INFO sqlalchemy.engine.base.Engine Thread-436 : ROLLBACK
2020-06-10 00:31:00,927 INFO sqlalchemy.engine.base.Engine Thread-437 : BEGIN (implicit)
2020-06-10 00:31:00,928 INFO sqlalchemy.engine.base.Engine Thread-437 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:31:00,928 INFO sqlalchemy.engine.base.Engine Thread-437 : (1, 1)
2020-06-10 00:31:00,929 DEBUG sqlalchemy.engine.base.Engine Thread-437 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:31:00,929 DEBUG sqlalchemy.engine.base.Engine Thread-437 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:31:00,931 INFO sqlalchemy.engine.base.Engine Thread-437 : ROLLBACK
2020-06-10 00:31:01,745 INFO sqlalchemy.engine.base.Engine Thread-438 : BEGIN (implicit)
2020-06-10 00:31:01,746 INFO sqlalchemy.engine.base.Engine Thread-438 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:31:01,746 INFO sqlalchemy.engine.base.Engine Thread-438 : (1, 1)
2020-06-10 00:31:01,747 DEBUG sqlalchemy.engine.base.Engine Thread-438 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:31:01,747 DEBUG sqlalchemy.engine.base.Engine Thread-438 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:31:01,749 INFO sqlalchemy.engine.base.Engine Thread-438 : ROLLBACK
2020-06-10 00:40:05,196 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:40:05,196 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:05,197 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:40:05,198 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:40:05,198 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:40:05,198 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:05,199 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:40:05,199 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:40:05,199 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:40:05,199 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:05,200 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:40:05,200 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:40:05,200 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:40:05,200 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:05,201 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:40:05,201 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:40:05,202 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:40:05,202 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:05,203 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:40:05,203 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:05,203 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:40:05,203 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:05,204 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:40:05,206 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:05,206 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:40:05,207 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,207 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,210 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:05,210 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:40:05,211 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,211 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,214 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:40:05,214 INFO sqlalchemy.engine.base.Engine Thread-2 : (0,)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-10 00:40:05,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-10 00:40:05,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-10 00:40:05,217 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-10 00:40:05,218 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-10 00:40:05,218 INFO sqlalchemy.engine.base.Engine Thread-2 : (132, 1)
2020-06-10 00:40:05,219 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:40:05,219 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-10 00:40:05,220 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-10 00:40:05,220 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:40:05,221 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:40:05,221 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:40:05,221 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:40:05,221 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:40:05,221 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:40:05,299 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:05,300 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:40:05,300 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,300 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,304 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:40:05,577 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:40:05,578 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:05,578 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:40:05,579 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,580 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,592 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:40:05,671 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:40:05,672 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:05,675 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:40:05,676 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,682 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,684 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:40:05,685 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:40:05,686 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:05,686 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:40:05,687 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:40:05,688 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:05,688 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:40:05,688 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,689 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,689 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,691 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,693 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:40:05,694 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:40:05,695 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:05,695 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:40:05,696 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:40:05,696 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:05,697 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:05,700 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:40:10,046 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:40:10,047 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:10,047 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:40:10,048 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:10,048 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:10,050 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:10,050 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:40:10,051 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:10,051 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:10,061 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:40:10,061 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 10, 0, 40, 10, 52155), datetime.datetime(2020, 6, 24, 0, 40, 10, 52155), datetime.datetime(2020, 6, 10, 0, 40, 10, 52155), datetime.datetime(2020, 6, 24, 0, 40, 10, 52155), datetime.datetime(2020, 6, 10, 0, 40, 10, 52155), datetime.datetime(2020, 6, 24, 0, 40, 10, 52155))
2020-06-10 00:40:10,062 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:40:10,062 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:40:10,062 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:40:10,063 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:40:10,063 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:40:10,079 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:10,079 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:40:10,079 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:10,080 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,447 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:40:23,447 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:23,448 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:40:23,449 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:40:23,449 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:40:23,449 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:23,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:40:23,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:40:23,451 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:40:23,451 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:23,451 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:40:23,451 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:40:23,451 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:40:23,451 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:23,452 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:40:23,452 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:40:23,453 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:40:23,453 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:23,454 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:40:23,454 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:23,455 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:40:23,455 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:40:23,456 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:40:23,458 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:23,458 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:40:23,459 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,460 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,463 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:23,463 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:40:23,463 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,464 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,467 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:40:23,467 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:40:23,468 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:40:23,469 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:40:23,469 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:40:23,469 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:40:23,469 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:40:23,480 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:40:23,480 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 10, 0, 40, 23, 469785), datetime.datetime(2020, 6, 24, 0, 40, 23, 469785), datetime.datetime(2020, 6, 10, 0, 40, 23, 469785), datetime.datetime(2020, 6, 24, 0, 40, 23, 469785), datetime.datetime(2020, 6, 10, 0, 40, 23, 469785), datetime.datetime(2020, 6, 24, 0, 40, 23, 469785))
2020-06-10 00:40:23,481 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:40:23,481 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:40:23,481 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:40:23,482 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:40:23,482 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:40:23,565 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:23,565 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:40:23,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,570 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:40:23,831 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:40:23,832 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:23,832 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:40:23,833 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,833 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,845 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:40:23,890 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:40:23,892 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:23,892 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:40:23,893 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,896 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,898 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:40:23,899 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:40:23,903 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:23,904 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:40:23,904 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:40:23,906 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:23,906 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:40:23,907 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,907 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,911 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,911 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,910 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:40:23,913 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:40:23,916 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:23,917 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:40:23,918 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:40:23,919 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:23,920 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:23,922 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:40:30,022 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:40:30,024 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:30,024 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:40:30,024 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:30,025 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:30,027 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:30,027 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:40:30,028 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:30,028 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:30,030 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:40:30,030 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-10 00:40:30,030 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:40:30,031 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:40:30,031 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:40:30,031 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:40:30,031 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:40:54,170 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-06-10 00:40:54,171 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:54,171 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-06-10 00:40:54,172 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:54,172 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:54,175 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:54,175 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-06-10 00:40:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:54,178 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:40:54,178 INFO sqlalchemy.engine.base.Engine Thread-25 : (132,)
2020-06-10 00:40:54,179 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:40:54,179 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:40:54,179 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:40:54,179 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:40:54,180 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:40:54,189 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:40:54,189 INFO sqlalchemy.engine.base.Engine Thread-25 : (datetime.datetime(2020, 6, 10, 0, 40, 54, 180297), datetime.datetime(2020, 6, 24, 0, 40, 54, 180297), datetime.datetime(2020, 6, 10, 0, 40, 54, 180297), datetime.datetime(2020, 6, 24, 0, 40, 54, 180297), datetime.datetime(2020, 6, 10, 0, 40, 54, 180297), datetime.datetime(2020, 6, 24, 0, 40, 54, 180297))
2020-06-10 00:40:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:40:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:40:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:40:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:40:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:40:54,195 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:40:54,195 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-06-10 00:40:54,196 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:54,196 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:54,200 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-06-10 00:40:55,411 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-10 00:40:55,412 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:40:55,412 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-10 00:40:55,413 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:40:55,413 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:40:55,415 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-10 00:41:01,064 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:41:01,735 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-10 00:41:01,738 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-06-10 00:41:01,739 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:41:01,741 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:41:01,744 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-06-10 00:41:01,744 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-10 00:41:01,743 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-06-10 00:41:01,745 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:41:01,745 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-06-10 00:41:01,746 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:41:01,747 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:41:01,751 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:41:01,751 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:41:01,747 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:41:01,757 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:41:01,757 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-06-10 00:41:01,754 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-06-10 00:41:01,759 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-06-10 00:41:01,759 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-06-10 00:41:01,761 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:41:01,761 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-06-10 00:41:01,763 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:41:01,764 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:41:01,766 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-06-10 00:44:46,341 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:44:46,341 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:44:46,343 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:44:46,343 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:44:46,344 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:44:46,344 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:44:46,345 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:44:46,345 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:44:46,345 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:44:46,345 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:44:46,346 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:44:46,346 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:44:46,346 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:44:46,346 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:44:46,347 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:44:46,347 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:44:46,348 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:44:46,348 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:44:46,349 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:44:46,349 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:44:46,349 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:44:46,349 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:44:46,350 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:44:46,353 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:46,353 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:44:46,354 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,354 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,357 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:44:46,357 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:44:46,358 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,358 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,362 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:44:46,362 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:44:46,363 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:44:46,363 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:44:46,364 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:44:46,364 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:44:46,364 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:44:46,375 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:44:46,375 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 10, 0, 44, 46, 364655), datetime.datetime(2020, 7, 8, 0, 44, 46, 364655), datetime.datetime(2020, 6, 10, 0, 44, 46, 364655), datetime.datetime(2020, 7, 8, 0, 44, 46, 364655), datetime.datetime(2020, 6, 10, 0, 44, 46, 364655), datetime.datetime(2020, 7, 8, 0, 44, 46, 364655))
2020-06-10 00:44:46,376 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:44:46,377 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:44:46,377 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:44:46,377 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:46,377 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:46,466 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:44:46,466 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:44:46,467 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,467 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,471 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:44:46,746 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:44:46,747 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:46,747 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:44:46,748 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,748 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,762 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:44:46,826 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:44:46,827 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:46,827 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:44:46,831 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,831 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,833 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:44:46,834 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:44:46,840 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:46,843 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:44:46,844 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,844 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,846 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:44:46,847 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:44:46,848 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:46,848 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:44:46,849 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,849 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:44:46,850 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,851 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:46,854 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:44:46,854 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:44:46,856 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:46,856 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:46,858 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:44:51,959 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-10 00:44:51,960 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:51,960 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-10 00:44:51,961 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:51,961 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:51,964 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:44:51,964 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-10 00:44:51,964 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:51,964 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:51,967 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:44:51,967 INFO sqlalchemy.engine.base.Engine Thread-17 : (132,)
2020-06-10 00:44:51,968 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:44:51,968 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:44:51,968 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:44:51,968 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:44:51,968 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:44:51,978 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:44:51,978 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 6, 10, 0, 44, 51, 968762), datetime.datetime(2020, 7, 8, 0, 44, 51, 968762), datetime.datetime(2020, 6, 10, 0, 44, 51, 968762), datetime.datetime(2020, 7, 8, 0, 44, 51, 968762), datetime.datetime(2020, 6, 10, 0, 44, 51, 968762), datetime.datetime(2020, 7, 8, 0, 44, 51, 968762))
2020-06-10 00:44:51,979 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:44:51,979 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:44:51,979 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:44:51,979 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:51,979 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:51,983 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:44:51,984 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-10 00:44:51,984 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:51,985 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:51,988 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-10 00:44:52,228 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-10 00:44:52,229 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:52,229 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-10 00:44:52,230 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:52,230 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:52,233 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-10 00:44:52,301 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:44:52,302 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:52,303 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:44:52,303 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:52,304 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:52,307 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:44:52,308 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:52,308 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:44:52,310 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:52,311 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:44:52,313 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:52,316 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:44:52,320 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:44:52,322 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:52,324 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:44:52,326 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:52,327 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:44:52,326 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:44:52,328 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:52,329 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:52,329 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:52,330 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:52,334 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:44:52,335 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:44:57,014 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:44:57,015 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:57,016 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:44:57,016 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,017 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,019 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:44:57,019 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-10 00:44:57,020 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,020 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,022 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:44:57,022 INFO sqlalchemy.engine.base.Engine Thread-32 : (132,)
2020-06-10 00:44:57,023 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:44:57,023 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:44:57,023 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:44:57,023 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:44:57,023 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:44:57,033 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:44:57,034 INFO sqlalchemy.engine.base.Engine Thread-32 : (datetime.datetime(2020, 5, 13, 0, 44, 57, 24209), datetime.datetime(2020, 6, 10, 0, 44, 57, 24209), datetime.datetime(2020, 5, 13, 0, 44, 57, 24209), datetime.datetime(2020, 6, 10, 0, 44, 57, 24209), datetime.datetime(2020, 5, 13, 0, 44, 57, 24209), datetime.datetime(2020, 6, 10, 0, 44, 57, 24209))
2020-06-10 00:44:57,034 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:57,035 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:44:57,041 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:44:57,041 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-10 00:44:57,041 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,042 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,046 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-10 00:44:57,303 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-10 00:44:57,305 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:57,305 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-06-10 00:44:57,306 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,306 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,309 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-10 00:44:57,375 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-10 00:44:57,378 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-10 00:44:57,380 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:57,387 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-10 00:44:57,384 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:57,389 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-10 00:44:57,382 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-10 00:44:57,391 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:57,392 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-10 00:44:57,390 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,389 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,393 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,392 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,387 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-10 00:44:57,395 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,400 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,399 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:44:57,400 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-10 00:44:57,396 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-10 00:44:57,402 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-10 00:44:57,403 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-10 00:44:57,406 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:44:57,407 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:44:57,409 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-10 00:45:14,730 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-10 00:45:14,731 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:45:14,731 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-10 00:45:14,732 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:14,732 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:14,735 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:45:14,735 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-06-10 00:45:14,735 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:14,736 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:14,738 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:45:14,738 INFO sqlalchemy.engine.base.Engine Thread-47 : (132,)
2020-06-10 00:45:14,739 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:45:14,739 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:45:14,739 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:45:14,739 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:45:14,739 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:45:14,748 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:45:14,748 INFO sqlalchemy.engine.base.Engine Thread-47 : (datetime.datetime(2020, 6, 10, 0, 45, 14, 739834), datetime.datetime(2020, 6, 24, 0, 45, 14, 739834), datetime.datetime(2020, 6, 10, 0, 45, 14, 739834), datetime.datetime(2020, 6, 24, 0, 45, 14, 739834), datetime.datetime(2020, 6, 10, 0, 45, 14, 739834), datetime.datetime(2020, 6, 24, 0, 45, 14, 739834))
2020-06-10 00:45:14,749 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:45:14,749 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:45:14,749 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:45:14,749 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:45:14,750 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:45:14,754 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:45:14,754 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-06-10 00:45:14,755 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:14,755 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:14,759 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-10 00:45:15,009 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-10 00:45:15,010 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:45:15,010 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-10 00:45:15,011 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:15,011 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:15,013 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-10 00:45:15,065 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-10 00:45:15,066 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:45:15,067 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-10 00:45:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:15,068 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:15,070 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-10 00:45:15,084 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-10 00:45:15,087 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-10 00:45:15,089 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:45:15,091 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:45:15,091 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-10 00:45:15,093 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-10 00:45:15,095 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:45:15,094 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:15,095 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:15,095 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-10 00:45:15,093 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-10 00:45:15,099 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-10 00:45:15,100 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:15,101 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:15,103 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-10 00:45:15,105 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:45:15,105 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:45:15,109 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-10 00:47:17,773 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:47:17,774 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:47:17,775 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:47:17,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:47:17,776 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:47:17,776 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:47:17,777 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:47:17,777 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:47:17,777 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:47:17,778 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:47:17,778 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:47:17,778 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:47:17,778 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:47:17,778 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:47:17,779 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:47:17,780 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:47:17,780 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:47:17,781 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:47:17,781 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:47:17,781 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:47:17,782 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:47:17,782 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:47:17,783 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:47:17,785 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:17,786 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:47:17,786 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:17,787 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:17,790 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:47:17,790 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:47:17,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:17,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:17,794 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:47:17,795 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:47:17,795 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:47:17,795 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:47:17,796 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:47:17,796 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:47:17,796 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:47:17,807 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:47:17,807 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 10, 0, 47, 17, 796578), datetime.datetime(2020, 6, 24, 0, 47, 17, 796578), datetime.datetime(2020, 6, 10, 0, 47, 17, 796578), datetime.datetime(2020, 6, 24, 0, 47, 17, 796578), datetime.datetime(2020, 6, 10, 0, 47, 17, 796578), datetime.datetime(2020, 6, 24, 0, 47, 17, 796578))
2020-06-10 00:47:17,808 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:47:17,808 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:47:17,808 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:47:17,808 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:47:17,808 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:47:17,893 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:47:17,894 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:47:17,894 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:17,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:17,899 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:47:18,165 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:47:18,167 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:18,167 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:47:18,168 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:18,171 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:18,185 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:47:18,186 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:47:18,187 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:18,188 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:47:18,188 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:18,189 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:18,191 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:47:18,194 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:47:18,198 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:18,199 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:47:18,199 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:47:18,200 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:18,201 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:18,201 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:47:18,201 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:18,204 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:47:18,204 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:18,205 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:18,208 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:47:18,212 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:47:18,213 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:18,213 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:47:18,214 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:18,214 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:18,217 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:47:25,308 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:47:25,309 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:25,309 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:47:25,310 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,310 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,312 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:47:25,312 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:47:25,313 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,313 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,315 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:47:25,316 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-10 00:47:25,316 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:47:25,316 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:47:25,316 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:47:25,317 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:47:25,317 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:47:25,325 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:47:25,325 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 10, 0, 47, 25, 317358), datetime.datetime(2020, 6, 24, 0, 47, 25, 317358), datetime.datetime(2020, 6, 10, 0, 47, 25, 317358), datetime.datetime(2020, 6, 24, 0, 47, 25, 317358), datetime.datetime(2020, 6, 10, 0, 47, 25, 317358), datetime.datetime(2020, 6, 24, 0, 47, 25, 317358))
2020-06-10 00:47:25,326 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:47:25,326 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:47:25,326 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:47:25,326 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:47:25,326 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:47:25,330 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:47:25,331 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:47:25,331 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,332 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,335 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-10 00:47:25,601 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:47:25,602 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:25,602 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:47:25,605 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:47:25,606 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,607 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:25,607 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,607 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:47:25,610 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:47:25,617 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:25,618 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:47:25,618 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,616 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:47:25,619 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,619 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:47:25,619 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,622 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:25,624 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:47:25,623 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,623 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:47:25,626 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,626 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,628 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:47:25,630 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:47:25,658 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:47:25,659 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:25,659 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:47:25,660 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:25,660 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:25,662 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-10 00:47:29,823 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-10 00:47:29,824 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:29,824 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-10 00:47:29,825 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:29,826 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:29,828 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:47:29,828 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-10 00:47:29,829 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:29,829 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:29,831 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:47:29,831 INFO sqlalchemy.engine.base.Engine Thread-34 : (132,)
2020-06-10 00:47:29,832 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:47:29,832 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:47:29,832 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:47:29,832 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:47:29,832 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:47:29,841 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:47:29,841 INFO sqlalchemy.engine.base.Engine Thread-34 : (datetime.datetime(2020, 6, 10, 0, 47, 29, 833243), datetime.datetime(2020, 6, 24, 0, 47, 29, 833243), datetime.datetime(2020, 6, 10, 0, 47, 29, 833243), datetime.datetime(2020, 6, 24, 0, 47, 29, 833243), datetime.datetime(2020, 6, 10, 0, 47, 29, 833243), datetime.datetime(2020, 6, 24, 0, 47, 29, 833243))
2020-06-10 00:47:29,842 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:47:29,842 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:47:29,842 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:47:29,842 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:47:29,842 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:47:29,846 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:47:29,846 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-10 00:47:29,847 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:29,847 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:29,850 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-10 00:47:29,968 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-10 00:47:29,969 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:47:29,969 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-06-10 00:47:29,970 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:47:29,970 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:47:29,972 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-10 00:48:29,521 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-10 00:48:29,522 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:48:29,522 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-10 00:48:29,523 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:29,523 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:29,526 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:48:29,526 INFO sqlalchemy.engine.base.Engine Thread-36 : ('philip', 1, 1)
2020-06-10 00:48:29,527 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:29,527 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:29,529 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:48:29,529 INFO sqlalchemy.engine.base.Engine Thread-36 : (132,)
2020-06-10 00:48:29,530 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:48:29,530 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:48:29,530 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:48:29,530 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:48:29,530 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:48:57,755 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:48:57,755 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:48:57,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:48:57,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:48:57,758 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:48:57,758 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:48:57,758 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:48:57,758 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:48:57,759 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:48:57,759 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:48:57,759 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:48:57,759 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:48:57,760 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:48:57,760 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:48:57,760 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:48:57,760 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:48:57,761 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:48:57,761 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:48:57,762 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:48:57,762 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:48:57,763 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:48:57,763 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:48:57,764 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:48:57,766 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:48:57,766 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:48:57,767 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:57,767 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:57,770 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:48:57,770 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:48:57,771 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:57,771 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:57,774 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:48:57,775 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:48:57,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:48:57,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:48:57,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:48:57,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:48:57,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:48:57,786 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:48:57,786 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 5, 13, 0, 48, 57, 777090), datetime.datetime(2020, 6, 10, 0, 48, 57, 777090), datetime.datetime(2020, 5, 13, 0, 48, 57, 777090), datetime.datetime(2020, 6, 10, 0, 48, 57, 777090), datetime.datetime(2020, 5, 13, 0, 48, 57, 777090), datetime.datetime(2020, 6, 10, 0, 48, 57, 777090))
2020-06-10 00:48:57,787 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:48:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:48:57,870 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:48:57,871 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:48:57,871 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:57,872 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:57,876 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:48:58,129 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:48:58,130 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:48:58,130 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:48:58,131 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:58,132 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:58,145 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:48:58,209 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:48:58,210 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:48:58,210 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:48:58,211 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:58,214 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:58,217 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:48:58,224 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:48:58,225 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:48:58,225 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:48:58,225 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:48:58,227 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:48:58,227 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:48:58,227 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:58,227 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:58,230 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:48:58,231 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:58,231 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:58,234 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:48:58,240 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:48:58,241 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:48:58,241 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:48:58,242 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:48:58,242 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:48:58,244 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:49:04,366 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:49:04,368 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:04,368 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:49:04,368 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,369 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,371 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:49:04,371 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:49:04,372 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,372 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,375 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:49:04,375 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-10 00:49:04,375 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:49:04,375 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:49:04,375 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:49:04,376 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:49:04,376 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:49:04,384 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:49:04,385 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 10, 0, 49, 4, 376417), datetime.datetime(2020, 6, 24, 0, 49, 4, 376417), datetime.datetime(2020, 6, 10, 0, 49, 4, 376417), datetime.datetime(2020, 6, 24, 0, 49, 4, 376417), datetime.datetime(2020, 6, 10, 0, 49, 4, 376417), datetime.datetime(2020, 6, 24, 0, 49, 4, 376417))
2020-06-10 00:49:04,385 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:49:04,386 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:49:04,386 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:49:04,386 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:04,386 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:04,391 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:49:04,391 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:49:04,391 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,392 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,395 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-10 00:49:04,639 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:49:04,640 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:04,640 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:49:04,641 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,641 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,643 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:49:04,710 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:49:04,711 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:04,711 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:49:04,712 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,713 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,716 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:49:04,718 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:49:04,719 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:04,720 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:49:04,721 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,721 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,723 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:49:04,726 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:49:04,728 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:04,728 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:49:04,729 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,729 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,732 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:49:04,735 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:49:04,736 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:04,736 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:49:04,737 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:04,737 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:04,739 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-10 00:49:16,362 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-10 00:49:16,363 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:16,363 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-10 00:49:16,364 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,364 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,366 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:49:16,366 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:49:16,367 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,367 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,369 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:49:16,369 INFO sqlalchemy.engine.base.Engine Thread-33 : (132,)
2020-06-10 00:49:16,370 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:49:16,370 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:49:16,370 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:49:16,370 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:49:16,370 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:49:16,379 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:49:16,379 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 5, 13, 0, 49, 16, 371170), datetime.datetime(2020, 6, 10, 0, 49, 16, 371170), datetime.datetime(2020, 5, 13, 0, 49, 16, 371170), datetime.datetime(2020, 6, 10, 0, 49, 16, 371170), datetime.datetime(2020, 5, 13, 0, 49, 16, 371170), datetime.datetime(2020, 6, 10, 0, 49, 16, 371170))
2020-06-10 00:49:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:49:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:49:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:49:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:49:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:16,381 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:49:16,381 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:16,381 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:16,385 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:49:16,385 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:49:16,386 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,386 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,390 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-10 00:49:16,631 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-10 00:49:16,632 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:16,632 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-10 00:49:16,633 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,636 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-10 00:49:16,722 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-10 00:49:16,724 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-10 00:49:16,726 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-10 00:49:16,730 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:16,729 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:16,730 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-10 00:49:16,730 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-10 00:49:16,731 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,728 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:16,734 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-10 00:49:16,734 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,731 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,736 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,735 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,735 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-10 00:49:16,739 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-10 00:49:16,740 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-10 00:49:16,740 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,741 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:16,745 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-10 00:49:16,745 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-10 00:49:16,746 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:16,746 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:16,748 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-10 00:49:29,510 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-10 00:49:29,511 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:29,511 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-10 00:49:29,512 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,512 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,514 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:49:29,514 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-10 00:49:29,515 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,515 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,518 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:49:29,518 INFO sqlalchemy.engine.base.Engine Thread-48 : (132,)
2020-06-10 00:49:29,518 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:49:29,519 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:49:29,519 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:49:29,519 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:49:29,519 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:49:29,527 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:49:29,528 INFO sqlalchemy.engine.base.Engine Thread-48 : (datetime.datetime(2020, 6, 10, 0, 49, 29, 519525), datetime.datetime(2020, 6, 24, 0, 49, 29, 519525), datetime.datetime(2020, 6, 10, 0, 49, 29, 519525), datetime.datetime(2020, 6, 24, 0, 49, 29, 519525), datetime.datetime(2020, 6, 10, 0, 49, 29, 519525), datetime.datetime(2020, 6, 24, 0, 49, 29, 519525))
2020-06-10 00:49:29,528 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:49:29,529 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:49:29,529 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:49:29,529 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:29,529 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:49:29,533 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:49:29,533 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-10 00:49:29,534 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,534 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,537 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-10 00:49:29,782 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-10 00:49:29,786 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:29,787 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-10 00:49:29,784 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-10 00:49:29,789 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-10 00:49:29,791 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:29,791 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,793 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,792 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-10 00:49:29,792 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:29,795 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-10 00:49:29,795 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-10 00:49:29,795 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,799 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,798 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-10 00:49:29,800 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,803 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,803 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:29,802 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-10 00:49:29,803 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-10 00:49:29,805 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-10 00:49:29,806 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,807 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,809 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-10 00:49:29,842 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-10 00:49:29,843 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:49:29,843 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-10 00:49:29,844 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:49:29,845 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:49:29,847 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-10 00:50:14,145 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-10 00:50:14,146 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:14,146 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-10 00:50:14,147 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,147 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,150 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:14,150 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-10 00:50:14,150 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,151 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,153 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:50:14,153 INFO sqlalchemy.engine.base.Engine Thread-63 : (132,)
2020-06-10 00:50:14,154 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:50:14,154 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:50:14,157 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:50:14,157 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:50:14,157 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:50:14,165 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:50:14,165 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-06-10 00:50:14,165 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:50:14,166 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:50:14,167 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:14,167 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:14,167 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:50:14,167 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:50:14,167 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:50:14,185 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:14,185 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-10 00:50:14,186 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,186 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,190 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-10 00:50:14,444 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-10 00:50:14,446 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:14,446 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-10 00:50:14,446 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,447 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,449 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-10 00:50:14,535 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-10 00:50:14,538 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-10 00:50:14,539 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:14,542 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:14,543 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-10 00:50:14,544 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:14,543 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-10 00:50:14,544 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-10 00:50:14,543 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-10 00:50:14,545 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,548 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-10 00:50:14,549 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,549 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,549 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,553 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,551 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,553 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-10 00:50:14,550 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:14,555 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-10 00:50:14,557 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-10 00:50:14,558 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-10 00:50:14,560 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:14,560 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:14,562 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-10 00:50:21,429 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-10 00:50:21,430 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:21,430 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-10 00:50:21,431 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,431 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,433 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:21,434 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-10 00:50:21,434 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,434 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,436 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:50:21,437 INFO sqlalchemy.engine.base.Engine Thread-78 : (132,)
2020-06-10 00:50:21,437 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:50:21,437 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:50:21,438 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:50:21,438 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:50:21,438 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:50:21,446 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:50:21,447 INFO sqlalchemy.engine.base.Engine Thread-78 : (datetime.datetime(2020, 6, 10, 0, 50, 21, 438511), datetime.datetime(2020, 6, 24, 0, 50, 21, 438511), datetime.datetime(2020, 6, 10, 0, 50, 21, 438511), datetime.datetime(2020, 6, 24, 0, 50, 21, 438511), datetime.datetime(2020, 6, 10, 0, 50, 21, 438511), datetime.datetime(2020, 6, 24, 0, 50, 21, 438511))
2020-06-10 00:50:21,448 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:50:21,448 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:50:21,448 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:50:21,448 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:21,448 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:21,452 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:21,452 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-10 00:50:21,453 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,453 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,456 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-10 00:50:21,702 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-10 00:50:21,703 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:21,703 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-10 00:50:21,703 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,704 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,706 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-10 00:50:21,813 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-10 00:50:21,820 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:21,819 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-10 00:50:21,816 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-10 00:50:21,822 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:21,821 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:21,822 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-10 00:50:21,822 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-10 00:50:21,820 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-10 00:50:21,825 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-10 00:50:21,828 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:21,827 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,828 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,828 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-10 00:50:21,826 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,831 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-10 00:50:21,831 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,831 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:21,832 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,833 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,834 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:21,836 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-10 00:50:21,839 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-10 00:50:21,841 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-10 00:50:33,042 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-10 00:50:33,043 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:33,043 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-10 00:50:33,044 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,044 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,046 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:33,046 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-10 00:50:33,047 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,047 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,049 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:50:33,050 INFO sqlalchemy.engine.base.Engine Thread-93 : (132,)
2020-06-10 00:50:33,050 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:50:33,050 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:50:33,050 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:50:33,050 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:50:33,051 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:50:33,060 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:50:33,060 INFO sqlalchemy.engine.base.Engine Thread-93 : (datetime.datetime(2020, 6, 10, 0, 50, 33, 51342), datetime.datetime(2020, 7, 8, 0, 50, 33, 51342), datetime.datetime(2020, 6, 10, 0, 50, 33, 51342), datetime.datetime(2020, 7, 8, 0, 50, 33, 51342), datetime.datetime(2020, 6, 10, 0, 50, 33, 51342), datetime.datetime(2020, 7, 8, 0, 50, 33, 51342))
2020-06-10 00:50:33,061 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:50:33,061 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:50:33,061 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:50:33,061 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:33,062 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:33,066 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:33,066 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-10 00:50:33,067 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,067 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,070 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-10 00:50:33,323 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-10 00:50:33,324 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:33,324 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-10 00:50:33,325 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,326 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,328 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-10 00:50:33,398 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-10 00:50:33,401 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:33,401 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-10 00:50:33,403 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-10 00:50:33,404 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:33,404 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-10 00:50:33,405 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,408 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-10 00:50:33,408 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,411 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-10 00:50:33,411 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,412 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:33,413 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,414 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:33,419 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-10 00:50:33,417 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-10 00:50:33,419 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-10 00:50:33,416 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-10 00:50:33,421 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,421 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,423 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:33,424 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-10 00:50:33,424 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:33,427 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-10 00:50:40,683 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-10 00:50:40,684 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:40,684 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-10 00:50:40,685 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:40,685 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:40,687 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:40,687 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-10 00:50:40,688 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:40,688 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:40,690 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:50:40,691 INFO sqlalchemy.engine.base.Engine Thread-108 : (132,)
2020-06-10 00:50:40,691 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:50:40,691 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:50:40,692 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:50:40,692 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:50:40,692 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:50:40,701 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:50:40,701 INFO sqlalchemy.engine.base.Engine Thread-108 : (datetime.datetime(2020, 6, 10, 0, 50, 40, 692516), datetime.datetime(2020, 7, 8, 0, 50, 40, 692516), datetime.datetime(2020, 6, 10, 0, 50, 40, 692516), datetime.datetime(2020, 7, 8, 0, 50, 40, 692516), datetime.datetime(2020, 6, 10, 0, 50, 40, 692516), datetime.datetime(2020, 7, 8, 0, 50, 40, 692516))
2020-06-10 00:50:40,702 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:50:40,703 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:50:40,703 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:50:40,703 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:40,703 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:50:40,708 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:50:40,708 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-10 00:50:40,709 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:40,709 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:40,712 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-10 00:50:40,816 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-06-10 00:50:40,816 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:50:40,817 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-06-10 00:50:40,817 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:50:40,817 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:50:40,820 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-06-10 00:51:26,712 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-10 00:51:26,713 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:26,713 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-10 00:51:26,714 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:26,715 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:26,717 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:51:26,717 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-06-10 00:51:26,718 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:26,718 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:26,720 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:51:26,720 INFO sqlalchemy.engine.base.Engine Thread-110 : (132,)
2020-06-10 00:51:26,721 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:51:26,721 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:51:26,721 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:51:26,721 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:51:26,721 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:51:26,730 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:51:26,730 INFO sqlalchemy.engine.base.Engine Thread-110 : (datetime.datetime(2020, 6, 10, 0, 51, 26, 721934), datetime.datetime(2020, 7, 8, 0, 51, 26, 721934), datetime.datetime(2020, 6, 10, 0, 51, 26, 721934), datetime.datetime(2020, 7, 8, 0, 51, 26, 721934), datetime.datetime(2020, 6, 10, 0, 51, 26, 721934), datetime.datetime(2020, 7, 8, 0, 51, 26, 721934))
2020-06-10 00:51:26,731 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:51:26,731 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:51:26,731 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:51:26,731 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:51:26,731 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:51:26,749 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:51:26,749 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-06-10 00:51:26,750 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:26,750 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:26,753 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-10 00:51:27,004 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-10 00:51:27,005 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:27,005 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-10 00:51:27,006 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:27,006 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:27,008 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-10 00:51:27,073 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-10 00:51:27,078 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-10 00:51:27,079 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:27,084 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-10 00:51:27,083 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:27,084 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-10 00:51:27,082 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-10 00:51:27,085 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:27,089 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:27,087 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:27,090 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:27,088 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:27,096 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-10 00:51:27,095 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-10 00:51:27,096 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-10 00:51:27,093 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-10 00:51:27,097 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:27,099 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:27,100 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:27,100 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-10 00:51:27,103 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-10 00:51:27,104 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:27,104 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:27,107 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-10 00:51:31,861 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-10 00:51:31,862 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:31,862 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-10 00:51:31,863 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:31,863 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:31,865 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:51:31,866 INFO sqlalchemy.engine.base.Engine Thread-125 : ('philip', 1, 1)
2020-06-10 00:51:31,866 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:31,866 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:31,868 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:51:31,868 INFO sqlalchemy.engine.base.Engine Thread-125 : (132,)
2020-06-10 00:51:31,869 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:51:31,869 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:51:31,869 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:51:31,869 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:51:31,869 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:51:31,878 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:51:31,878 INFO sqlalchemy.engine.base.Engine Thread-125 : (datetime.datetime(2020, 6, 10, 0, 51, 31, 870175), datetime.datetime(2020, 7, 8, 0, 51, 31, 870175), datetime.datetime(2020, 6, 10, 0, 51, 31, 870175), datetime.datetime(2020, 7, 8, 0, 51, 31, 870175), datetime.datetime(2020, 6, 10, 0, 51, 31, 870175), datetime.datetime(2020, 7, 8, 0, 51, 31, 870175))
2020-06-10 00:51:31,879 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:51:31,879 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:51:31,879 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:51:31,879 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:51:31,880 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:51:31,884 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:51:31,884 INFO sqlalchemy.engine.base.Engine Thread-125 : ('philip', 1, 1)
2020-06-10 00:51:31,884 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:31,885 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:31,888 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-10 00:51:31,990 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-06-10 00:51:31,991 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:51:31,991 INFO sqlalchemy.engine.base.Engine Thread-126 : (1, 1)
2020-06-10 00:51:31,992 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:51:31,992 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:51:31,994 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-06-10 00:55:34,226 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:55:34,226 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:55:34,228 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:55:34,228 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:55:34,229 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:55:34,229 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:55:34,230 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:55:34,230 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:55:34,230 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:55:34,230 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:55:34,231 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:55:34,231 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:55:34,231 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:55:34,231 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:55:34,232 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:55:34,232 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:55:34,233 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:55:34,233 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:55:34,235 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:55:34,235 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:55:34,235 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:55:34,235 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:55:34,236 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:55:34,238 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:34,239 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:55:34,239 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,240 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,243 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:55:34,243 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:55:34,244 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,244 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,248 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:55:34,248 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:55:34,249 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:55:34,249 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:55:34,249 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:55:34,249 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:55:34,249 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:55:34,260 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:55:34,260 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 10, 0, 55, 34, 250008), datetime.datetime(2020, 7, 8, 0, 55, 34, 250008), datetime.datetime(2020, 6, 10, 0, 55, 34, 250008), datetime.datetime(2020, 7, 8, 0, 55, 34, 250008), datetime.datetime(2020, 6, 10, 0, 55, 34, 250008), datetime.datetime(2020, 7, 8, 0, 55, 34, 250008))
2020-06-10 00:55:34,261 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:55:34,262 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:55:34,262 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:55:34,262 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:34,262 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:34,351 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:55:34,351 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:55:34,352 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,352 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,355 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:55:34,654 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:55:34,655 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:34,659 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:55:34,660 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:55:34,668 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:34,667 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,663 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:55:34,671 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:34,671 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:55:34,670 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,669 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:55:34,673 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:34,673 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:55:34,668 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:55:34,679 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,686 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,688 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:55:34,689 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:55:34,690 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,691 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,690 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,694 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:55:34,695 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,698 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:55:34,702 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:55:34,704 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:34,704 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:55:34,704 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:34,705 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:34,707 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:55:40,966 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:55:40,967 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:40,967 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:55:40,968 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:40,968 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:40,971 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:55:40,971 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:55:40,972 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:40,972 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:40,974 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:55:40,974 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-10 00:55:40,975 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:55:40,975 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:55:40,976 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:55:40,976 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:55:40,976 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:55:40,983 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:55:40,984 INFO sqlalchemy.engine.base.Engine Thread-18 : ()
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:55:40,985 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:40,986 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:55:40,986 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:55:40,986 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:40,986 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:40,986 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:55:40,986 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:55:40,986 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:55:40,991 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:55:40,991 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:55:40,991 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:40,991 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:40,995 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-10 00:55:41,253 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:55:41,254 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:41,254 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:55:41,257 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:55:41,258 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:41,259 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:41,259 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:55:41,259 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:41,262 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:55:41,265 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:41,265 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:55:41,266 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:55:41,267 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:41,269 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:41,271 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:55:41,271 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:41,275 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:55:41,273 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:41,272 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:41,275 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:55:41,278 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:55:41,280 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:41,280 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:41,282 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:55:41,308 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:55:41,309 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:41,309 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:55:41,310 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:41,310 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:41,313 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-10 00:55:54,798 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-10 00:55:54,799 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:55:54,800 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-10 00:55:54,800 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:54,801 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:54,803 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:55:54,803 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:55:54,804 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:54,804 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:54,806 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:55:54,806 INFO sqlalchemy.engine.base.Engine Thread-33 : (132,)
2020-06-10 00:55:54,807 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:55:54,808 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:55:54,808 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:55:54,808 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:55:54,808 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:55:54,818 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:55:54,818 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 6, 10, 0, 55, 54, 808804), datetime.datetime(2020, 6, 24, 0, 55, 54, 808804), datetime.datetime(2020, 6, 10, 0, 55, 54, 808804), datetime.datetime(2020, 6, 24, 0, 55, 54, 808804), datetime.datetime(2020, 6, 10, 0, 55, 54, 808804), datetime.datetime(2020, 6, 24, 0, 55, 54, 808804))
2020-06-10 00:55:54,819 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:55:54,819 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:55:54,819 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:55:54,819 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:54,819 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:55:54,824 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:55:54,824 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:55:54,825 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:55:54,825 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:55:54,829 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-10 00:56:02,724 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-10 00:56:02,726 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-10 00:56:02,727 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:02,730 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-10 00:56:02,732 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:02,735 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-10 00:56:02,735 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-10 00:56:02,736 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:02,738 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-10 00:56:02,736 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-10 00:56:02,737 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:02,739 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-10 00:56:02,739 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:02,740 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:02,740 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:02,738 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:02,741 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:02,744 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:02,743 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-10 00:56:02,743 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:02,742 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:02,749 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-10 00:56:02,750 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-10 00:56:02,752 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-10 00:56:03,555 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-10 00:56:03,556 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:03,556 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-10 00:56:03,557 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:03,558 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:03,560 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-10 00:56:08,179 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-10 00:56:08,180 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:08,180 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-10 00:56:08,180 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:08,181 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:08,183 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:56:08,183 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-10 00:56:08,184 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:08,184 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:08,186 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:56:08,186 INFO sqlalchemy.engine.base.Engine Thread-48 : (132,)
2020-06-10 00:56:08,187 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:56:08,188 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:56:08,188 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:56:08,188 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:56:08,188 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:56:22,365 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:56:22,365 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:56:22,366 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:56:22,367 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:56:22,367 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:56:22,368 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:56:22,368 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:56:22,368 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:56:22,369 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:56:22,369 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:56:22,369 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:56:22,369 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:56:22,370 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:56:22,370 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:56:22,372 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:56:22,372 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:56:22,373 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:56:22,373 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:56:22,373 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:56:22,374 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:56:22,374 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:56:22,375 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:56:22,375 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:56:22,378 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:22,378 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:56:22,379 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,379 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,382 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:56:22,382 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:56:22,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,387 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:56:22,387 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:56:22,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:56:22,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:56:22,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:56:22,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:56:22,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:56:22,399 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:56:22,399 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 10, 0, 56, 22, 388903), datetime.datetime(2020, 6, 24, 0, 56, 22, 388903), datetime.datetime(2020, 6, 10, 0, 56, 22, 388903), datetime.datetime(2020, 6, 24, 0, 56, 22, 388903), datetime.datetime(2020, 6, 10, 0, 56, 22, 388903), datetime.datetime(2020, 6, 24, 0, 56, 22, 388903))
2020-06-10 00:56:22,400 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:56:22,400 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:56:22,400 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:56:22,401 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:22,401 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:22,490 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:56:22,490 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:56:22,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,495 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:56:22,748 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:56:22,749 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:22,749 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:56:22,750 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,750 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,764 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:56:22,830 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:56:22,831 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:22,831 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:56:22,835 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,838 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,841 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:56:22,842 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:56:22,844 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:22,844 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:56:22,845 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,848 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,847 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:56:22,847 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:56:22,850 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:22,851 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:56:22,852 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:22,853 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:56:22,853 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:56:22,854 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,854 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,856 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:22,856 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:22,858 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:56:22,859 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:56:30,851 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-10 00:56:30,852 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:30,852 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-10 00:56:30,852 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:30,853 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:30,855 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:56:30,855 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:56:30,856 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:30,856 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:30,858 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:56:30,858 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-10 00:56:30,859 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:56:30,859 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:56:30,859 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:56:30,859 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:56:30,859 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:56:30,868 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-06-10 00:56:30,868 INFO sqlalchemy.engine.base.Engine Thread-18 : ()
2020-06-10 00:56:30,868 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:30,869 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:56:30,870 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-10 00:56:30,870 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:56:30,874 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:56:30,874 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-10 00:56:30,874 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:30,874 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:30,878 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-10 00:56:31,134 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:56:31,135 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:31,135 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:56:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:31,138 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:56:31,202 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:56:31,205 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:56:31,206 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:31,209 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:56:31,210 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:31,215 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:56:31,215 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:31,215 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:56:31,211 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:56:31,216 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:31,216 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:31,218 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:56:31,219 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:31,219 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:31,220 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:56:31,220 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:31,222 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:31,222 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:31,221 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:56:31,226 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:56:31,226 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:31,226 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:31,228 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:56:31,231 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-10 00:56:37,737 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-10 00:56:37,738 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:37,738 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-10 00:56:37,739 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:37,739 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:37,741 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:56:37,741 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:56:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:37,745 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:56:37,745 INFO sqlalchemy.engine.base.Engine Thread-33 : (132,)
2020-06-10 00:56:37,745 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:56:37,745 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:56:37,745 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:56:37,746 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:56:37,746 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:56:37,755 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:56:37,755 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 6, 10, 0, 56, 37, 746404), datetime.datetime(2020, 7, 8, 0, 56, 37, 746404), datetime.datetime(2020, 6, 10, 0, 56, 37, 746404), datetime.datetime(2020, 7, 8, 0, 56, 37, 746404), datetime.datetime(2020, 6, 10, 0, 56, 37, 746404), datetime.datetime(2020, 7, 8, 0, 56, 37, 746404))
2020-06-10 00:56:37,756 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:56:37,756 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:56:37,756 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:56:37,756 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:37,756 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:56:37,760 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:56:37,760 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:56:37,761 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:37,761 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:37,765 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-10 00:56:38,000 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-10 00:56:38,001 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:38,002 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-10 00:56:38,002 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:38,003 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:38,005 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-10 00:56:38,077 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-10 00:56:38,078 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:38,078 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-10 00:56:38,081 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-10 00:56:38,082 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:38,082 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-10 00:56:38,083 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:38,084 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:38,084 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:38,087 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-10 00:56:38,087 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:38,092 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:38,095 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-10 00:56:38,093 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-10 00:56:38,096 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-10 00:56:38,097 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:56:38,098 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-10 00:56:38,099 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:38,100 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:38,100 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-10 00:56:38,103 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-10 00:56:38,104 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:56:38,104 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:56:38,107 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-10 00:57:32,233 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-10 00:57:32,233 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:57:32,235 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:57:32,235 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-10 00:57:32,236 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-10 00:57:32,236 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:57:32,237 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-10 00:57:32,237 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-10 00:57:32,237 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-10 00:57:32,237 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:57:32,238 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-10 00:57:32,238 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-10 00:57:32,238 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-10 00:57:32,238 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:57:32,239 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-10 00:57:32,239 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-10 00:57:32,240 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-10 00:57:32,240 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:57:32,240 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-10 00:57:32,241 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:57:32,241 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-10 00:57:32,241 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-10 00:57:32,242 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-10 00:57:32,244 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:32,244 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-10 00:57:32,245 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,246 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,248 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:32,249 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:57:32,249 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,249 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,253 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:32,253 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-10 00:57:32,254 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:32,254 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:57:32,254 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:57:32,254 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:57:32,254 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:57:32,265 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:57:32,265 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 5, 13, 0, 57, 32, 254974), datetime.datetime(2020, 6, 10, 0, 57, 32, 254974), datetime.datetime(2020, 5, 13, 0, 57, 32, 254974), datetime.datetime(2020, 6, 10, 0, 57, 32, 254974), datetime.datetime(2020, 5, 13, 0, 57, 32, 254974), datetime.datetime(2020, 6, 10, 0, 57, 32, 254974))
2020-06-10 00:57:32,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:57:32,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:57:32,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:57:32,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:57:32,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:57:32,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:57:32,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-10 00:57:32,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:57:32,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:57:32,351 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:32,351 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-10 00:57:32,352 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,352 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,356 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-10 00:57:32,606 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-10 00:57:32,607 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:32,607 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-10 00:57:32,608 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,609 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,622 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-10 00:57:32,680 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-10 00:57:32,681 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:32,681 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-10 00:57:32,683 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,685 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,687 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-10 00:57:32,692 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-10 00:57:32,695 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-10 00:57:32,697 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:32,697 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-10 00:57:32,701 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:32,699 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-10 00:57:32,701 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-10 00:57:32,698 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:32,701 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-10 00:57:32,702 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,702 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,703 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,703 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:32,705 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,703 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:32,711 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-10 00:57:32,709 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-10 00:57:32,708 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-10 00:57:35,233 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-10 00:57:35,234 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:35,234 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-10 00:57:35,235 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,235 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,237 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:35,237 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-10 00:57:35,238 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,238 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,242 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:57:35,243 INFO sqlalchemy.engine.base.Engine Thread-17 : ('18', 1)
2020-06-10 00:57:35,243 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:57:35,243 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, '1,2', 107)
2020-06-10 00:57:35,246 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:35,246 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-06-10 00:57:35,246 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:35,246 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:57:35,247 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:57:35,247 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:57:35,248 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:57:35,248 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-06-10 00:57:35,248 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:35,249 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:57:35,249 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:57:35,251 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:57:35,251 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-06-10 00:57:35,251 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:57:35,252 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:57:35,252 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:57:35,253 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:35,253 INFO sqlalchemy.engine.base.Engine Thread-17 : (127,)
2020-06-10 00:57:35,254 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:35,254 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:35,254 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:35,254 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:35,254 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:57:35,255 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:35,255 INFO sqlalchemy.engine.base.Engine Thread-17 : (105,)
2020-06-10 00:57:35,256 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:35,256 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:57:35,256 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:57:35,294 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:35,294 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-10 00:57:35,294 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,295 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,299 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-10 00:57:35,544 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-10 00:57:35,545 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:35,545 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-10 00:57:35,546 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,547 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,549 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-10 00:57:35,630 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-10 00:57:35,632 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-10 00:57:35,638 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:35,638 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-10 00:57:35,637 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-10 00:57:35,636 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-10 00:57:35,641 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:35,641 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-10 00:57:35,640 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:35,641 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-10 00:57:35,634 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:35,642 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-10 00:57:35,642 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,639 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,643 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,643 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,644 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,642 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:35,643 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,644 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:35,648 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-10 00:57:35,650 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-10 00:57:35,651 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-10 00:57:35,653 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-10 00:57:54,182 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-10 00:57:54,183 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:54,183 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-10 00:57:54,184 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,184 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,187 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:54,187 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-10 00:57:54,188 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,188 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,189 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:57:54,190 INFO sqlalchemy.engine.base.Engine Thread-32 : ('18', 1)
2020-06-10 00:57:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:57:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, '1,2', 107)
2020-06-10 00:57:54,194 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:54,194 INFO sqlalchemy.engine.base.Engine Thread-32 : (82,)
2020-06-10 00:57:54,195 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:54,195 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:57:54,195 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:57:54,195 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:57:54,196 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:57:54,197 INFO sqlalchemy.engine.base.Engine Thread-32 : (1,)
2020-06-10 00:57:54,197 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:54,197 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:57:54,197 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:57:54,198 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:57:54,199 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-06-10 00:57:54,199 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:57:54,199 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:57:54,199 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:57:54,201 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:54,201 INFO sqlalchemy.engine.base.Engine Thread-32 : (127,)
2020-06-10 00:57:54,201 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:54,201 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:54,202 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:54,202 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:54,202 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:57:54,203 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:54,203 INFO sqlalchemy.engine.base.Engine Thread-32 : (105,)
2020-06-10 00:57:54,204 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:54,204 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:57:54,204 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:57:54,209 INFO sqlalchemy.engine.base.Engine Thread-32 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_filter=%s WHERE datesofinterest.id = %s
2020-06-10 00:57:54,209 INFO sqlalchemy.engine.base.Engine Thread-32 : ('18', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 1, 18)
2020-06-10 00:57:54,210 INFO sqlalchemy.engine.base.Engine Thread-32 : COMMIT
2020-06-10 00:57:54,266 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-10 00:57:54,267 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:54,268 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-10 00:57:54,268 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,269 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,271 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:54,271 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:57:54,272 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,272 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,274 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:54,274 INFO sqlalchemy.engine.base.Engine Thread-33 : (132,)
2020-06-10 00:57:54,274 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:54,275 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:57:54,275 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:57:54,275 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:57:54,275 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:57:54,284 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:57:54,284 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 6, 10, 0, 57, 54, 275623), datetime.datetime(2020, 6, 24, 0, 57, 54, 275623), datetime.datetime(2020, 6, 10, 0, 57, 54, 275623), datetime.datetime(2020, 6, 24, 0, 57, 54, 275623), datetime.datetime(2020, 6, 10, 0, 57, 54, 275623), datetime.datetime(2020, 6, 24, 0, 57, 54, 275623))
2020-06-10 00:57:54,285 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:57:54,285 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:57:54,285 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:57:54,286 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:57:54,286 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:57:54,290 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:54,290 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-10 00:57:54,291 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,291 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,294 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-10 00:57:54,568 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-10 00:57:54,569 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:54,569 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-10 00:57:54,570 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,570 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,573 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-10 00:57:54,627 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-10 00:57:54,628 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:54,628 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-10 00:57:54,631 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-10 00:57:54,631 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,633 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:54,639 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-10 00:57:54,637 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,639 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-10 00:57:54,643 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:54,641 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,642 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-10 00:57:54,643 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-10 00:57:54,636 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-10 00:57:54,644 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,646 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:54,648 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-10 00:57:54,649 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-10 00:57:54,649 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,650 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,652 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-10 00:57:54,653 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:54,653 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:54,656 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-10 00:57:58,800 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-10 00:57:58,801 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:58,801 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-10 00:57:58,801 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:58,802 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:58,804 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:58,804 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-10 00:57:58,805 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:58,805 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:58,807 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:57:58,807 INFO sqlalchemy.engine.base.Engine Thread-48 : ('19', 1)
2020-06-10 00:57:58,807 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:57:58,808 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, '', 106)
2020-06-10 00:57:58,810 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:58,810 INFO sqlalchemy.engine.base.Engine Thread-48 : (82,)
2020-06-10 00:57:58,811 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:58,812 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:57:58,812 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:57:58,812 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:57:58,813 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:57:58,813 INFO sqlalchemy.engine.base.Engine Thread-48 : (1,)
2020-06-10 00:57:58,814 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:58,814 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:57:58,814 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:57:58,816 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:57:58,816 INFO sqlalchemy.engine.base.Engine Thread-48 : ()
2020-06-10 00:57:58,816 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:57:58,816 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:57:58,817 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:57:58,818 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:58,818 INFO sqlalchemy.engine.base.Engine Thread-48 : (127,)
2020-06-10 00:57:58,819 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:58,819 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:58,819 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:58,819 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:57:58,819 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:57:58,821 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:57:58,821 INFO sqlalchemy.engine.base.Engine Thread-48 : (105,)
2020-06-10 00:57:58,821 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:57:58,821 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:57:58,821 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:57:58,826 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:57:58,826 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-10 00:57:58,827 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:58,827 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:58,831 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-10 00:57:59,066 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-10 00:57:59,068 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:59,068 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-10 00:57:59,069 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:59,069 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:59,071 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-10 00:57:59,160 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-10 00:57:59,161 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:59,161 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-10 00:57:59,162 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:59,162 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:59,166 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-10 00:57:59,167 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:59,167 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-10 00:57:59,169 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-10 00:57:59,171 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:59,173 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-10 00:57:59,173 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:59,176 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-10 00:57:59,178 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:59,182 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-10 00:57:59,182 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:57:59,182 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-10 00:57:59,181 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-10 00:57:59,183 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:59,184 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:57:59,184 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:59,185 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:57:59,187 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-10 00:57:59,190 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-10 00:58:04,151 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-10 00:58:04,152 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:04,152 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-10 00:58:04,153 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,153 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,156 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:04,157 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-10 00:58:04,157 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,158 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,160 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:04,160 INFO sqlalchemy.engine.base.Engine Thread-63 : (132,)
2020-06-10 00:58:04,161 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:04,161 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:58:04,161 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:58:04,161 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:58:04,161 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:58:04,176 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:58:04,176 INFO sqlalchemy.engine.base.Engine Thread-63 : (datetime.datetime(2020, 6, 10, 0, 58, 4, 162036), datetime.datetime(2020, 6, 24, 0, 58, 4, 162036), datetime.datetime(2020, 6, 10, 0, 58, 4, 162036), datetime.datetime(2020, 6, 24, 0, 58, 4, 162036), datetime.datetime(2020, 6, 10, 0, 58, 4, 162036), datetime.datetime(2020, 6, 24, 0, 58, 4, 162036))
2020-06-10 00:58:04,177 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:58:04,177 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:58:04,177 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:58:04,177 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:58:04,177 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:58:04,182 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:04,182 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-10 00:58:04,183 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,183 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,188 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-10 00:58:04,439 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-10 00:58:04,440 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:04,440 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-10 00:58:04,440 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,441 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,443 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-10 00:58:04,517 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-10 00:58:04,518 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:04,518 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-10 00:58:04,519 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,519 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,523 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-10 00:58:04,528 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:04,528 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-10 00:58:04,529 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-10 00:58:04,526 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-10 00:58:04,533 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-10 00:58:04,533 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,536 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,535 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:04,534 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:04,539 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-10 00:58:04,538 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-10 00:58:04,536 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-10 00:58:04,540 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,540 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,542 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-10 00:58:04,543 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:04,544 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:04,545 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-10 00:58:06,364 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-10 00:58:06,365 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:06,365 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-10 00:58:06,366 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,367 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,369 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:06,369 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-10 00:58:06,370 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,370 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,371 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:58:06,371 INFO sqlalchemy.engine.base.Engine Thread-78 : ('23', 1)
2020-06-10 00:58:06,372 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:58:06,372 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, '2', 107)
2020-06-10 00:58:06,374 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:06,374 INFO sqlalchemy.engine.base.Engine Thread-78 : (82,)
2020-06-10 00:58:06,375 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:06,375 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:58:06,375 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:58:06,375 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:58:06,377 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:58:06,377 INFO sqlalchemy.engine.base.Engine Thread-78 : (1,)
2020-06-10 00:58:06,377 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:06,378 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:58:06,378 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:58:06,379 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:58:06,379 INFO sqlalchemy.engine.base.Engine Thread-78 : ()
2020-06-10 00:58:06,380 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:58:06,380 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:58:06,380 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:58:06,382 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:06,382 INFO sqlalchemy.engine.base.Engine Thread-78 : (127,)
2020-06-10 00:58:06,382 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:06,383 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:06,383 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:06,383 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:06,383 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:58:06,384 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:06,385 INFO sqlalchemy.engine.base.Engine Thread-78 : (105,)
2020-06-10 00:58:06,385 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:06,385 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:58:06,385 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:58:06,391 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:06,391 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-10 00:58:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,395 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-10 00:58:06,638 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-10 00:58:06,639 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:06,639 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-10 00:58:06,640 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,640 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,643 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-10 00:58:06,715 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-10 00:58:06,716 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:06,717 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-10 00:58:06,720 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-10 00:58:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,721 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:06,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,725 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-10 00:58:06,728 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-10 00:58:06,728 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-10 00:58:06,730 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-10 00:58:06,732 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:06,733 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-10 00:58:06,733 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:06,734 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,735 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,736 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,735 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,735 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-10 00:58:06,738 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-10 00:58:06,740 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-10 00:58:06,743 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:06,744 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:06,746 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-10 00:58:11,744 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-10 00:58:11,745 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:11,745 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-10 00:58:11,746 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:11,746 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:11,748 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:11,748 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-10 00:58:11,749 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:11,749 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:11,751 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:11,752 INFO sqlalchemy.engine.base.Engine Thread-93 : (132,)
2020-06-10 00:58:11,752 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:11,753 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:58:11,753 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:58:11,753 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:58:11,753 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:58:11,763 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:58:11,763 INFO sqlalchemy.engine.base.Engine Thread-93 : (datetime.datetime(2020, 6, 10, 0, 58, 11, 753672), datetime.datetime(2020, 6, 24, 0, 58, 11, 753672), datetime.datetime(2020, 6, 10, 0, 58, 11, 753672), datetime.datetime(2020, 6, 24, 0, 58, 11, 753672), datetime.datetime(2020, 6, 10, 0, 58, 11, 753672), datetime.datetime(2020, 6, 24, 0, 58, 11, 753672))
2020-06-10 00:58:11,770 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:58:11,770 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:58:11,771 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:58:11,771 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:58:11,771 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:58:11,775 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:11,776 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-10 00:58:11,777 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:11,777 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:11,781 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-10 00:58:12,160 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-10 00:58:12,161 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:12,162 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-10 00:58:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:12,165 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-10 00:58:12,231 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-10 00:58:12,232 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:12,232 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-10 00:58:12,235 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-10 00:58:12,236 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:12,237 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-10 00:58:12,237 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:12,237 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:12,239 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:12,240 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-10 00:58:12,243 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-10 00:58:12,246 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-10 00:58:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:12,247 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:12,252 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-10 00:58:12,252 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-10 00:58:12,249 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:12,253 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-10 00:58:12,253 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:12,253 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:12,255 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-10 00:58:12,256 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:12,257 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:12,259 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-10 00:58:14,889 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-10 00:58:14,890 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:14,890 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-10 00:58:14,891 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:14,891 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:14,893 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:14,893 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-10 00:58:14,894 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:14,894 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:14,896 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:58:14,896 INFO sqlalchemy.engine.base.Engine Thread-108 : ('15', 1)
2020-06-10 00:58:14,897 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:58:14,897 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'GBR,IND', 129, '', 106)
2020-06-10 00:58:14,899 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:14,899 INFO sqlalchemy.engine.base.Engine Thread-108 : (82,)
2020-06-10 00:58:14,900 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:14,900 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:58:14,900 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:58:14,900 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:58:14,901 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:58:14,901 INFO sqlalchemy.engine.base.Engine Thread-108 : (1,)
2020-06-10 00:58:14,902 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:14,902 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:58:14,902 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:58:14,903 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:58:14,903 INFO sqlalchemy.engine.base.Engine Thread-108 : ()
2020-06-10 00:58:14,904 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:58:14,904 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:58:14,904 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:58:14,905 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:14,905 INFO sqlalchemy.engine.base.Engine Thread-108 : (127,)
2020-06-10 00:58:14,906 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:14,906 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:14,906 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:14,906 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:14,906 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:58:14,908 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:14,908 INFO sqlalchemy.engine.base.Engine Thread-108 : (105,)
2020-06-10 00:58:14,908 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:14,908 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:58:14,908 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:58:14,913 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:14,913 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-10 00:58:14,913 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:14,913 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:14,917 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-10 00:58:15,173 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-10 00:58:15,175 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:15,175 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-10 00:58:15,175 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:15,176 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:15,178 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-10 00:58:15,243 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-10 00:58:15,246 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-10 00:58:15,247 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:15,255 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-10 00:58:15,253 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:15,255 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-10 00:58:15,251 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-10 00:58:15,255 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-10 00:58:15,256 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:15,258 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:15,258 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:15,257 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:15,261 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-10 00:58:15,261 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-10 00:58:15,261 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:15,263 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:15,262 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:15,262 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:15,260 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-10 00:58:15,265 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-10 00:58:15,265 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:15,265 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:15,268 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-10 00:58:15,271 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-10 00:58:25,559 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-10 00:58:25,561 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:25,561 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-10 00:58:25,562 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:25,562 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:25,564 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:25,565 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-06-10 00:58:25,565 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:25,566 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:25,567 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:58:25,567 INFO sqlalchemy.engine.base.Engine Thread-123 : ('15', 1)
2020-06-10 00:58:25,568 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:58:25,568 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'GBR,IND', 129, '', 106)
2020-06-10 00:58:25,571 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:25,571 INFO sqlalchemy.engine.base.Engine Thread-123 : (82,)
2020-06-10 00:58:25,572 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:25,572 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:58:25,572 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:58:25,572 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:58:25,574 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:58:25,574 INFO sqlalchemy.engine.base.Engine Thread-123 : (1,)
2020-06-10 00:58:25,575 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:25,575 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:58:25,575 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:58:25,577 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:58:25,577 INFO sqlalchemy.engine.base.Engine Thread-123 : ()
2020-06-10 00:58:25,577 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:58:25,578 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:58:25,578 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:58:25,579 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:25,579 INFO sqlalchemy.engine.base.Engine Thread-123 : (127,)
2020-06-10 00:58:25,580 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:25,580 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:25,580 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:25,580 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:58:25,580 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:58:25,582 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:25,582 INFO sqlalchemy.engine.base.Engine Thread-123 : (105,)
2020-06-10 00:58:25,583 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:25,583 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:58:25,583 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:58:25,585 INFO sqlalchemy.engine.base.Engine Thread-123 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_type=%s, doi_filter=%s WHERE datesofinterest.id = %s
2020-06-10 00:58:25,585 INFO sqlalchemy.engine.base.Engine Thread-123 : ('15', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 131, 1, 15)
2020-06-10 00:58:25,586 INFO sqlalchemy.engine.base.Engine Thread-123 : COMMIT
2020-06-10 00:58:25,688 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-10 00:58:25,690 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:25,690 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-10 00:58:25,691 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:25,691 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:25,693 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:25,693 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-06-10 00:58:25,694 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:25,694 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:25,696 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:25,697 INFO sqlalchemy.engine.base.Engine Thread-124 : (132,)
2020-06-10 00:58:25,697 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:25,697 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:58:25,698 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:58:25,698 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:58:25,698 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:58:25,706 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:58:25,707 INFO sqlalchemy.engine.base.Engine Thread-124 : (datetime.datetime(2020, 6, 10, 0, 58, 25, 698529), datetime.datetime(2020, 6, 24, 0, 58, 25, 698529), datetime.datetime(2020, 6, 10, 0, 58, 25, 698529), datetime.datetime(2020, 6, 24, 0, 58, 25, 698529), datetime.datetime(2020, 6, 10, 0, 58, 25, 698529), datetime.datetime(2020, 6, 24, 0, 58, 25, 698529))
2020-06-10 00:58:25,707 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:58:25,708 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'BaU Firewall Change')
2020-06-10 00:58:25,708 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:58:25,708 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:58:25,708 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:58:25,712 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:25,712 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-06-10 00:58:25,713 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:25,713 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:25,716 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-10 00:58:25,967 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-06-10 00:58:25,969 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:25,969 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-06-10 00:58:25,970 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:25,970 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:25,972 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-06-10 00:58:26,079 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-10 00:58:26,082 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-10 00:58:26,083 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:26,088 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-06-10 00:58:26,087 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:26,088 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-06-10 00:58:26,086 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-10 00:58:26,093 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:26,093 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-10 00:58:26,092 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:26,094 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:26,088 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:26,097 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:26,096 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-10 00:58:26,096 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:26,091 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-06-10 00:58:26,099 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-10 00:58:26,100 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:26,101 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:26,104 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-10 00:58:26,104 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-06-10 00:58:26,106 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:26,107 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:26,109 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-06-10 00:58:29,023 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-06-10 00:58:29,031 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-10 00:58:29,031 INFO sqlalchemy.engine.base.Engine Thread-139 : ()
2020-06-10 00:58:29,032 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-10 00:58:29,033 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-10 00:58:29,033 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-10 00:58:29,034 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:58:29,035 INFO sqlalchemy.engine.base.Engine Thread-139 : (100,)
2020-06-10 00:58:29,035 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:58:29,036 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:58:29,036 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:58:29,036 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:58:29,036 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:58:29,036 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:58:29,038 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:29,038 INFO sqlalchemy.engine.base.Engine Thread-139 : (1, 1)
2020-06-10 00:58:29,039 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:29,039 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:29,050 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:58:29,050 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-06-10 00:58:29,051 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:29,051 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:29,054 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-06-10 00:58:29,315 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-06-10 00:58:29,316 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:29,316 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-06-10 00:58:29,317 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:29,317 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:29,319 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-06-10 00:58:29,371 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-06-10 00:58:29,373 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-06-10 00:58:29,375 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:29,376 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:29,376 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-06-10 00:58:29,376 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-06-10 00:58:29,380 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-06-10 00:58:29,381 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:29,381 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-06-10 00:58:29,384 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-06-10 00:58:29,384 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:29,386 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:29,385 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:29,388 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:29,385 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:29,386 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:29,389 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-06-10 00:58:29,391 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:29,392 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-06-10 00:58:29,392 INFO sqlalchemy.engine.base.Engine Thread-153 : (1, 1)
2020-06-10 00:58:29,394 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-06-10 00:58:29,397 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:29,398 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:29,400 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-06-10 00:58:30,160 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-06-10 00:58:30,161 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-10 00:58:30,161 INFO sqlalchemy.engine.base.Engine Thread-154 : ('Date Event', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:58:30,162 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-06-10 00:58:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-06-10 00:58:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'BaU Zone 2', '', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-06-10 00:58:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,168 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-10 00:58:30,168 INFO sqlalchemy.engine.base.Engine Thread-154 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:58:30,169 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:58:30,169 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'philip', 'test booking', 'Made Up CheckPoint', datetime.datetime(2020, 6, 7, 21, 19, 20), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-06-10 00:58:30,173 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-10 00:58:30,173 INFO sqlalchemy.engine.base.Engine Thread-154 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:58:30,174 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:58:30,175 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-06-10 00:58:30,200 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-06-10 00:58:30,202 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-10 00:58:30,202 INFO sqlalchemy.engine.base.Engine Thread-155 : ('Date Event', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:58:30,203 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-06-10 00:58:30,203 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,203 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-06-10 00:58:30,203 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'BaU Zone 2', '', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,203 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-06-10 00:58:30,204 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,204 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:58:30,209 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-10 00:58:30,209 INFO sqlalchemy.engine.base.Engine Thread-155 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:58:30,210 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:58:30,210 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'philip', 'test booking', 'Made Up CheckPoint', datetime.datetime(2020, 6, 7, 21, 19, 20), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-06-10 00:58:30,214 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-10 00:58:30,214 INFO sqlalchemy.engine.base.Engine Thread-155 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:58:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:58:30,216 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-06-10 00:58:44,974 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-06-10 00:58:44,975 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:44,975 INFO sqlalchemy.engine.base.Engine Thread-156 : (1, 1)
2020-06-10 00:58:44,976 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:44,976 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:44,982 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:58:44,982 INFO sqlalchemy.engine.base.Engine Thread-156 : (datetime.datetime(2020, 6, 11, 0, 0), datetime.datetime(2020, 6, 11, 23, 59), datetime.datetime(2020, 6, 11, 0, 0), datetime.datetime(2020, 6, 11, 23, 59), datetime.datetime(2020, 6, 11, 0, 0), datetime.datetime(2020, 6, 11, 23, 59))
2020-06-10 00:58:44,983 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-10 00:58:44,983 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (15, 'Summer Change Freeze', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'Summer Change Freeze', 131)
2020-06-10 00:58:45,005 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-06-10 00:58:46,670 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-06-10 00:58:46,671 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:58:46,671 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-06-10 00:58:46,671 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:58:46,672 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:58:46,675 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-10 00:58:46,675 INFO sqlalchemy.engine.base.Engine Thread-157 : (15,)
2020-06-10 00:58:46,676 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-10 00:58:46,676 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (15, 'Summer Change Freeze', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'Summer Change Freeze', 131)
2020-06-10 00:58:46,680 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-10 00:58:46,680 INFO sqlalchemy.engine.base.Engine Thread-157 : (15,)
2020-06-10 00:58:46,681 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id')
2020-06-10 00:58:46,682 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-10 00:58:46,683 INFO sqlalchemy.engine.base.Engine Thread-157 : ()
2020-06-10 00:58:46,683 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:58:46,683 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:58:46,683 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:58:46,686 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-10 00:58:46,686 INFO sqlalchemy.engine.base.Engine Thread-157 : ()
2020-06-10 00:58:46,687 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-10 00:58:46,688 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-10 00:58:46,688 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-10 00:58:46,690 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-10 00:58:46,691 INFO sqlalchemy.engine.base.Engine Thread-157 : (15,)
2020-06-10 00:58:46,691 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-10 00:58:46,691 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'Zone 2 Complexes')
2020-06-10 00:58:46,692 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-10 00:58:46,692 INFO sqlalchemy.engine.base.Engine Thread-157 : (1,)
2020-06-10 00:58:46,693 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('complexgroups_1_group_members',)
2020-06-10 00:58:46,693 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row ('1',)
2020-06-10 00:58:46,699 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-10 00:58:46,699 INFO sqlalchemy.engine.base.Engine Thread-157 : ('1',)
2020-06-10 00:58:46,699 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-10 00:58:46,699 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'Made Up CheckPoint')
2020-06-10 00:58:46,715 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-06-10 00:59:20,328 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-10 00:59:20,329 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:20,329 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-06-10 00:59:20,330 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,330 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,332 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:20,333 INFO sqlalchemy.engine.base.Engine Thread-158 : ('philip', 1, 1)
2020-06-10 00:59:20,333 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,333 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,338 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:20,338 INFO sqlalchemy.engine.base.Engine Thread-158 : (132,)
2020-06-10 00:59:20,339 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:20,339 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:59:20,339 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:59:20,339 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:59:20,339 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:59:20,348 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:59:20,349 INFO sqlalchemy.engine.base.Engine Thread-158 : (datetime.datetime(2020, 6, 10, 0, 59, 20, 340114), datetime.datetime(2020, 6, 24, 0, 59, 20, 340114), datetime.datetime(2020, 6, 10, 0, 59, 20, 340114), datetime.datetime(2020, 6, 24, 0, 59, 20, 340114), datetime.datetime(2020, 6, 10, 0, 59, 20, 340114), datetime.datetime(2020, 6, 24, 0, 59, 20, 340114))
2020-06-10 00:59:20,349 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:59:20,350 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'BaU Firewall Change')
2020-06-10 00:59:20,350 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:59:20,350 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:59:20,350 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:59:20,354 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:20,355 INFO sqlalchemy.engine.base.Engine Thread-158 : ('philip', 1, 1)
2020-06-10 00:59:20,355 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,355 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,359 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-10 00:59:20,625 INFO sqlalchemy.engine.base.Engine Thread-168 : BEGIN (implicit)
2020-06-10 00:59:20,626 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:20,626 INFO sqlalchemy.engine.base.Engine Thread-168 : (1, 1)
2020-06-10 00:59:20,626 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,626 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,629 INFO sqlalchemy.engine.base.Engine Thread-168 : ROLLBACK
2020-06-10 00:59:20,698 INFO sqlalchemy.engine.base.Engine Thread-169 : BEGIN (implicit)
2020-06-10 00:59:20,699 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:20,699 INFO sqlalchemy.engine.base.Engine Thread-169 : (1, 1)
2020-06-10 00:59:20,702 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-06-10 00:59:20,702 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,703 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:20,710 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-06-10 00:59:20,706 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-06-10 00:59:20,709 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,709 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-06-10 00:59:20,711 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:20,715 INFO sqlalchemy.engine.base.Engine Thread-171 : (1, 1)
2020-06-10 00:59:20,711 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,714 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:20,715 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,713 INFO sqlalchemy.engine.base.Engine Thread-169 : ROLLBACK
2020-06-10 00:59:20,715 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-06-10 00:59:20,716 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,718 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-06-10 00:59:20,719 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:20,720 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,719 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:20,723 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-06-10 00:59:20,725 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-06-10 00:59:24,988 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-06-10 00:59:24,989 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:24,989 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-06-10 00:59:24,990 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:24,990 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:24,992 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:24,992 INFO sqlalchemy.engine.base.Engine Thread-173 : ('philip', 1, 1)
2020-06-10 00:59:24,993 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:24,993 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:24,995 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:59:24,995 INFO sqlalchemy.engine.base.Engine Thread-173 : ('15', 1)
2020-06-10 00:59:24,995 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:59:24,995 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'GBR,IND', 131, '1', 106)
2020-06-10 00:59:24,997 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:24,998 INFO sqlalchemy.engine.base.Engine Thread-173 : (82,)
2020-06-10 00:59:24,998 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:24,998 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:59:24,998 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:59:24,999 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:59:25,000 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:59:25,000 INFO sqlalchemy.engine.base.Engine Thread-173 : (1,)
2020-06-10 00:59:25,000 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:25,000 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:59:25,001 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:59:25,002 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:59:25,002 INFO sqlalchemy.engine.base.Engine Thread-173 : ()
2020-06-10 00:59:25,002 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:59:25,003 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:59:25,003 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:59:25,004 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:25,004 INFO sqlalchemy.engine.base.Engine Thread-173 : (127,)
2020-06-10 00:59:25,004 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:25,005 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:59:25,005 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:59:25,005 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:59:25,005 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:59:25,006 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:25,006 INFO sqlalchemy.engine.base.Engine Thread-173 : (105,)
2020-06-10 00:59:25,007 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:25,007 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:59:25,007 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:59:25,012 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:25,012 INFO sqlalchemy.engine.base.Engine Thread-173 : ('philip', 1, 1)
2020-06-10 00:59:25,012 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:25,013 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:25,017 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-06-10 00:59:25,257 INFO sqlalchemy.engine.base.Engine Thread-183 : BEGIN (implicit)
2020-06-10 00:59:25,258 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:25,258 INFO sqlalchemy.engine.base.Engine Thread-183 : (1, 1)
2020-06-10 00:59:25,259 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:25,259 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:25,261 INFO sqlalchemy.engine.base.Engine Thread-183 : ROLLBACK
2020-06-10 00:59:25,338 INFO sqlalchemy.engine.base.Engine Thread-184 : BEGIN (implicit)
2020-06-10 00:59:25,340 INFO sqlalchemy.engine.base.Engine Thread-187 : BEGIN (implicit)
2020-06-10 00:59:25,343 INFO sqlalchemy.engine.base.Engine Thread-185 : BEGIN (implicit)
2020-06-10 00:59:25,344 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:25,349 INFO sqlalchemy.engine.base.Engine Thread-184 : (1, 1)
2020-06-10 00:59:25,346 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-06-10 00:59:25,351 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:25,351 INFO sqlalchemy.engine.base.Engine Thread-186 : (1, 1)
2020-06-10 00:59:25,349 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:25,351 INFO sqlalchemy.engine.base.Engine Thread-185 : (1, 1)
2020-06-10 00:59:25,351 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:25,348 INFO sqlalchemy.engine.base.Engine Thread-187 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:25,352 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:25,352 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:25,352 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:25,353 INFO sqlalchemy.engine.base.Engine Thread-187 : (1, 1)
2020-06-10 00:59:25,353 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:25,353 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:25,358 INFO sqlalchemy.engine.base.Engine Thread-185 : ROLLBACK
2020-06-10 00:59:25,356 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-06-10 00:59:25,355 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:25,360 INFO sqlalchemy.engine.base.Engine Thread-184 : ROLLBACK
2020-06-10 00:59:25,361 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:25,364 INFO sqlalchemy.engine.base.Engine Thread-187 : ROLLBACK
2020-06-10 00:59:31,143 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-06-10 00:59:31,144 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:31,144 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-06-10 00:59:31,145 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,145 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,147 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:31,147 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1, 1)
2020-06-10 00:59:31,148 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,148 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,149 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-10 00:59:31,149 INFO sqlalchemy.engine.base.Engine Thread-188 : ('15', 1)
2020-06-10 00:59:31,150 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-10 00:59:31,150 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'GBR,IND', 131, '1', 106)
2020-06-10 00:59:31,153 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:31,153 INFO sqlalchemy.engine.base.Engine Thread-188 : (82,)
2020-06-10 00:59:31,153 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:31,153 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-10 00:59:31,154 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-10 00:59:31,154 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-10 00:59:31,155 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-10 00:59:31,155 INFO sqlalchemy.engine.base.Engine Thread-188 : (1,)
2020-06-10 00:59:31,156 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:31,156 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-10 00:59:31,156 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-10 00:59:31,157 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-10 00:59:31,157 INFO sqlalchemy.engine.base.Engine Thread-188 : ()
2020-06-10 00:59:31,158 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 00:59:31,158 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 00:59:31,158 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 00:59:31,159 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:31,159 INFO sqlalchemy.engine.base.Engine Thread-188 : (127,)
2020-06-10 00:59:31,160 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:31,160 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:59:31,160 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:59:31,160 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-10 00:59:31,160 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-10 00:59:31,161 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:31,161 INFO sqlalchemy.engine.base.Engine Thread-188 : (105,)
2020-06-10 00:59:31,162 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:31,162 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-10 00:59:31,162 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-10 00:59:31,164 INFO sqlalchemy.engine.base.Engine Thread-188 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_type=%s, doi_filter=%s WHERE datesofinterest.id = %s
2020-06-10 00:59:31,164 INFO sqlalchemy.engine.base.Engine Thread-188 : ('15', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 129, 1, 15)
2020-06-10 00:59:31,165 INFO sqlalchemy.engine.base.Engine Thread-188 : COMMIT
2020-06-10 00:59:31,232 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-06-10 00:59:31,232 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:31,233 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-06-10 00:59:31,233 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,234 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,236 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:31,236 INFO sqlalchemy.engine.base.Engine Thread-189 : ('philip', 1, 1)
2020-06-10 00:59:31,236 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,237 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,238 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:31,239 INFO sqlalchemy.engine.base.Engine Thread-189 : (132,)
2020-06-10 00:59:31,239 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:31,239 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-10 00:59:31,239 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-10 00:59:31,240 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-10 00:59:31,240 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-10 00:59:31,248 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 00:59:31,248 INFO sqlalchemy.engine.base.Engine Thread-189 : (datetime.datetime(2020, 6, 10, 0, 59, 31, 240370), datetime.datetime(2020, 6, 24, 0, 59, 31, 240370), datetime.datetime(2020, 6, 10, 0, 59, 31, 240370), datetime.datetime(2020, 6, 24, 0, 59, 31, 240370), datetime.datetime(2020, 6, 10, 0, 59, 31, 240370), datetime.datetime(2020, 6, 24, 0, 59, 31, 240370))
2020-06-10 00:59:31,249 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-10 00:59:31,249 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-10 00:59:31,249 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-10 00:59:31,249 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:59:31,250 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-10 00:59:31,254 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:31,254 INFO sqlalchemy.engine.base.Engine Thread-189 : ('philip', 1, 1)
2020-06-10 00:59:31,254 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,255 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,258 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-06-10 00:59:31,512 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-06-10 00:59:31,513 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:31,513 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-06-10 00:59:31,514 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,514 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,516 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-06-10 00:59:31,591 INFO sqlalchemy.engine.base.Engine Thread-200 : BEGIN (implicit)
2020-06-10 00:59:31,594 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:31,595 INFO sqlalchemy.engine.base.Engine Thread-201 : BEGIN (implicit)
2020-06-10 00:59:31,601 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:31,599 INFO sqlalchemy.engine.base.Engine Thread-203 : BEGIN (implicit)
2020-06-10 00:59:31,600 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-06-10 00:59:31,604 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:31,604 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-06-10 00:59:31,603 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:31,604 INFO sqlalchemy.engine.base.Engine Thread-203 : (1, 1)
2020-06-10 00:59:31,602 INFO sqlalchemy.engine.base.Engine Thread-201 : (1, 1)
2020-06-10 00:59:31,596 INFO sqlalchemy.engine.base.Engine Thread-200 : (1, 1)
2020-06-10 00:59:31,605 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,606 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,606 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,606 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,609 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,608 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,609 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-06-10 00:59:31,605 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:31,613 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:31,613 INFO sqlalchemy.engine.base.Engine Thread-201 : ROLLBACK
2020-06-10 00:59:31,616 INFO sqlalchemy.engine.base.Engine Thread-203 : ROLLBACK
2020-06-10 00:59:31,617 INFO sqlalchemy.engine.base.Engine Thread-200 : ROLLBACK
2020-06-10 00:59:39,466 INFO sqlalchemy.engine.base.Engine Thread-204 : BEGIN (implicit)
2020-06-10 00:59:39,468 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-10 00:59:39,469 INFO sqlalchemy.engine.base.Engine Thread-204 : ()
2020-06-10 00:59:39,470 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-10 00:59:39,470 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-10 00:59:39,470 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-10 00:59:39,472 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-10 00:59:39,472 INFO sqlalchemy.engine.base.Engine Thread-204 : (100,)
2020-06-10 00:59:39,473 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-10 00:59:39,473 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-10 00:59:39,473 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-10 00:59:39,473 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-10 00:59:39,473 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-10 00:59:39,474 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-10 00:59:39,476 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:39,476 INFO sqlalchemy.engine.base.Engine Thread-204 : (1, 1)
2020-06-10 00:59:39,476 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:39,477 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:39,481 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-10 00:59:39,481 INFO sqlalchemy.engine.base.Engine Thread-204 : ('philip', 1, 1)
2020-06-10 00:59:39,482 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:39,482 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:39,484 INFO sqlalchemy.engine.base.Engine Thread-204 : ROLLBACK
2020-06-10 00:59:39,721 INFO sqlalchemy.engine.base.Engine Thread-214 : BEGIN (implicit)
2020-06-10 00:59:39,722 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:39,722 INFO sqlalchemy.engine.base.Engine Thread-214 : (1, 1)
2020-06-10 00:59:39,723 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:39,723 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:39,726 INFO sqlalchemy.engine.base.Engine Thread-214 : ROLLBACK
2020-06-10 00:59:39,792 INFO sqlalchemy.engine.base.Engine Thread-215 : BEGIN (implicit)
2020-06-10 00:59:39,794 INFO sqlalchemy.engine.base.Engine Thread-216 : BEGIN (implicit)
2020-06-10 00:59:39,797 INFO sqlalchemy.engine.base.Engine Thread-217 : BEGIN (implicit)
2020-06-10 00:59:39,803 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:39,799 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:39,804 INFO sqlalchemy.engine.base.Engine Thread-216 : (1, 1)
2020-06-10 00:59:39,804 INFO sqlalchemy.engine.base.Engine Thread-217 : (1, 1)
2020-06-10 00:59:39,798 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:39,804 INFO sqlalchemy.engine.base.Engine Thread-215 : (1, 1)
2020-06-10 00:59:39,802 INFO sqlalchemy.engine.base.Engine Thread-218 : BEGIN (implicit)
2020-06-10 00:59:39,805 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:39,807 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:39,805 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:39,808 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:39,805 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:39,806 INFO sqlalchemy.engine.base.Engine Thread-218 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 00:59:39,809 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:39,809 INFO sqlalchemy.engine.base.Engine Thread-216 : ROLLBACK
2020-06-10 00:59:39,810 INFO sqlalchemy.engine.base.Engine Thread-218 : (1, 1)
2020-06-10 00:59:39,812 INFO sqlalchemy.engine.base.Engine Thread-215 : ROLLBACK
2020-06-10 00:59:39,814 INFO sqlalchemy.engine.base.Engine Thread-217 : ROLLBACK
2020-06-10 00:59:39,815 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 00:59:39,817 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 00:59:39,819 INFO sqlalchemy.engine.base.Engine Thread-218 : ROLLBACK
2020-06-10 00:59:40,559 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-06-10 00:59:40,561 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-10 00:59:40,561 INFO sqlalchemy.engine.base.Engine Thread-219 : ('Date Event', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:59:40,562 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-06-10 00:59:40,562 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-06-10 00:59:40,562 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-06-10 00:59:40,563 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'BaU Zone 2', '', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:59:40,563 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-06-10 00:59:40,563 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:59:40,563 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:59:40,567 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-10 00:59:40,567 INFO sqlalchemy.engine.base.Engine Thread-219 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:59:40,568 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:59:40,568 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'philip', 'test booking', 'Made Up CheckPoint', datetime.datetime(2020, 6, 7, 21, 19, 20), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-06-10 00:59:40,572 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-10 00:59:40,572 INFO sqlalchemy.engine.base.Engine Thread-219 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:59:40,573 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:59:40,573 INFO sqlalchemy.engine.base.Engine Thread-219 : ROLLBACK
2020-06-10 00:59:40,598 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-06-10 00:59:40,599 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-10 00:59:40,599 INFO sqlalchemy.engine.base.Engine Thread-220 : ('Date Event', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:59:40,600 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-06-10 00:59:40,601 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-06-10 00:59:40,601 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-06-10 00:59:40,601 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'BaU Zone 2', '', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:59:40,601 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-06-10 00:59:40,601 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:59:40,601 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-06-10 00:59:40,605 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-10 00:59:40,605 INFO sqlalchemy.engine.base.Engine Thread-220 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:59:40,606 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:59:40,606 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'philip', 'test booking', 'Made Up CheckPoint', datetime.datetime(2020, 6, 7, 21, 19, 20), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-06-10 00:59:40,610 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-10 00:59:40,610 INFO sqlalchemy.engine.base.Engine Thread-220 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-10 00:59:40,611 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-06-10 00:59:40,612 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-06-10 01:00:10,525 INFO sqlalchemy.engine.base.Engine Thread-221 : BEGIN (implicit)
2020-06-10 01:00:10,526 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 01:00:10,526 INFO sqlalchemy.engine.base.Engine Thread-221 : (1, 1)
2020-06-10 01:00:10,527 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 01:00:10,528 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 01:00:10,532 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-10 01:00:10,532 INFO sqlalchemy.engine.base.Engine Thread-221 : (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 59), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 59), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 59))
2020-06-10 01:00:10,533 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-10 01:00:10,533 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (15, 'Summer Change Freeze', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 11, 23, 45), 'Summer Change Freeze', 129)
2020-06-10 01:00:10,533 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (19, 'Change Freeze RED', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'test locked', 128)
2020-06-10 01:00:10,534 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), '', 131)
2020-06-10 01:00:10,534 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-10 01:00:10,536 INFO sqlalchemy.engine.base.Engine Thread-221 : ROLLBACK
2020-06-10 01:00:14,097 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-06-10 01:00:14,098 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-10 01:00:14,098 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-06-10 01:00:14,099 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-10 01:00:14,099 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 9, 17, 5, 46), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-10 01:00:14,103 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-10 01:00:14,104 INFO sqlalchemy.engine.base.Engine Thread-222 : (23,)
2020-06-10 01:00:14,104 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-10 01:00:14,104 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-10 01:00:14,108 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-10 01:00:14,108 INFO sqlalchemy.engine.base.Engine Thread-222 : (23,)
2020-06-10 01:00:14,108 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id')
2020-06-10 01:00:14,110 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-10 01:00:14,110 INFO sqlalchemy.engine.base.Engine Thread-222 : ()
2020-06-10 01:00:14,111 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-10 01:00:14,111 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'Zone 2 Complexes', 8, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-10 01:00:14,111 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (2, 'Zone 5 Complexes', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-10 01:00:14,114 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-10 01:00:14,114 INFO sqlalchemy.engine.base.Engine Thread-222 : ()
2020-06-10 01:00:14,115 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-10 01:00:14,116 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-10 01:00:14,116 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-10 01:00:14,119 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-10 01:00:14,119 INFO sqlalchemy.engine.base.Engine Thread-222 : (23,)
2020-06-10 01:00:14,120 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-10 01:00:14,120 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (2, 'Zone 5 Complexes')
2020-06-10 01:00:14,121 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-10 01:00:14,121 INFO sqlalchemy.engine.base.Engine Thread-222 : (2,)
2020-06-10 01:00:14,122 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('complexgroups_1_group_members',)
2020-06-10 01:00:14,122 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row ('1,2',)
2020-06-10 01:00:14,128 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-10 01:00:14,128 INFO sqlalchemy.engine.base.Engine Thread-222 : ('1', '2')
2020-06-10 01:00:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-10 01:00:14,129 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'Made Up CheckPoint')
2020-06-10 01:00:14,129 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (2, 'Made Up Fortigate')
2020-06-10 01:00:14,131 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
