2020-06-16 00:00:21,237 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-16 00:00:21,239 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:21,239 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-16 00:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,243 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:21,243 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-06-16 00:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,244 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,246 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:21,246 INFO sqlalchemy.engine.base.Engine Thread-62 : (132,)
2020-06-16 00:00:21,247 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:21,247 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:00:21,247 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:00:21,247 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:00:21,247 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:00:21,258 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:00:21,258 INFO sqlalchemy.engine.base.Engine Thread-62 : (datetime.datetime(2020, 6, 16, 0, 0, 21, 248047), datetime.datetime(2020, 6, 30, 0, 0, 21, 248047), datetime.datetime(2020, 6, 16, 0, 0, 21, 248047), datetime.datetime(2020, 6, 30, 0, 0, 21, 248047), datetime.datetime(2020, 6, 16, 0, 0, 21, 248047), datetime.datetime(2020, 6, 30, 0, 0, 21, 248047))
2020-06-16 00:00:21,259 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:00:21,260 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:00:21,260 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:00:21,264 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:21,265 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-06-16 00:00:21,265 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,266 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,268 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-16 00:00:21,525 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-16 00:00:21,527 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:21,527 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-16 00:00:21,528 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,528 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,530 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-16 00:00:21,592 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-16 00:00:21,593 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:21,593 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-16 00:00:21,596 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-16 00:00:21,597 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:21,597 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-16 00:00:21,598 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,598 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,599 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,599 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,602 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-16 00:00:21,605 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-16 00:00:21,606 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-16 00:00:21,608 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-16 00:00:21,609 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:21,610 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:21,611 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-16 00:00:21,612 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-16 00:00:21,613 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,613 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,614 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-16 00:00:21,613 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:21,615 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:21,616 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-16 00:00:23,440 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-16 00:00:23,441 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:23,441 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-16 00:00:23,442 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,442 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,444 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:23,444 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-06-16 00:00:23,445 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,445 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,447 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:00:23,447 INFO sqlalchemy.engine.base.Engine Thread-77 : ('15', 1)
2020-06-16 00:00:23,448 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:00:23,448 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:00:23,450 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:23,450 INFO sqlalchemy.engine.base.Engine Thread-77 : (82,)
2020-06-16 00:00:23,451 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:23,451 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:00:23,451 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:00:23,451 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:00:23,453 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:00:23,453 INFO sqlalchemy.engine.base.Engine Thread-77 : (1,)
2020-06-16 00:00:23,453 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:23,454 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:00:23,454 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:00:23,455 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:00:23,455 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-06-16 00:00:23,455 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:00:23,456 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:00:23,456 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:00:23,457 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:00:23,457 INFO sqlalchemy.engine.base.Engine Thread-77 : (127, 0)
2020-06-16 00:00:23,458 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:23,458 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:23,458 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:23,458 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:23,458 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:00:23,460 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:23,460 INFO sqlalchemy.engine.base.Engine Thread-77 : (105,)
2020-06-16 00:00:23,460 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:23,461 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:00:23,461 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:00:23,493 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:23,493 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-06-16 00:00:23,494 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,494 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,497 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-16 00:00:23,774 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-06-16 00:00:23,775 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:23,775 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-16 00:00:23,776 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,776 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,777 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-06-16 00:00:23,857 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-16 00:00:23,858 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:23,858 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-16 00:00:23,862 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-16 00:00:23,865 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:23,865 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-16 00:00:23,862 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,868 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-16 00:00:23,868 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,869 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,871 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-16 00:00:23,873 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:23,875 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-16 00:00:23,875 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,876 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:23,876 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-16 00:00:23,878 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-16 00:00:23,879 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-16 00:00:23,879 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,880 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,880 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:23,881 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:23,882 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-16 00:00:23,883 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-16 00:00:31,267 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-16 00:00:31,268 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:31,268 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-16 00:00:31,269 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,269 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,272 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:31,272 INFO sqlalchemy.engine.base.Engine Thread-92 : ('philip', 1, 1)
2020-06-16 00:00:31,273 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,273 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,274 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:00:31,274 INFO sqlalchemy.engine.base.Engine Thread-92 : ('15', 1)
2020-06-16 00:00:31,275 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:00:31,275 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:00:31,278 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:31,278 INFO sqlalchemy.engine.base.Engine Thread-92 : (82,)
2020-06-16 00:00:31,278 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:31,278 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:00:31,279 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:00:31,279 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:00:31,280 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:00:31,280 INFO sqlalchemy.engine.base.Engine Thread-92 : (1,)
2020-06-16 00:00:31,281 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:31,281 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:00:31,281 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:00:31,282 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:00:31,282 INFO sqlalchemy.engine.base.Engine Thread-92 : ()
2020-06-16 00:00:31,283 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:00:31,283 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:00:31,283 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:00:31,284 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:00:31,285 INFO sqlalchemy.engine.base.Engine Thread-92 : (127, 0)
2020-06-16 00:00:31,285 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:31,285 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:31,285 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:31,286 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:31,286 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:00:31,287 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:31,287 INFO sqlalchemy.engine.base.Engine Thread-92 : (105,)
2020-06-16 00:00:31,288 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:31,288 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:00:31,289 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:00:31,293 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:31,293 INFO sqlalchemy.engine.base.Engine Thread-92 : ('philip', 1, 1)
2020-06-16 00:00:31,294 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,294 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,298 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-16 00:00:31,525 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-06-16 00:00:31,526 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:31,526 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-06-16 00:00:31,527 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,527 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,528 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-06-16 00:00:31,597 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-16 00:00:31,600 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-16 00:00:31,601 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:31,602 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:31,606 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-16 00:00:31,606 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-16 00:00:31,606 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-16 00:00:31,607 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,608 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,613 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,614 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-16 00:00:31,612 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,609 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:31,612 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-16 00:00:31,615 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-16 00:00:31,615 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-16 00:00:31,617 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:31,617 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-16 00:00:31,618 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,619 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,620 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-16 00:00:31,620 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:31,621 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:31,622 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-16 00:00:41,662 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-16 00:00:41,663 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:41,663 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-16 00:00:41,664 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:41,664 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:41,666 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:41,666 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-06-16 00:00:41,667 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:41,668 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:41,670 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:41,670 INFO sqlalchemy.engine.base.Engine Thread-107 : (132,)
2020-06-16 00:00:41,670 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:41,671 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:00:41,671 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:00:41,671 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:00:41,671 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:00:41,681 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:00:41,681 INFO sqlalchemy.engine.base.Engine Thread-107 : (datetime.datetime(2020, 6, 16, 0, 0, 41, 671686), datetime.datetime(2020, 6, 30, 0, 0, 41, 671686), datetime.datetime(2020, 6, 16, 0, 0, 41, 671686), datetime.datetime(2020, 6, 30, 0, 0, 41, 671686), datetime.datetime(2020, 6, 16, 0, 0, 41, 671686), datetime.datetime(2020, 6, 30, 0, 0, 41, 671686))
2020-06-16 00:00:41,682 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:00:41,682 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:00:41,682 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:00:41,687 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:41,687 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-06-16 00:00:41,688 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:41,688 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:41,690 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-16 00:00:41,947 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-16 00:00:41,949 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-06-16 00:00:41,951 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:41,959 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-16 00:00:41,954 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-16 00:00:41,958 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:41,960 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-06-16 00:00:41,960 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:41,961 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-16 00:00:41,961 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:41,962 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:41,963 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-16 00:00:41,961 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:41,962 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:41,965 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:41,965 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:41,957 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-16 00:00:41,966 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-06-16 00:00:41,967 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-16 00:00:41,968 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:41,969 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-16 00:00:41,971 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:41,971 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:41,972 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-16 00:00:42,000 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-16 00:00:42,001 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:42,001 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-16 00:00:42,002 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:42,002 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:42,003 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-16 00:00:44,075 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-16 00:00:44,076 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:44,076 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-16 00:00:44,077 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,077 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,080 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:44,080 INFO sqlalchemy.engine.base.Engine Thread-122 : ('philip', 1, 1)
2020-06-16 00:00:44,081 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,081 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,082 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:00:44,082 INFO sqlalchemy.engine.base.Engine Thread-122 : ('15', 1)
2020-06-16 00:00:44,083 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:00:44,083 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:00:44,086 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:44,086 INFO sqlalchemy.engine.base.Engine Thread-122 : (82,)
2020-06-16 00:00:44,087 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:44,087 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:00:44,087 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:00:44,087 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:00:44,089 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:00:44,089 INFO sqlalchemy.engine.base.Engine Thread-122 : (1,)
2020-06-16 00:00:44,089 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:44,089 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:00:44,089 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:00:44,091 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:00:44,091 INFO sqlalchemy.engine.base.Engine Thread-122 : ()
2020-06-16 00:00:44,091 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:00:44,091 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:00:44,091 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:00:44,093 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:00:44,093 INFO sqlalchemy.engine.base.Engine Thread-122 : (127, 0)
2020-06-16 00:00:44,094 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:44,094 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:44,094 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:44,094 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:44,094 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:00:44,095 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:44,095 INFO sqlalchemy.engine.base.Engine Thread-122 : (105,)
2020-06-16 00:00:44,096 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:44,096 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:00:44,096 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:00:44,100 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:44,100 INFO sqlalchemy.engine.base.Engine Thread-122 : ('philip', 1, 1)
2020-06-16 00:00:44,101 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,101 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,105 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-16 00:00:44,366 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-06-16 00:00:44,367 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:44,368 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-06-16 00:00:44,368 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,369 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,370 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-06-16 00:00:44,420 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-16 00:00:44,421 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:44,421 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-16 00:00:44,424 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-06-16 00:00:44,425 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,430 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,429 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-16 00:00:44,426 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:44,433 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-16 00:00:44,434 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-16 00:00:44,435 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:44,435 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-06-16 00:00:44,436 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:44,437 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-06-16 00:00:44,436 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-06-16 00:00:44,438 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,439 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,440 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-06-16 00:00:44,440 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,441 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,443 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-16 00:00:44,443 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:44,444 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:44,445 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-16 00:00:47,376 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-16 00:00:47,377 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:47,377 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-16 00:00:47,378 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,378 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,380 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:47,380 INFO sqlalchemy.engine.base.Engine Thread-137 : ('philip', 1, 1)
2020-06-16 00:00:47,381 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,381 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,382 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:00:47,385 INFO sqlalchemy.engine.base.Engine Thread-137 : ('15', 1)
2020-06-16 00:00:47,385 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:00:47,385 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:00:47,388 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:47,388 INFO sqlalchemy.engine.base.Engine Thread-137 : (82,)
2020-06-16 00:00:47,389 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:47,389 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:00:47,389 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:00:47,389 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:00:47,390 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:00:47,390 INFO sqlalchemy.engine.base.Engine Thread-137 : (1,)
2020-06-16 00:00:47,391 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:47,391 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:00:47,391 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:00:47,392 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:00:47,392 INFO sqlalchemy.engine.base.Engine Thread-137 : ()
2020-06-16 00:00:47,393 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:00:47,393 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:00:47,393 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:00:47,394 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:00:47,394 INFO sqlalchemy.engine.base.Engine Thread-137 : (127, 0)
2020-06-16 00:00:47,395 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:47,396 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:47,396 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:47,396 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:00:47,396 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:00:47,397 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:00:47,397 INFO sqlalchemy.engine.base.Engine Thread-137 : (105,)
2020-06-16 00:00:47,398 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:00:47,398 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:00:47,398 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:00:47,403 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:00:47,403 INFO sqlalchemy.engine.base.Engine Thread-137 : ('philip', 1, 1)
2020-06-16 00:00:47,404 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,404 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,408 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-16 00:00:47,672 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-06-16 00:00:47,673 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:47,673 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-06-16 00:00:47,674 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,674 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,675 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-06-16 00:00:47,765 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-06-16 00:00:47,767 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-06-16 00:00:47,769 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-06-16 00:00:47,772 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:47,776 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-06-16 00:00:47,775 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:47,776 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-06-16 00:00:47,773 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:47,776 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-06-16 00:00:47,777 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,777 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,777 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,779 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,779 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-06-16 00:00:47,780 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,782 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,782 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:00:47,784 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-06-16 00:00:47,783 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-06-16 00:00:47,784 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-06-16 00:00:47,781 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-06-16 00:00:47,785 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:00:47,786 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:00:47,788 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-06-16 00:01:16,092 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:01:16,092 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:01:16,093 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:01:16,094 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:01:16,095 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:01:16,095 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:01:16,095 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:01:16,095 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:01:16,096 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:01:16,096 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:01:16,096 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:01:16,096 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:01:16,096 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:01:16,096 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:01:16,097 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:01:16,097 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:01:16,098 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:01:16,098 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:01:16,098 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:01:16,099 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:01:16,099 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:01:16,099 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:01:16,100 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:01:16,102 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:16,102 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:01:16,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,106 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:16,106 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:01:16,106 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,107 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,110 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:16,110 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-16 00:01:16,110 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:16,111 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:01:16,111 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:01:16,111 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:01:16,111 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:01:16,122 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:01:16,122 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 16, 0, 1, 16, 111655), datetime.datetime(2020, 6, 30, 0, 1, 16, 111655), datetime.datetime(2020, 6, 16, 0, 1, 16, 111655), datetime.datetime(2020, 6, 30, 0, 1, 16, 111655), datetime.datetime(2020, 6, 16, 0, 1, 16, 111655), datetime.datetime(2020, 6, 30, 0, 1, 16, 111655))
2020-06-16 00:01:16,123 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:01:16,123 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:01:16,124 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:01:16,198 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:16,198 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:01:16,199 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,199 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,201 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:01:16,455 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-16 00:01:16,456 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:16,456 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-16 00:01:16,457 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,458 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,470 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-16 00:01:16,531 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-16 00:01:16,533 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-16 00:01:16,535 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:16,536 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:16,536 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-16 00:01:16,539 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 00:01:16,539 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-16 00:01:16,540 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,545 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,545 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,542 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:16,546 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,546 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-16 00:01:16,549 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-16 00:01:16,548 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-16 00:01:16,550 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:16,550 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-16 00:01:16,550 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,547 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-16 00:01:16,551 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,552 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-16 00:01:16,553 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:16,554 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:16,556 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-16 00:01:18,232 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-16 00:01:18,234 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:18,234 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-16 00:01:18,234 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,235 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,237 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:18,238 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 00:01:18,238 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,238 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,241 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:01:18,241 INFO sqlalchemy.engine.base.Engine Thread-17 : ('15', 1)
2020-06-16 00:01:18,242 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:01:18,242 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:01:18,245 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:18,245 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-06-16 00:01:18,245 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:18,245 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:01:18,246 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:01:18,246 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:01:18,247 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:01:18,247 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-06-16 00:01:18,248 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:18,248 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:01:18,248 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:01:18,250 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:01:18,250 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-06-16 00:01:18,250 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:01:18,251 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:01:18,251 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:01:18,252 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:01:18,252 INFO sqlalchemy.engine.base.Engine Thread-17 : (127, 0)
2020-06-16 00:01:18,253 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:18,253 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:18,253 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:18,253 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:18,253 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:01:18,255 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:18,255 INFO sqlalchemy.engine.base.Engine Thread-17 : (105,)
2020-06-16 00:01:18,255 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:18,255 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:01:18,255 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:01:18,293 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:18,293 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 00:01:18,294 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,294 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,296 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-16 00:01:18,558 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-16 00:01:18,561 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-16 00:01:18,562 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:18,570 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-16 00:01:18,564 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-16 00:01:18,570 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:18,571 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-16 00:01:18,571 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:18,572 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-16 00:01:18,568 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-16 00:01:18,574 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:18,572 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,574 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,573 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,576 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,576 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-16 00:01:18,572 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,577 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,577 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-16 00:01:18,574 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-16 00:01:18,578 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-16 00:01:18,581 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,582 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,583 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-16 00:01:18,610 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-16 00:01:18,611 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:18,611 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-16 00:01:18,612 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:18,613 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:18,614 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-16 00:01:21,051 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-16 00:01:21,052 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:21,052 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-16 00:01:21,053 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,053 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,055 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:21,055 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-16 00:01:21,056 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,056 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,058 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:01:21,058 INFO sqlalchemy.engine.base.Engine Thread-32 : ('15', 1)
2020-06-16 00:01:21,058 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:01:21,059 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:01:21,062 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:21,062 INFO sqlalchemy.engine.base.Engine Thread-32 : (82,)
2020-06-16 00:01:21,063 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:21,063 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:01:21,063 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:01:21,063 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:01:21,064 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:01:21,065 INFO sqlalchemy.engine.base.Engine Thread-32 : (1,)
2020-06-16 00:01:21,065 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:21,065 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:01:21,066 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:01:21,067 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:01:21,067 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-06-16 00:01:21,068 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:01:21,068 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:01:21,068 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:01:21,071 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:01:21,071 INFO sqlalchemy.engine.base.Engine Thread-32 : (127, 0)
2020-06-16 00:01:21,071 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:21,072 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:21,072 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:21,072 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:21,072 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:01:21,074 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:21,074 INFO sqlalchemy.engine.base.Engine Thread-32 : (105,)
2020-06-16 00:01:21,075 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:21,075 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:01:21,075 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:01:21,081 INFO sqlalchemy.engine.base.Engine Thread-32 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-06-16 00:01:21,081 INFO sqlalchemy.engine.base.Engine Thread-32 : ('15', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 15)
2020-06-16 00:01:21,082 INFO sqlalchemy.engine.base.Engine Thread-32 : COMMIT
2020-06-16 00:01:21,134 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-16 00:01:21,135 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:21,135 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-16 00:01:21,136 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,136 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,139 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:21,139 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-16 00:01:21,140 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,140 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,142 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:21,142 INFO sqlalchemy.engine.base.Engine Thread-33 : (132,)
2020-06-16 00:01:21,143 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:21,143 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:01:21,143 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:01:21,143 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:01:21,143 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:01:21,152 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:01:21,152 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 6, 16, 0, 1, 21, 144137), datetime.datetime(2020, 6, 30, 0, 1, 21, 144137), datetime.datetime(2020, 6, 16, 0, 1, 21, 144137), datetime.datetime(2020, 6, 30, 0, 1, 21, 144137), datetime.datetime(2020, 6, 16, 0, 1, 21, 144137), datetime.datetime(2020, 6, 30, 0, 1, 21, 144137))
2020-06-16 00:01:21,152 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:01:21,153 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:01:21,153 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:01:21,157 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:21,157 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-16 00:01:21,157 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,157 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,160 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-16 00:01:21,398 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-16 00:01:21,399 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:21,399 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-16 00:01:21,400 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,400 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,401 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-16 00:01:21,463 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-16 00:01:21,464 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:21,467 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-16 00:01:21,467 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-16 00:01:21,470 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-16 00:01:21,471 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:21,472 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:21,476 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-16 00:01:21,475 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,476 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,475 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-16 00:01:21,478 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:21,477 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-16 00:01:21,479 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,478 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-16 00:01:21,480 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,481 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-16 00:01:21,476 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-16 00:01:21,482 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,484 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,485 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-16 00:01:21,483 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:21,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:21,487 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-16 00:01:25,181 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-16 00:01:25,182 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:25,182 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-16 00:01:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,183 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,185 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:25,185 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-16 00:01:25,185 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,186 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,187 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:01:25,187 INFO sqlalchemy.engine.base.Engine Thread-48 : ('15', 1)
2020-06-16 00:01:25,187 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:01:25,188 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:01:25,190 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:25,190 INFO sqlalchemy.engine.base.Engine Thread-48 : (82,)
2020-06-16 00:01:25,190 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:25,191 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:01:25,191 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:01:25,191 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:01:25,192 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:01:25,192 INFO sqlalchemy.engine.base.Engine Thread-48 : (1,)
2020-06-16 00:01:25,193 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:25,193 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:01:25,193 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:01:25,194 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:01:25,194 INFO sqlalchemy.engine.base.Engine Thread-48 : ()
2020-06-16 00:01:25,195 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:01:25,195 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:01:25,195 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:01:25,196 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:01:25,197 INFO sqlalchemy.engine.base.Engine Thread-48 : (127, 0)
2020-06-16 00:01:25,197 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:25,197 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:25,197 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:25,197 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:01:25,198 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:01:25,199 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:25,199 INFO sqlalchemy.engine.base.Engine Thread-48 : (105,)
2020-06-16 00:01:25,199 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:25,200 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:01:25,200 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:01:25,204 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:25,204 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-16 00:01:25,204 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,205 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,207 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-16 00:01:25,453 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-16 00:01:25,454 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:25,454 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-16 00:01:25,455 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,455 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,456 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-16 00:01:25,529 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-16 00:01:25,531 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-16 00:01:25,534 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:25,538 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-16 00:01:25,538 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:25,542 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-16 00:01:25,539 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,542 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-16 00:01:25,537 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-16 00:01:25,543 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,543 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,544 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:25,545 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:25,546 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,547 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-16 00:01:25,547 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-16 00:01:25,547 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-16 00:01:25,548 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-16 00:01:25,550 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,550 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:25,551 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,551 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:25,553 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-16 00:01:25,554 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-16 00:01:31,167 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-16 00:01:31,168 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:31,168 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-16 00:01:31,169 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,169 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,172 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:31,172 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-16 00:01:31,173 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,173 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,175 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:31,175 INFO sqlalchemy.engine.base.Engine Thread-63 : (132,)
2020-06-16 00:01:31,176 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:31,176 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:01:31,176 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:01:31,176 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:01:31,176 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:01:31,185 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:01:31,185 INFO sqlalchemy.engine.base.Engine Thread-63 : (datetime.datetime(2020, 6, 16, 0, 1, 31, 176967), datetime.datetime(2020, 6, 30, 0, 1, 31, 176967), datetime.datetime(2020, 6, 16, 0, 1, 31, 176967), datetime.datetime(2020, 6, 30, 0, 1, 31, 176967), datetime.datetime(2020, 6, 16, 0, 1, 31, 176967), datetime.datetime(2020, 6, 30, 0, 1, 31, 176967))
2020-06-16 00:01:31,186 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:01:31,186 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:01:31,186 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:01:31,190 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:31,190 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-16 00:01:31,190 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,191 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,193 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-16 00:01:31,439 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-16 00:01:31,440 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:31,440 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-16 00:01:31,441 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,441 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,442 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-16 00:01:31,510 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-16 00:01:31,512 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:31,512 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-16 00:01:31,513 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-16 00:01:31,514 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:31,515 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-16 00:01:31,515 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,518 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-16 00:01:31,521 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-16 00:01:31,524 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:31,524 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-16 00:01:31,523 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:31,521 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,526 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-16 00:01:31,525 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-16 00:01:31,521 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,526 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,526 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:31,528 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,528 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,527 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:31,531 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-16 00:01:31,530 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-16 00:01:31,529 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-16 00:01:33,272 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-16 00:01:33,278 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:01:33,278 INFO sqlalchemy.engine.base.Engine Thread-78 : ()
2020-06-16 00:01:33,279 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:01:33,280 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:01:33,280 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:01:33,281 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:01:33,281 INFO sqlalchemy.engine.base.Engine Thread-78 : (100,)
2020-06-16 00:01:33,282 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:01:33,282 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 00:01:33,282 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 00:01:33,282 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 00:01:33,282 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 00:01:33,283 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 00:01:33,284 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:33,285 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-16 00:01:33,285 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:33,285 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:33,295 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:01:33,295 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-16 00:01:33,296 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:33,296 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:33,297 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-16 00:01:33,543 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-16 00:01:33,545 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:33,553 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-16 00:01:33,547 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-16 00:01:33,552 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-16 00:01:33,550 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-16 00:01:33,556 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:33,555 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:33,556 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-16 00:01:33,556 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-16 00:01:33,554 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:33,557 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-16 00:01:33,557 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:33,557 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:33,558 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:33,558 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:33,558 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:33,561 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:33,560 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-16 00:01:33,561 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-16 00:01:33,559 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:33,562 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-16 00:01:33,563 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:33,566 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-16 00:01:33,599 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-16 00:01:33,600 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:33,600 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-16 00:01:33,600 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:33,601 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:33,602 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-16 00:01:34,311 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-16 00:01:34,313 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:01:34,313 INFO sqlalchemy.engine.base.Engine Thread-93 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:01:34,315 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:01:34,316 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:01:34,316 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:01:34,316 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 00:01:34,316 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:01:34,316 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:01:34,316 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:01:34,322 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:01:34,322 INFO sqlalchemy.engine.base.Engine Thread-93 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:01:34,323 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:01:34,323 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:01:34,327 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:01:34,327 INFO sqlalchemy.engine.base.Engine Thread-93 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:01:34,328 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:01:34,328 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:01:34,329 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-16 00:01:34,360 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-16 00:01:34,364 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:01:34,364 INFO sqlalchemy.engine.base.Engine Thread-94 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:01:34,365 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:01:34,366 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:01:34,366 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:01:34,366 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 00:01:34,366 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:01:34,366 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:01:34,366 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:01:34,370 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:01:34,370 INFO sqlalchemy.engine.base.Engine Thread-94 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:01:34,371 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:01:34,372 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:01:34,376 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:01:34,376 INFO sqlalchemy.engine.base.Engine Thread-94 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:01:34,377 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:01:34,377 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:01:34,378 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-16 00:01:34,411 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-16 00:01:34,412 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,412 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-16 00:01:34,412 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,412 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,421 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-16 00:01:34,422 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,422 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-16 00:01:34,427 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,428 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,428 INFO sqlalchemy.engine.base.Engine Thread-95 : (15, 1)
2020-06-16 00:01:34,430 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-06-16 00:01:34,432 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,432 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-06-16 00:01:34,430 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,432 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:01:34,439 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:01:34,439 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,440 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,444 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,457 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-06-16 00:01:34,458 INFO sqlalchemy.engine.base.Engine Thread-96 : (19, 1)
2020-06-16 00:01:34,472 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,484 INFO sqlalchemy.engine.base.Engine Thread-97 : (20, 1)
2020-06-16 00:01:34,484 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-16 00:01:34,485 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-06-16 00:01:34,484 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-06-16 00:01:34,486 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,488 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-06-16 00:01:34,487 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,488 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-06-16 00:01:34,473 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,488 INFO sqlalchemy.engine.base.Engine Thread-98 : (1, 1)
2020-06-16 00:01:34,488 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,488 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:01:34,489 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,489 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,502 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,496 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:01:34,502 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,518 INFO sqlalchemy.engine.base.Engine Thread-100 : (23, 1)
2020-06-16 00:01:34,491 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:01:34,520 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-16 00:01:34,517 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,520 INFO sqlalchemy.engine.base.Engine Thread-98 : (21, 1)
2020-06-16 00:01:34,502 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,521 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,518 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:01:34,516 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-06-16 00:01:34,527 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:01:34,532 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,533 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-06-16 00:01:34,534 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,535 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:01:34,536 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:01:34,536 INFO sqlalchemy.engine.base.Engine Thread-99 : (22, 1)
2020-06-16 00:01:34,536 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-06-16 00:01:34,538 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:01:34,543 INFO sqlalchemy.engine.base.Engine Thread-98 : ROLLBACK
2020-06-16 00:01:34,544 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,544 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,544 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:01:34,539 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-06-16 00:01:34,542 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-06-16 00:01:34,561 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:01:34,563 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:01:34,573 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-06-16 00:01:34,573 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-06-16 00:01:34,572 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,574 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:01:34,575 INFO sqlalchemy.engine.base.Engine Thread-101 : (31, 1)
2020-06-16 00:01:34,575 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:01:34,582 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:01:34,584 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:01:34,595 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-06-16 00:01:34,602 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:01:34,603 INFO sqlalchemy.engine.base.Engine Thread-102 : (30, 1)
2020-06-16 00:01:34,604 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:01:34,608 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:01:34,609 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-06-16 00:04:10,519 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-16 00:04:10,521 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:10,521 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-16 00:04:10,522 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,522 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,525 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:10,525 INFO sqlalchemy.engine.base.Engine Thread-103 : ('philip', 1, 1)
2020-06-16 00:04:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,526 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,528 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:04:10,528 INFO sqlalchemy.engine.base.Engine Thread-103 : (132,)
2020-06-16 00:04:10,529 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:10,529 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:04:10,529 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:04:10,529 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:04:10,529 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:04:10,538 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:04:10,538 INFO sqlalchemy.engine.base.Engine Thread-103 : (datetime.datetime(2020, 6, 16, 0, 4, 10, 529790), datetime.datetime(2020, 6, 30, 0, 4, 10, 529790), datetime.datetime(2020, 6, 16, 0, 4, 10, 529790), datetime.datetime(2020, 6, 30, 0, 4, 10, 529790), datetime.datetime(2020, 6, 16, 0, 4, 10, 529790), datetime.datetime(2020, 6, 30, 0, 4, 10, 529790))
2020-06-16 00:04:10,539 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:04:10,539 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:04:10,539 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:04:10,543 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:10,544 INFO sqlalchemy.engine.base.Engine Thread-103 : ('philip', 1, 1)
2020-06-16 00:04:10,544 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,544 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,546 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-16 00:04:10,800 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-06-16 00:04:10,802 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-06-16 00:04:10,806 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:10,810 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-06-16 00:04:10,807 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-06-16 00:04:10,810 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-06-16 00:04:10,804 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:10,811 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,812 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:10,813 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:10,813 INFO sqlalchemy.engine.base.Engine Thread-113 : (1, 1)
2020-06-16 00:04:10,814 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,814 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-06-16 00:04:10,815 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,817 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,816 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-06-16 00:04:10,816 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,818 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-06-16 00:04:10,814 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-06-16 00:04:10,818 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,821 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-06-16 00:04:10,821 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,822 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,823 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-06-16 00:04:10,850 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-06-16 00:04:10,851 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:10,851 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-06-16 00:04:10,852 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:10,852 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:10,853 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-06-16 00:04:12,750 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-16 00:04:12,752 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:12,752 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-16 00:04:12,752 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:12,753 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:12,755 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:12,755 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-06-16 00:04:12,756 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:12,756 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:12,758 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:04:12,758 INFO sqlalchemy.engine.base.Engine Thread-118 : ('15', 1)
2020-06-16 00:04:12,758 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:04:12,759 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:04:12,761 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:04:12,761 INFO sqlalchemy.engine.base.Engine Thread-118 : (82,)
2020-06-16 00:04:12,761 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:12,761 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:04:12,761 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:04:12,761 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:04:12,763 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:04:12,763 INFO sqlalchemy.engine.base.Engine Thread-118 : (1,)
2020-06-16 00:04:12,763 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:12,764 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:04:12,764 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:04:12,765 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:04:12,765 INFO sqlalchemy.engine.base.Engine Thread-118 : ()
2020-06-16 00:04:12,765 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:04:12,766 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:04:12,766 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:04:12,767 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:04:12,767 INFO sqlalchemy.engine.base.Engine Thread-118 : (127, 0)
2020-06-16 00:04:12,768 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:12,768 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:04:12,768 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:04:12,769 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:04:12,769 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:04:12,770 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:04:12,770 INFO sqlalchemy.engine.base.Engine Thread-118 : (105,)
2020-06-16 00:04:12,771 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:12,771 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:04:12,771 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:04:12,804 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:12,804 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-06-16 00:04:12,805 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:12,805 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:12,808 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-16 00:04:13,053 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-06-16 00:04:13,054 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:13,054 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-06-16 00:04:13,055 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:13,055 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:13,056 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-06-16 00:04:13,110 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-06-16 00:04:13,111 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:13,111 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-06-16 00:04:13,112 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:13,115 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-06-16 00:04:13,115 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:13,123 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-06-16 00:04:13,118 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-06-16 00:04:13,122 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:13,121 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-06-16 00:04:13,126 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:13,124 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:13,127 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-06-16 00:04:13,126 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-06-16 00:04:13,127 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:13,127 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:13,129 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-06-16 00:04:13,128 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:13,125 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-06-16 00:04:13,129 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:13,130 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-06-16 00:04:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:13,132 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-06-16 00:04:30,612 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-16 00:04:30,614 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:30,614 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-16 00:04:30,614 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,615 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,617 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:30,617 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-06-16 00:04:30,618 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,618 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,621 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:04:30,621 INFO sqlalchemy.engine.base.Engine Thread-133 : (132,)
2020-06-16 00:04:30,621 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:30,622 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:04:30,622 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:04:30,622 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:04:30,622 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:04:30,632 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:04:30,633 INFO sqlalchemy.engine.base.Engine Thread-133 : (datetime.datetime(2020, 6, 16, 0, 4, 30, 622836), datetime.datetime(2020, 6, 30, 0, 4, 30, 622836), datetime.datetime(2020, 6, 16, 0, 4, 30, 622836), datetime.datetime(2020, 6, 30, 0, 4, 30, 622836), datetime.datetime(2020, 6, 16, 0, 4, 30, 622836), datetime.datetime(2020, 6, 30, 0, 4, 30, 622836))
2020-06-16 00:04:30,633 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:04:30,634 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:04:30,634 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:04:30,638 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:30,638 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-06-16 00:04:30,639 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,639 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,641 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-16 00:04:30,879 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-06-16 00:04:30,880 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:30,880 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-06-16 00:04:30,881 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,881 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,882 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-06-16 00:04:30,950 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-06-16 00:04:30,952 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:30,955 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-06-16 00:04:30,955 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-06-16 00:04:30,956 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:30,962 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-06-16 00:04:30,962 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-06-16 00:04:30,959 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-06-16 00:04:30,963 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,965 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,964 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:30,966 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-06-16 00:04:30,966 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-06-16 00:04:30,963 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,965 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:30,967 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,968 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,969 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,969 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-06-16 00:04:30,968 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-06-16 00:04:30,970 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-06-16 00:04:30,972 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:30,972 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:30,973 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-06-16 00:04:52,723 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-06-16 00:04:52,724 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:52,724 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-06-16 00:04:52,725 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:52,725 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:52,727 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:52,727 INFO sqlalchemy.engine.base.Engine Thread-148 : ('philip', 1, 1)
2020-06-16 00:04:52,728 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:52,728 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:52,729 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:04:52,729 INFO sqlalchemy.engine.base.Engine Thread-148 : ('15', 1)
2020-06-16 00:04:52,730 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:04:52,730 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:04:52,732 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:04:52,732 INFO sqlalchemy.engine.base.Engine Thread-148 : (82,)
2020-06-16 00:04:52,732 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:52,733 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:04:52,733 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:04:52,733 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:04:52,735 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:04:52,735 INFO sqlalchemy.engine.base.Engine Thread-148 : (1,)
2020-06-16 00:04:52,735 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:52,735 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:04:52,736 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:04:52,737 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:04:52,737 INFO sqlalchemy.engine.base.Engine Thread-148 : ()
2020-06-16 00:04:52,737 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:04:52,737 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:04:52,737 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:04:52,739 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:04:52,739 INFO sqlalchemy.engine.base.Engine Thread-148 : (127, 0)
2020-06-16 00:04:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:04:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:04:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:04:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:04:52,741 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:04:52,741 INFO sqlalchemy.engine.base.Engine Thread-148 : (105,)
2020-06-16 00:04:52,742 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:04:52,742 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:04:52,742 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:04:52,746 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:04:52,746 INFO sqlalchemy.engine.base.Engine Thread-148 : ('philip', 1, 1)
2020-06-16 00:04:52,747 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:52,747 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:52,750 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-06-16 00:04:52,990 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-16 00:04:52,991 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:52,991 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-06-16 00:04:52,992 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:52,992 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:52,993 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-16 00:04:53,077 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-06-16 00:04:53,079 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-06-16 00:04:53,081 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-06-16 00:04:53,082 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:53,085 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-06-16 00:04:53,085 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:53,085 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-06-16 00:04:53,086 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:53,089 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:53,089 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-06-16 00:04:53,089 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:53,083 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:53,092 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-06-16 00:04:53,091 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-06-16 00:04:53,092 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:53,093 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-06-16 00:04:53,091 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:04:53,093 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-06-16 00:04:53,094 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:53,094 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:53,095 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-06-16 00:04:53,097 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:04:53,097 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:04:53,098 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-06-16 00:05:23,563 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-06-16 00:05:23,565 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:23,565 INFO sqlalchemy.engine.base.Engine Thread-163 : (1, 1)
2020-06-16 00:05:23,566 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,566 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,569 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:05:23,569 INFO sqlalchemy.engine.base.Engine Thread-163 : ('philip', 1, 1)
2020-06-16 00:05:23,570 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,570 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,572 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:05:23,572 INFO sqlalchemy.engine.base.Engine Thread-163 : (132,)
2020-06-16 00:05:23,573 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:05:23,573 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:05:23,573 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:05:23,573 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:05:23,574 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:05:23,583 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:05:23,583 INFO sqlalchemy.engine.base.Engine Thread-163 : (datetime.datetime(2020, 6, 16, 0, 5, 23, 574309), datetime.datetime(2020, 6, 30, 0, 5, 23, 574309), datetime.datetime(2020, 6, 16, 0, 5, 23, 574309), datetime.datetime(2020, 6, 30, 0, 5, 23, 574309), datetime.datetime(2020, 6, 16, 0, 5, 23, 574309), datetime.datetime(2020, 6, 30, 0, 5, 23, 574309))
2020-06-16 00:05:23,584 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:05:23,584 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:05:23,585 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:05:23,590 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:05:23,590 INFO sqlalchemy.engine.base.Engine Thread-163 : ('philip', 1, 1)
2020-06-16 00:05:23,591 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,591 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,593 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-06-16 00:05:23,849 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-06-16 00:05:23,850 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:23,850 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-06-16 00:05:23,851 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,851 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,852 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-06-16 00:05:23,918 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-06-16 00:05:23,920 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:23,921 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-06-16 00:05:23,923 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-06-16 00:05:23,925 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-06-16 00:05:23,927 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:23,927 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,930 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,930 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-06-16 00:05:23,929 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:23,932 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-06-16 00:05:23,932 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,936 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-06-16 00:05:23,937 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-06-16 00:05:23,937 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,939 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:23,941 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-06-16 00:05:23,941 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-06-16 00:05:23,940 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,942 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,943 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-06-16 00:05:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:23,945 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-06-16 00:05:39,165 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-06-16 00:05:39,166 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:39,167 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-06-16 00:05:39,167 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,167 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,170 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:05:39,170 INFO sqlalchemy.engine.base.Engine Thread-178 : ('philip', 1, 1)
2020-06-16 00:05:39,171 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,171 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,173 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:05:39,173 INFO sqlalchemy.engine.base.Engine Thread-178 : ('20', 1)
2020-06-16 00:05:39,173 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:05:39,174 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 00:05:39,176 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:05:39,176 INFO sqlalchemy.engine.base.Engine Thread-178 : (82,)
2020-06-16 00:05:39,177 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:05:39,177 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:05:39,177 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:05:39,177 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:05:39,179 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:05:39,179 INFO sqlalchemy.engine.base.Engine Thread-178 : (1,)
2020-06-16 00:05:39,179 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:05:39,179 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:05:39,180 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:05:39,181 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:05:39,181 INFO sqlalchemy.engine.base.Engine Thread-178 : ()
2020-06-16 00:05:39,181 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:05:39,181 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:05:39,182 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:05:39,183 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:05:39,183 INFO sqlalchemy.engine.base.Engine Thread-178 : (127, 0)
2020-06-16 00:05:39,183 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:05:39,184 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:05:39,184 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:05:39,184 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:05:39,184 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:05:39,185 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:05:39,185 INFO sqlalchemy.engine.base.Engine Thread-178 : (105,)
2020-06-16 00:05:39,186 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:05:39,186 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:05:39,186 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:05:39,226 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:05:39,226 INFO sqlalchemy.engine.base.Engine Thread-178 : ('philip', 1, 1)
2020-06-16 00:05:39,227 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,227 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,230 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-06-16 00:05:39,469 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-06-16 00:05:39,470 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:39,470 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-06-16 00:05:39,471 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,471 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,472 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-06-16 00:05:39,557 INFO sqlalchemy.engine.base.Engine Thread-190 : BEGIN (implicit)
2020-06-16 00:05:39,560 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-06-16 00:05:39,562 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-06-16 00:05:39,563 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:39,568 INFO sqlalchemy.engine.base.Engine Thread-190 : (1, 1)
2020-06-16 00:05:39,564 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:39,568 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:39,569 INFO sqlalchemy.engine.base.Engine Thread-191 : (1, 1)
2020-06-16 00:05:39,567 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-06-16 00:05:39,569 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,571 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,571 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:39,571 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,573 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,574 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-06-16 00:05:39,572 INFO sqlalchemy.engine.base.Engine Thread-192 : (1, 1)
2020-06-16 00:05:39,572 INFO sqlalchemy.engine.base.Engine Thread-190 : ROLLBACK
2020-06-16 00:05:39,569 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-06-16 00:05:39,576 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,576 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,575 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:39,577 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-06-16 00:05:39,578 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:39,579 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-06-16 00:05:44,631 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-06-16 00:05:44,632 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:44,632 INFO sqlalchemy.engine.base.Engine Thread-193 : (1, 1)
2020-06-16 00:05:44,633 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,633 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,635 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:05:44,635 INFO sqlalchemy.engine.base.Engine Thread-193 : ('philip', 1, 1)
2020-06-16 00:05:44,636 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,636 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,638 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:05:44,638 INFO sqlalchemy.engine.base.Engine Thread-193 : (132,)
2020-06-16 00:05:44,639 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:05:44,639 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:05:44,639 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:05:44,639 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:05:44,639 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:05:44,648 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:05:44,648 INFO sqlalchemy.engine.base.Engine Thread-193 : (datetime.datetime(2020, 6, 16, 0, 5, 44, 639973), datetime.datetime(2020, 6, 30, 0, 5, 44, 639973), datetime.datetime(2020, 6, 16, 0, 5, 44, 639973), datetime.datetime(2020, 6, 30, 0, 5, 44, 639973), datetime.datetime(2020, 6, 16, 0, 5, 44, 639973), datetime.datetime(2020, 6, 30, 0, 5, 44, 639973))
2020-06-16 00:05:44,648 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:05:44,648 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:05:44,649 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:05:44,653 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:05:44,653 INFO sqlalchemy.engine.base.Engine Thread-193 : ('philip', 1, 1)
2020-06-16 00:05:44,653 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,654 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,656 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-06-16 00:05:44,893 INFO sqlalchemy.engine.base.Engine Thread-203 : BEGIN (implicit)
2020-06-16 00:05:44,894 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:44,894 INFO sqlalchemy.engine.base.Engine Thread-203 : (1, 1)
2020-06-16 00:05:44,895 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,895 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,896 INFO sqlalchemy.engine.base.Engine Thread-203 : ROLLBACK
2020-06-16 00:05:44,974 INFO sqlalchemy.engine.base.Engine Thread-204 : BEGIN (implicit)
2020-06-16 00:05:44,975 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:44,977 INFO sqlalchemy.engine.base.Engine Thread-204 : (1, 1)
2020-06-16 00:05:44,978 INFO sqlalchemy.engine.base.Engine Thread-205 : BEGIN (implicit)
2020-06-16 00:05:44,981 INFO sqlalchemy.engine.base.Engine Thread-206 : BEGIN (implicit)
2020-06-16 00:05:44,982 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:44,982 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,986 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,983 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:44,988 INFO sqlalchemy.engine.base.Engine Thread-206 : (1, 1)
2020-06-16 00:05:44,988 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,987 INFO sqlalchemy.engine.base.Engine Thread-204 : ROLLBACK
2020-06-16 00:05:44,986 INFO sqlalchemy.engine.base.Engine Thread-205 : (1, 1)
2020-06-16 00:05:44,986 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-06-16 00:05:44,988 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,990 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,993 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,993 INFO sqlalchemy.engine.base.Engine Thread-206 : ROLLBACK
2020-06-16 00:05:44,991 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:05:44,995 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-06-16 00:05:44,994 INFO sqlalchemy.engine.base.Engine Thread-205 : ROLLBACK
2020-06-16 00:05:44,996 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:05:44,996 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:05:44,998 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-06-16 00:06:18,899 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-06-16 00:06:18,901 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:18,901 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-06-16 00:06:18,901 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:18,902 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:18,904 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:06:18,904 INFO sqlalchemy.engine.base.Engine Thread-208 : ('philip', 1, 1)
2020-06-16 00:06:18,905 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:18,905 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:18,906 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:06:18,906 INFO sqlalchemy.engine.base.Engine Thread-208 : ('15', 1)
2020-06-16 00:06:18,907 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:06:18,907 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:06:18,909 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:06:18,909 INFO sqlalchemy.engine.base.Engine Thread-208 : (82,)
2020-06-16 00:06:18,910 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:18,911 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:06:18,911 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:06:18,911 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:06:18,912 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:06:18,912 INFO sqlalchemy.engine.base.Engine Thread-208 : (1,)
2020-06-16 00:06:18,912 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:18,913 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:06:18,913 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:06:18,914 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:06:18,914 INFO sqlalchemy.engine.base.Engine Thread-208 : ()
2020-06-16 00:06:18,914 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:06:18,915 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:06:18,915 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:06:18,916 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:06:18,916 INFO sqlalchemy.engine.base.Engine Thread-208 : (127, 0)
2020-06-16 00:06:18,917 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:18,917 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:06:18,917 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:06:18,917 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:06:18,917 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:06:18,918 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:06:18,919 INFO sqlalchemy.engine.base.Engine Thread-208 : (105,)
2020-06-16 00:06:18,919 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:18,919 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:06:18,919 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:06:18,951 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:06:18,951 INFO sqlalchemy.engine.base.Engine Thread-208 : ('philip', 1, 1)
2020-06-16 00:06:18,952 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:18,952 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:18,955 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-06-16 00:06:19,202 INFO sqlalchemy.engine.base.Engine Thread-218 : BEGIN (implicit)
2020-06-16 00:06:19,203 INFO sqlalchemy.engine.base.Engine Thread-218 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:19,203 INFO sqlalchemy.engine.base.Engine Thread-218 : (1, 1)
2020-06-16 00:06:19,204 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:19,204 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:19,205 INFO sqlalchemy.engine.base.Engine Thread-218 : ROLLBACK
2020-06-16 00:06:19,265 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-06-16 00:06:19,266 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:19,266 INFO sqlalchemy.engine.base.Engine Thread-219 : (1, 1)
2020-06-16 00:06:19,269 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-06-16 00:06:19,269 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:19,270 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:19,272 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:19,273 INFO sqlalchemy.engine.base.Engine Thread-221 : BEGIN (implicit)
2020-06-16 00:06:19,277 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:19,275 INFO sqlalchemy.engine.base.Engine Thread-219 : ROLLBACK
2020-06-16 00:06:19,274 INFO sqlalchemy.engine.base.Engine Thread-220 : (1, 1)
2020-06-16 00:06:19,279 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-06-16 00:06:19,279 INFO sqlalchemy.engine.base.Engine Thread-221 : (1, 1)
2020-06-16 00:06:19,280 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:19,282 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:19,282 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:19,282 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-06-16 00:06:19,282 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:19,283 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:19,284 INFO sqlalchemy.engine.base.Engine Thread-221 : ROLLBACK
2020-06-16 00:06:19,284 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:19,285 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-06-16 00:06:19,286 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:19,288 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-06-16 00:06:41,470 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-06-16 00:06:41,471 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:41,471 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-06-16 00:06:41,472 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,472 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,474 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:06:41,475 INFO sqlalchemy.engine.base.Engine Thread-223 : ('philip', 1, 1)
2020-06-16 00:06:41,475 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,475 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,478 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:06:41,478 INFO sqlalchemy.engine.base.Engine Thread-223 : (132,)
2020-06-16 00:06:41,478 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:41,478 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:06:41,478 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:06:41,478 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:06:41,479 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:06:41,489 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:06:41,489 INFO sqlalchemy.engine.base.Engine Thread-223 : (datetime.datetime(2020, 6, 16, 0, 6, 41, 479305), datetime.datetime(2020, 6, 30, 0, 6, 41, 479305), datetime.datetime(2020, 6, 16, 0, 6, 41, 479305), datetime.datetime(2020, 6, 30, 0, 6, 41, 479305), datetime.datetime(2020, 6, 16, 0, 6, 41, 479305), datetime.datetime(2020, 6, 30, 0, 6, 41, 479305))
2020-06-16 00:06:41,489 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:06:41,490 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:06:41,490 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:06:41,494 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:06:41,494 INFO sqlalchemy.engine.base.Engine Thread-223 : ('philip', 1, 1)
2020-06-16 00:06:41,494 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,495 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,497 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-06-16 00:06:41,753 INFO sqlalchemy.engine.base.Engine Thread-233 : BEGIN (implicit)
2020-06-16 00:06:41,754 INFO sqlalchemy.engine.base.Engine Thread-233 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:41,754 INFO sqlalchemy.engine.base.Engine Thread-233 : (1, 1)
2020-06-16 00:06:41,755 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,755 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,756 INFO sqlalchemy.engine.base.Engine Thread-233 : ROLLBACK
2020-06-16 00:06:41,820 INFO sqlalchemy.engine.base.Engine Thread-235 : BEGIN (implicit)
2020-06-16 00:06:41,822 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-06-16 00:06:41,823 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:41,830 INFO sqlalchemy.engine.base.Engine Thread-235 : (1, 1)
2020-06-16 00:06:41,826 INFO sqlalchemy.engine.base.Engine Thread-236 : BEGIN (implicit)
2020-06-16 00:06:41,830 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:41,829 INFO sqlalchemy.engine.base.Engine Thread-237 : BEGIN (implicit)
2020-06-16 00:06:41,831 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:41,832 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,832 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-06-16 00:06:41,833 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:41,834 INFO sqlalchemy.engine.base.Engine Thread-237 : (1, 1)
2020-06-16 00:06:41,833 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,836 INFO sqlalchemy.engine.base.Engine Thread-235 : ROLLBACK
2020-06-16 00:06:41,834 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,836 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,833 INFO sqlalchemy.engine.base.Engine Thread-236 : (1, 1)
2020-06-16 00:06:41,837 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,838 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-06-16 00:06:41,839 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,839 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:41,840 INFO sqlalchemy.engine.base.Engine Thread-237 : ROLLBACK
2020-06-16 00:06:41,841 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:41,843 INFO sqlalchemy.engine.base.Engine Thread-236 : ROLLBACK
2020-06-16 00:06:54,953 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-06-16 00:06:54,954 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:54,954 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-06-16 00:06:54,955 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:54,955 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:54,957 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:06:54,957 INFO sqlalchemy.engine.base.Engine Thread-238 : ('philip', 1, 1)
2020-06-16 00:06:54,958 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:54,958 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:54,959 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:06:54,960 INFO sqlalchemy.engine.base.Engine Thread-238 : ('15', 1)
2020-06-16 00:06:54,960 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:06:54,960 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:06:54,962 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:06:54,962 INFO sqlalchemy.engine.base.Engine Thread-238 : (82,)
2020-06-16 00:06:54,963 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:54,963 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:06:54,963 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:06:54,963 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:06:54,965 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:06:54,965 INFO sqlalchemy.engine.base.Engine Thread-238 : (1,)
2020-06-16 00:06:54,966 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:54,966 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:06:54,966 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:06:54,967 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:06:54,967 INFO sqlalchemy.engine.base.Engine Thread-238 : ()
2020-06-16 00:06:54,968 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:06:54,968 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:06:54,968 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:06:54,969 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:06:54,969 INFO sqlalchemy.engine.base.Engine Thread-238 : (127, 0)
2020-06-16 00:06:54,970 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:54,970 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:06:54,970 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:06:54,970 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:06:54,970 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:06:54,971 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:06:54,972 INFO sqlalchemy.engine.base.Engine Thread-238 : (105,)
2020-06-16 00:06:54,972 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:06:54,972 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:06:54,972 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:06:55,003 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:06:55,004 INFO sqlalchemy.engine.base.Engine Thread-238 : ('philip', 1, 1)
2020-06-16 00:06:55,004 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:55,004 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:55,007 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-06-16 00:06:55,261 INFO sqlalchemy.engine.base.Engine Thread-248 : BEGIN (implicit)
2020-06-16 00:06:55,264 INFO sqlalchemy.engine.base.Engine Thread-249 : BEGIN (implicit)
2020-06-16 00:06:55,272 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:55,270 INFO sqlalchemy.engine.base.Engine Thread-250 : BEGIN (implicit)
2020-06-16 00:06:55,275 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:55,273 INFO sqlalchemy.engine.base.Engine Thread-249 : (1, 1)
2020-06-16 00:06:55,274 INFO sqlalchemy.engine.base.Engine Thread-251 : BEGIN (implicit)
2020-06-16 00:06:55,265 INFO sqlalchemy.engine.base.Engine Thread-248 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:55,275 INFO sqlalchemy.engine.base.Engine Thread-250 : (1, 1)
2020-06-16 00:06:55,276 INFO sqlalchemy.engine.base.Engine Thread-251 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:55,277 INFO sqlalchemy.engine.base.Engine Thread-251 : (1, 1)
2020-06-16 00:06:55,277 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:55,276 INFO sqlalchemy.engine.base.Engine Thread-248 : (1, 1)
2020-06-16 00:06:55,278 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:55,281 INFO sqlalchemy.engine.base.Engine Thread-250 : ROLLBACK
2020-06-16 00:06:55,279 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:55,279 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:55,282 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:55,284 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:55,283 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:55,283 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:55,285 INFO sqlalchemy.engine.base.Engine Thread-248 : ROLLBACK
2020-06-16 00:06:55,286 INFO sqlalchemy.engine.base.Engine Thread-249 : ROLLBACK
2020-06-16 00:06:55,287 INFO sqlalchemy.engine.base.Engine Thread-251 : ROLLBACK
2020-06-16 00:06:55,322 INFO sqlalchemy.engine.base.Engine Thread-252 : BEGIN (implicit)
2020-06-16 00:06:55,324 INFO sqlalchemy.engine.base.Engine Thread-252 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:06:55,324 INFO sqlalchemy.engine.base.Engine Thread-252 : (1, 1)
2020-06-16 00:06:55,325 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:06:55,325 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:06:55,326 INFO sqlalchemy.engine.base.Engine Thread-252 : ROLLBACK
2020-06-16 00:07:27,283 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-06-16 00:07:27,285 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:27,285 INFO sqlalchemy.engine.base.Engine Thread-253 : (1, 1)
2020-06-16 00:07:27,285 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,286 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,288 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:07:27,288 INFO sqlalchemy.engine.base.Engine Thread-253 : ('philip', 1, 1)
2020-06-16 00:07:27,289 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,289 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,291 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:07:27,291 INFO sqlalchemy.engine.base.Engine Thread-253 : (132,)
2020-06-16 00:07:27,292 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:07:27,292 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:07:27,292 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:07:27,292 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:07:27,292 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:07:27,302 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:07:27,302 INFO sqlalchemy.engine.base.Engine Thread-253 : (datetime.datetime(2020, 6, 16, 0, 7, 27, 293078), datetime.datetime(2020, 6, 30, 0, 7, 27, 293078), datetime.datetime(2020, 6, 16, 0, 7, 27, 293078), datetime.datetime(2020, 6, 30, 0, 7, 27, 293078), datetime.datetime(2020, 6, 16, 0, 7, 27, 293078), datetime.datetime(2020, 6, 30, 0, 7, 27, 293078))
2020-06-16 00:07:27,303 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:07:27,303 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:07:27,303 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:07:27,307 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:07:27,307 INFO sqlalchemy.engine.base.Engine Thread-253 : ('philip', 1, 1)
2020-06-16 00:07:27,308 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,308 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,310 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-06-16 00:07:27,557 INFO sqlalchemy.engine.base.Engine Thread-263 : BEGIN (implicit)
2020-06-16 00:07:27,559 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:27,559 INFO sqlalchemy.engine.base.Engine Thread-263 : (1, 1)
2020-06-16 00:07:27,560 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,560 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,561 INFO sqlalchemy.engine.base.Engine Thread-263 : ROLLBACK
2020-06-16 00:07:27,622 INFO sqlalchemy.engine.base.Engine Thread-264 : BEGIN (implicit)
2020-06-16 00:07:27,625 INFO sqlalchemy.engine.base.Engine Thread-265 : BEGIN (implicit)
2020-06-16 00:07:27,628 INFO sqlalchemy.engine.base.Engine Thread-266 : BEGIN (implicit)
2020-06-16 00:07:27,629 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:27,632 INFO sqlalchemy.engine.base.Engine Thread-267 : BEGIN (implicit)
2020-06-16 00:07:27,633 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:27,634 INFO sqlalchemy.engine.base.Engine Thread-266 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:27,634 INFO sqlalchemy.engine.base.Engine Thread-264 : (1, 1)
2020-06-16 00:07:27,635 INFO sqlalchemy.engine.base.Engine Thread-267 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:27,636 INFO sqlalchemy.engine.base.Engine Thread-267 : (1, 1)
2020-06-16 00:07:27,635 INFO sqlalchemy.engine.base.Engine Thread-265 : (1, 1)
2020-06-16 00:07:27,636 INFO sqlalchemy.engine.base.Engine Thread-266 : (1, 1)
2020-06-16 00:07:27,637 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,638 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,638 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,638 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,640 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,639 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,639 INFO sqlalchemy.engine.base.Engine Thread-264 : ROLLBACK
2020-06-16 00:07:27,641 INFO sqlalchemy.engine.base.Engine Thread-266 : ROLLBACK
2020-06-16 00:07:27,637 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:27,642 INFO sqlalchemy.engine.base.Engine Thread-267 : ROLLBACK
2020-06-16 00:07:27,642 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:27,645 INFO sqlalchemy.engine.base.Engine Thread-265 : ROLLBACK
2020-06-16 00:07:29,673 INFO sqlalchemy.engine.base.Engine Thread-268 : BEGIN (implicit)
2020-06-16 00:07:29,674 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:29,674 INFO sqlalchemy.engine.base.Engine Thread-268 : (1, 1)
2020-06-16 00:07:29,675 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:29,675 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:29,677 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:07:29,678 INFO sqlalchemy.engine.base.Engine Thread-268 : ('philip', 1, 1)
2020-06-16 00:07:29,678 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:29,678 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:29,680 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:07:29,680 INFO sqlalchemy.engine.base.Engine Thread-268 : ('15', 1)
2020-06-16 00:07:29,681 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:07:29,681 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:07:29,683 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:07:29,683 INFO sqlalchemy.engine.base.Engine Thread-268 : (82,)
2020-06-16 00:07:29,684 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:07:29,684 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:07:29,684 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:07:29,684 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:07:29,686 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:07:29,686 INFO sqlalchemy.engine.base.Engine Thread-268 : (1,)
2020-06-16 00:07:29,686 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:07:29,687 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:07:29,687 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:07:29,688 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:07:29,688 INFO sqlalchemy.engine.base.Engine Thread-268 : ()
2020-06-16 00:07:29,688 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:07:29,689 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:07:29,689 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:07:29,690 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:07:29,690 INFO sqlalchemy.engine.base.Engine Thread-268 : (127, 0)
2020-06-16 00:07:29,691 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:07:29,691 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:07:29,691 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:07:29,691 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:07:29,691 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:07:29,693 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:07:29,693 INFO sqlalchemy.engine.base.Engine Thread-268 : (105,)
2020-06-16 00:07:29,693 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:07:29,694 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:07:29,694 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:07:29,726 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:07:29,727 INFO sqlalchemy.engine.base.Engine Thread-268 : ('philip', 1, 1)
2020-06-16 00:07:29,727 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:29,728 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:29,730 INFO sqlalchemy.engine.base.Engine Thread-268 : ROLLBACK
2020-06-16 00:07:29,966 INFO sqlalchemy.engine.base.Engine Thread-278 : BEGIN (implicit)
2020-06-16 00:07:29,968 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:29,968 INFO sqlalchemy.engine.base.Engine Thread-278 : (1, 1)
2020-06-16 00:07:29,969 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:29,969 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:29,970 INFO sqlalchemy.engine.base.Engine Thread-278 : ROLLBACK
2020-06-16 00:07:30,027 INFO sqlalchemy.engine.base.Engine Thread-279 : BEGIN (implicit)
2020-06-16 00:07:30,028 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:30,028 INFO sqlalchemy.engine.base.Engine Thread-279 : (1, 1)
2020-06-16 00:07:30,030 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:30,032 INFO sqlalchemy.engine.base.Engine Thread-280 : BEGIN (implicit)
2020-06-16 00:07:30,037 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:30,035 INFO sqlalchemy.engine.base.Engine Thread-281 : BEGIN (implicit)
2020-06-16 00:07:30,037 INFO sqlalchemy.engine.base.Engine Thread-280 : (1, 1)
2020-06-16 00:07:30,032 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:30,043 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-06-16 00:07:30,041 INFO sqlalchemy.engine.base.Engine Thread-282 : BEGIN (implicit)
2020-06-16 00:07:30,038 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:30,043 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:30,045 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:30,045 INFO sqlalchemy.engine.base.Engine Thread-281 : (1, 1)
2020-06-16 00:07:30,045 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:07:30,047 INFO sqlalchemy.engine.base.Engine Thread-282 : (1, 1)
2020-06-16 00:07:30,047 INFO sqlalchemy.engine.base.Engine Thread-280 : ROLLBACK
2020-06-16 00:07:30,047 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:30,048 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:30,049 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-06-16 00:07:30,050 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:07:30,050 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:07:30,052 INFO sqlalchemy.engine.base.Engine Thread-281 : ROLLBACK
2020-06-16 00:08:21,753 INFO sqlalchemy.engine.base.Engine Thread-283 : BEGIN (implicit)
2020-06-16 00:08:21,754 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:21,754 INFO sqlalchemy.engine.base.Engine Thread-283 : (1, 1)
2020-06-16 00:08:21,755 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:21,755 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:21,758 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:08:21,758 INFO sqlalchemy.engine.base.Engine Thread-283 : ('philip', 1, 1)
2020-06-16 00:08:21,759 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:21,759 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:21,762 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:08:21,762 INFO sqlalchemy.engine.base.Engine Thread-283 : (132,)
2020-06-16 00:08:21,762 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:08:21,763 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:08:21,763 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:08:21,763 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:08:21,763 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:08:21,774 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:08:21,774 INFO sqlalchemy.engine.base.Engine Thread-283 : (datetime.datetime(2020, 6, 16, 0, 8, 21, 763767), datetime.datetime(2020, 6, 30, 0, 8, 21, 763767), datetime.datetime(2020, 6, 16, 0, 8, 21, 763767), datetime.datetime(2020, 6, 30, 0, 8, 21, 763767), datetime.datetime(2020, 6, 16, 0, 8, 21, 763767), datetime.datetime(2020, 6, 30, 0, 8, 21, 763767))
2020-06-16 00:08:21,775 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:08:21,775 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:08:21,775 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:08:21,780 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:08:21,780 INFO sqlalchemy.engine.base.Engine Thread-283 : ('philip', 1, 1)
2020-06-16 00:08:21,781 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:21,781 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:21,783 INFO sqlalchemy.engine.base.Engine Thread-283 : ROLLBACK
2020-06-16 00:08:22,034 INFO sqlalchemy.engine.base.Engine Thread-293 : BEGIN (implicit)
2020-06-16 00:08:22,035 INFO sqlalchemy.engine.base.Engine Thread-293 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:22,035 INFO sqlalchemy.engine.base.Engine Thread-293 : (1, 1)
2020-06-16 00:08:22,036 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:22,036 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:22,037 INFO sqlalchemy.engine.base.Engine Thread-293 : ROLLBACK
2020-06-16 00:08:22,120 INFO sqlalchemy.engine.base.Engine Thread-294 : BEGIN (implicit)
2020-06-16 00:08:22,125 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:22,125 INFO sqlalchemy.engine.base.Engine Thread-294 : (1, 1)
2020-06-16 00:08:22,127 INFO sqlalchemy.engine.base.Engine Thread-296 : BEGIN (implicit)
2020-06-16 00:08:22,128 INFO sqlalchemy.engine.base.Engine Thread-296 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:22,128 INFO sqlalchemy.engine.base.Engine Thread-296 : (1, 1)
2020-06-16 00:08:22,128 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:22,129 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:22,129 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:22,133 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:22,131 INFO sqlalchemy.engine.base.Engine Thread-295 : BEGIN (implicit)
2020-06-16 00:08:22,135 INFO sqlalchemy.engine.base.Engine Thread-297 : BEGIN (implicit)
2020-06-16 00:08:22,135 INFO sqlalchemy.engine.base.Engine Thread-294 : ROLLBACK
2020-06-16 00:08:22,137 INFO sqlalchemy.engine.base.Engine Thread-296 : ROLLBACK
2020-06-16 00:08:22,138 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:22,139 INFO sqlalchemy.engine.base.Engine Thread-297 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:22,141 INFO sqlalchemy.engine.base.Engine Thread-295 : (1, 1)
2020-06-16 00:08:22,141 INFO sqlalchemy.engine.base.Engine Thread-297 : (1, 1)
2020-06-16 00:08:22,142 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:22,142 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:22,143 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:22,143 INFO sqlalchemy.engine.base.Engine Thread-295 : ROLLBACK
2020-06-16 00:08:22,144 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:22,145 INFO sqlalchemy.engine.base.Engine Thread-297 : ROLLBACK
2020-06-16 00:08:24,420 INFO sqlalchemy.engine.base.Engine Thread-298 : BEGIN (implicit)
2020-06-16 00:08:24,421 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:24,421 INFO sqlalchemy.engine.base.Engine Thread-298 : (1, 1)
2020-06-16 00:08:24,421 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,422 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,424 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:08:24,424 INFO sqlalchemy.engine.base.Engine Thread-298 : ('philip', 1, 1)
2020-06-16 00:08:24,425 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,425 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,426 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:08:24,426 INFO sqlalchemy.engine.base.Engine Thread-298 : ('15', 1)
2020-06-16 00:08:24,427 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:08:24,427 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:08:24,430 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:08:24,430 INFO sqlalchemy.engine.base.Engine Thread-298 : (82,)
2020-06-16 00:08:24,430 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:08:24,431 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:08:24,431 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:08:24,431 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:08:24,433 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:08:24,433 INFO sqlalchemy.engine.base.Engine Thread-298 : (1,)
2020-06-16 00:08:24,433 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:08:24,433 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:08:24,433 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:08:24,435 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:08:24,435 INFO sqlalchemy.engine.base.Engine Thread-298 : ()
2020-06-16 00:08:24,435 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:08:24,436 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:08:24,436 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:08:24,437 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:08:24,438 INFO sqlalchemy.engine.base.Engine Thread-298 : (127, 0)
2020-06-16 00:08:24,438 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:08:24,438 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:08:24,439 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:08:24,439 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:08:24,439 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:08:24,440 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:08:24,440 INFO sqlalchemy.engine.base.Engine Thread-298 : (105,)
2020-06-16 00:08:24,441 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:08:24,441 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:08:24,441 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:08:24,475 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:08:24,475 INFO sqlalchemy.engine.base.Engine Thread-298 : ('philip', 1, 1)
2020-06-16 00:08:24,480 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,482 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,485 INFO sqlalchemy.engine.base.Engine Thread-298 : ROLLBACK
2020-06-16 00:08:24,730 INFO sqlalchemy.engine.base.Engine Thread-308 : BEGIN (implicit)
2020-06-16 00:08:24,731 INFO sqlalchemy.engine.base.Engine Thread-308 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:24,731 INFO sqlalchemy.engine.base.Engine Thread-308 : (1, 1)
2020-06-16 00:08:24,732 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,732 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,733 INFO sqlalchemy.engine.base.Engine Thread-308 : ROLLBACK
2020-06-16 00:08:24,795 INFO sqlalchemy.engine.base.Engine Thread-309 : BEGIN (implicit)
2020-06-16 00:08:24,796 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:24,796 INFO sqlalchemy.engine.base.Engine Thread-309 : (1, 1)
2020-06-16 00:08:24,798 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,800 INFO sqlalchemy.engine.base.Engine Thread-310 : BEGIN (implicit)
2020-06-16 00:08:24,803 INFO sqlalchemy.engine.base.Engine Thread-311 : BEGIN (implicit)
2020-06-16 00:08:24,805 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,806 INFO sqlalchemy.engine.base.Engine Thread-312 : BEGIN (implicit)
2020-06-16 00:08:24,808 INFO sqlalchemy.engine.base.Engine Thread-310 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:24,809 INFO sqlalchemy.engine.base.Engine Thread-311 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:24,811 INFO sqlalchemy.engine.base.Engine Thread-311 : (1, 1)
2020-06-16 00:08:24,811 INFO sqlalchemy.engine.base.Engine Thread-309 : ROLLBACK
2020-06-16 00:08:24,811 INFO sqlalchemy.engine.base.Engine Thread-310 : (1, 1)
2020-06-16 00:08:24,810 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:24,812 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,812 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,814 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,814 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,813 INFO sqlalchemy.engine.base.Engine Thread-312 : (1, 1)
2020-06-16 00:08:24,816 INFO sqlalchemy.engine.base.Engine Thread-311 : ROLLBACK
2020-06-16 00:08:24,816 INFO sqlalchemy.engine.base.Engine Thread-310 : ROLLBACK
2020-06-16 00:08:24,817 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:24,818 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:24,819 INFO sqlalchemy.engine.base.Engine Thread-312 : ROLLBACK
2020-06-16 00:08:39,205 INFO sqlalchemy.engine.base.Engine Thread-313 : BEGIN (implicit)
2020-06-16 00:08:39,206 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:39,206 INFO sqlalchemy.engine.base.Engine Thread-313 : (1, 1)
2020-06-16 00:08:39,207 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,207 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,209 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:08:39,209 INFO sqlalchemy.engine.base.Engine Thread-313 : ('philip', 1, 1)
2020-06-16 00:08:39,210 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,210 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,212 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:08:39,212 INFO sqlalchemy.engine.base.Engine Thread-313 : (132,)
2020-06-16 00:08:39,213 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:08:39,213 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:08:39,213 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:08:39,213 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:08:39,213 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:08:39,222 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:08:39,223 INFO sqlalchemy.engine.base.Engine Thread-313 : (datetime.datetime(2020, 6, 16, 0, 8, 39, 214188), datetime.datetime(2020, 6, 30, 0, 8, 39, 214188), datetime.datetime(2020, 6, 16, 0, 8, 39, 214188), datetime.datetime(2020, 6, 30, 0, 8, 39, 214188), datetime.datetime(2020, 6, 16, 0, 8, 39, 214188), datetime.datetime(2020, 6, 30, 0, 8, 39, 214188))
2020-06-16 00:08:39,223 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:08:39,224 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:08:39,224 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:08:39,229 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:08:39,229 INFO sqlalchemy.engine.base.Engine Thread-313 : ('philip', 1, 1)
2020-06-16 00:08:39,230 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,230 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,232 INFO sqlalchemy.engine.base.Engine Thread-313 : ROLLBACK
2020-06-16 00:08:39,482 INFO sqlalchemy.engine.base.Engine Thread-323 : BEGIN (implicit)
2020-06-16 00:08:39,483 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:39,483 INFO sqlalchemy.engine.base.Engine Thread-323 : (1, 1)
2020-06-16 00:08:39,484 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,484 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,485 INFO sqlalchemy.engine.base.Engine Thread-323 : ROLLBACK
2020-06-16 00:08:39,543 INFO sqlalchemy.engine.base.Engine Thread-324 : BEGIN (implicit)
2020-06-16 00:08:39,544 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:39,544 INFO sqlalchemy.engine.base.Engine Thread-324 : (1, 1)
2020-06-16 00:08:39,547 INFO sqlalchemy.engine.base.Engine Thread-325 : BEGIN (implicit)
2020-06-16 00:08:39,547 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,548 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:39,551 INFO sqlalchemy.engine.base.Engine Thread-326 : BEGIN (implicit)
2020-06-16 00:08:39,551 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,557 INFO sqlalchemy.engine.base.Engine Thread-327 : BEGIN (implicit)
2020-06-16 00:08:39,557 INFO sqlalchemy.engine.base.Engine Thread-325 : (1, 1)
2020-06-16 00:08:39,558 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:39,561 INFO sqlalchemy.engine.base.Engine Thread-326 : (1, 1)
2020-06-16 00:08:39,559 INFO sqlalchemy.engine.base.Engine Thread-324 : ROLLBACK
2020-06-16 00:08:39,560 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:08:39,562 INFO sqlalchemy.engine.base.Engine Thread-327 : (1, 1)
2020-06-16 00:08:39,562 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,561 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,562 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,563 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,563 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:08:39,565 INFO sqlalchemy.engine.base.Engine Thread-326 : ROLLBACK
2020-06-16 00:08:39,566 INFO sqlalchemy.engine.base.Engine Thread-325 : ROLLBACK
2020-06-16 00:08:39,566 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:08:39,569 INFO sqlalchemy.engine.base.Engine Thread-327 : ROLLBACK
2020-06-16 00:09:19,943 INFO sqlalchemy.engine.base.Engine Thread-328 : BEGIN (implicit)
2020-06-16 00:09:19,944 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:09:19,945 INFO sqlalchemy.engine.base.Engine Thread-328 : (1, 1)
2020-06-16 00:09:19,946 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:19,946 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:19,948 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:09:19,948 INFO sqlalchemy.engine.base.Engine Thread-328 : ('philip', 1, 1)
2020-06-16 00:09:19,949 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:19,949 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:19,950 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:09:19,951 INFO sqlalchemy.engine.base.Engine Thread-328 : ('15', 1)
2020-06-16 00:09:19,951 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:09:19,951 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:09:19,953 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:09:19,953 INFO sqlalchemy.engine.base.Engine Thread-328 : (82,)
2020-06-16 00:09:19,954 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:09:19,954 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:09:19,954 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:09:19,954 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:09:19,956 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:09:19,956 INFO sqlalchemy.engine.base.Engine Thread-328 : (1,)
2020-06-16 00:09:19,956 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:09:19,956 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:09:19,957 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:09:19,958 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:09:19,958 INFO sqlalchemy.engine.base.Engine Thread-328 : ()
2020-06-16 00:09:19,958 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:09:19,958 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:09:19,958 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:09:19,960 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:09:19,960 INFO sqlalchemy.engine.base.Engine Thread-328 : (127, 0)
2020-06-16 00:09:19,961 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:09:19,961 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:09:19,961 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:09:19,961 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:09:19,961 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:09:19,962 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:09:19,962 INFO sqlalchemy.engine.base.Engine Thread-328 : (105,)
2020-06-16 00:09:19,963 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:09:19,963 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:09:19,963 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:09:19,968 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:09:19,968 INFO sqlalchemy.engine.base.Engine Thread-328 : ('philip', 1, 1)
2020-06-16 00:09:19,968 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:19,969 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:19,971 INFO sqlalchemy.engine.base.Engine Thread-328 : ROLLBACK
2020-06-16 00:09:20,224 INFO sqlalchemy.engine.base.Engine Thread-338 : BEGIN (implicit)
2020-06-16 00:09:20,225 INFO sqlalchemy.engine.base.Engine Thread-338 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:09:20,225 INFO sqlalchemy.engine.base.Engine Thread-338 : (1, 1)
2020-06-16 00:09:20,225 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:20,226 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:20,227 INFO sqlalchemy.engine.base.Engine Thread-338 : ROLLBACK
2020-06-16 00:09:20,312 INFO sqlalchemy.engine.base.Engine Thread-340 : BEGIN (implicit)
2020-06-16 00:09:20,313 INFO sqlalchemy.engine.base.Engine Thread-339 : BEGIN (implicit)
2020-06-16 00:09:20,316 INFO sqlalchemy.engine.base.Engine Thread-341 : BEGIN (implicit)
2020-06-16 00:09:20,320 INFO sqlalchemy.engine.base.Engine Thread-341 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:09:20,319 INFO sqlalchemy.engine.base.Engine Thread-339 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:09:20,320 INFO sqlalchemy.engine.base.Engine Thread-339 : (1, 1)
2020-06-16 00:09:20,320 INFO sqlalchemy.engine.base.Engine Thread-341 : (1, 1)
2020-06-16 00:09:20,321 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:20,321 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:20,318 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:09:20,322 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:20,322 INFO sqlalchemy.engine.base.Engine Thread-340 : (1, 1)
2020-06-16 00:09:20,324 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:20,325 INFO sqlalchemy.engine.base.Engine Thread-339 : ROLLBACK
2020-06-16 00:09:20,326 INFO sqlalchemy.engine.base.Engine Thread-341 : ROLLBACK
2020-06-16 00:09:20,327 INFO sqlalchemy.engine.base.Engine Thread-342 : BEGIN (implicit)
2020-06-16 00:09:20,330 INFO sqlalchemy.engine.base.Engine Thread-342 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:09:20,330 INFO sqlalchemy.engine.base.Engine Thread-342 : (1, 1)
2020-06-16 00:09:20,328 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:20,330 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:20,331 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:09:20,331 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:09:20,332 INFO sqlalchemy.engine.base.Engine Thread-340 : ROLLBACK
2020-06-16 00:09:20,333 INFO sqlalchemy.engine.base.Engine Thread-342 : ROLLBACK
2020-06-16 00:12:50,421 INFO sqlalchemy.engine.base.Engine Thread-343 : BEGIN (implicit)
2020-06-16 00:12:50,423 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:50,423 INFO sqlalchemy.engine.base.Engine Thread-343 : (1, 1)
2020-06-16 00:12:50,424 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,425 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,427 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:12:50,427 INFO sqlalchemy.engine.base.Engine Thread-343 : ('philip', 1, 1)
2020-06-16 00:12:50,428 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,428 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,431 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:12:50,431 INFO sqlalchemy.engine.base.Engine Thread-343 : (132,)
2020-06-16 00:12:50,432 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:12:50,432 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:12:50,432 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:12:50,432 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:12:50,433 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:12:50,442 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:12:50,442 INFO sqlalchemy.engine.base.Engine Thread-343 : (datetime.datetime(2020, 6, 16, 0, 12, 50, 433329), datetime.datetime(2020, 6, 30, 0, 12, 50, 433329), datetime.datetime(2020, 6, 16, 0, 12, 50, 433329), datetime.datetime(2020, 6, 30, 0, 12, 50, 433329), datetime.datetime(2020, 6, 16, 0, 12, 50, 433329), datetime.datetime(2020, 6, 30, 0, 12, 50, 433329))
2020-06-16 00:12:50,443 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:12:50,443 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:12:50,443 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:12:50,447 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:12:50,447 INFO sqlalchemy.engine.base.Engine Thread-343 : ('philip', 1, 1)
2020-06-16 00:12:50,448 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,448 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,450 INFO sqlalchemy.engine.base.Engine Thread-343 : ROLLBACK
2020-06-16 00:12:50,713 INFO sqlalchemy.engine.base.Engine Thread-353 : BEGIN (implicit)
2020-06-16 00:12:50,714 INFO sqlalchemy.engine.base.Engine Thread-353 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:50,714 INFO sqlalchemy.engine.base.Engine Thread-353 : (1, 1)
2020-06-16 00:12:50,715 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,715 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,716 INFO sqlalchemy.engine.base.Engine Thread-353 : ROLLBACK
2020-06-16 00:12:50,792 INFO sqlalchemy.engine.base.Engine Thread-354 : BEGIN (implicit)
2020-06-16 00:12:50,794 INFO sqlalchemy.engine.base.Engine Thread-354 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:50,794 INFO sqlalchemy.engine.base.Engine Thread-354 : (1, 1)
2020-06-16 00:12:50,795 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,799 INFO sqlalchemy.engine.base.Engine Thread-356 : BEGIN (implicit)
2020-06-16 00:12:50,800 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,802 INFO sqlalchemy.engine.base.Engine Thread-355 : BEGIN (implicit)
2020-06-16 00:12:50,808 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:50,808 INFO sqlalchemy.engine.base.Engine Thread-355 : (1, 1)
2020-06-16 00:12:50,806 INFO sqlalchemy.engine.base.Engine Thread-354 : ROLLBACK
2020-06-16 00:12:50,805 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:50,808 INFO sqlalchemy.engine.base.Engine Thread-356 : (1, 1)
2020-06-16 00:12:50,804 INFO sqlalchemy.engine.base.Engine Thread-357 : BEGIN (implicit)
2020-06-16 00:12:50,810 INFO sqlalchemy.engine.base.Engine Thread-357 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:50,810 INFO sqlalchemy.engine.base.Engine Thread-357 : (1, 1)
2020-06-16 00:12:50,810 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,811 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,812 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,812 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,811 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:50,813 INFO sqlalchemy.engine.base.Engine Thread-355 : ROLLBACK
2020-06-16 00:12:50,814 INFO sqlalchemy.engine.base.Engine Thread-356 : ROLLBACK
2020-06-16 00:12:50,815 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:50,817 INFO sqlalchemy.engine.base.Engine Thread-357 : ROLLBACK
2020-06-16 00:12:52,775 INFO sqlalchemy.engine.base.Engine Thread-358 : BEGIN (implicit)
2020-06-16 00:12:52,776 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:52,776 INFO sqlalchemy.engine.base.Engine Thread-358 : (1, 1)
2020-06-16 00:12:52,776 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:52,777 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:52,779 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:12:52,779 INFO sqlalchemy.engine.base.Engine Thread-358 : ('philip', 1, 1)
2020-06-16 00:12:52,780 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:52,780 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:52,782 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:12:52,782 INFO sqlalchemy.engine.base.Engine Thread-358 : ('15', 1)
2020-06-16 00:12:52,782 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:12:52,782 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:12:52,784 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:12:52,785 INFO sqlalchemy.engine.base.Engine Thread-358 : (82,)
2020-06-16 00:12:52,785 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:12:52,786 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:12:52,786 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:12:52,786 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:12:52,788 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:12:52,788 INFO sqlalchemy.engine.base.Engine Thread-358 : (1,)
2020-06-16 00:12:52,788 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:12:52,788 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:12:52,789 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:12:52,790 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:12:52,790 INFO sqlalchemy.engine.base.Engine Thread-358 : ()
2020-06-16 00:12:52,791 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:12:52,791 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:12:52,791 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:12:52,793 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:12:52,793 INFO sqlalchemy.engine.base.Engine Thread-358 : (127, 0)
2020-06-16 00:12:52,793 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:12:52,794 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:12:52,794 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:12:52,794 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:12:52,794 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:12:52,795 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:12:52,795 INFO sqlalchemy.engine.base.Engine Thread-358 : (105,)
2020-06-16 00:12:52,796 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:12:52,796 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:12:52,796 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:12:52,801 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:12:52,801 INFO sqlalchemy.engine.base.Engine Thread-358 : ('philip', 1, 1)
2020-06-16 00:12:52,802 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:52,802 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:52,805 INFO sqlalchemy.engine.base.Engine Thread-358 : ROLLBACK
2020-06-16 00:12:53,056 INFO sqlalchemy.engine.base.Engine Thread-368 : BEGIN (implicit)
2020-06-16 00:12:53,058 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:53,058 INFO sqlalchemy.engine.base.Engine Thread-368 : (1, 1)
2020-06-16 00:12:53,058 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:53,059 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:53,060 INFO sqlalchemy.engine.base.Engine Thread-368 : ROLLBACK
2020-06-16 00:12:53,130 INFO sqlalchemy.engine.base.Engine Thread-370 : BEGIN (implicit)
2020-06-16 00:12:53,131 INFO sqlalchemy.engine.base.Engine Thread-369 : BEGIN (implicit)
2020-06-16 00:12:53,134 INFO sqlalchemy.engine.base.Engine Thread-371 : BEGIN (implicit)
2020-06-16 00:12:53,138 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:53,137 INFO sqlalchemy.engine.base.Engine Thread-369 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:53,138 INFO sqlalchemy.engine.base.Engine Thread-369 : (1, 1)
2020-06-16 00:12:53,138 INFO sqlalchemy.engine.base.Engine Thread-371 : (1, 1)
2020-06-16 00:12:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:53,135 INFO sqlalchemy.engine.base.Engine Thread-370 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:53,141 INFO sqlalchemy.engine.base.Engine Thread-369 : ROLLBACK
2020-06-16 00:12:53,143 INFO sqlalchemy.engine.base.Engine Thread-372 : BEGIN (implicit)
2020-06-16 00:12:53,146 INFO sqlalchemy.engine.base.Engine Thread-372 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:53,144 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:53,146 INFO sqlalchemy.engine.base.Engine Thread-372 : (1, 1)
2020-06-16 00:12:53,144 INFO sqlalchemy.engine.base.Engine Thread-370 : (1, 1)
2020-06-16 00:12:53,150 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:53,148 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:53,152 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:53,151 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:53,153 INFO sqlalchemy.engine.base.Engine Thread-372 : ROLLBACK
2020-06-16 00:12:53,148 INFO sqlalchemy.engine.base.Engine Thread-371 : ROLLBACK
2020-06-16 00:12:53,155 INFO sqlalchemy.engine.base.Engine Thread-370 : ROLLBACK
2020-06-16 00:12:55,876 INFO sqlalchemy.engine.base.Engine Thread-373 : BEGIN (implicit)
2020-06-16 00:12:55,877 INFO sqlalchemy.engine.base.Engine Thread-373 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:12:55,877 INFO sqlalchemy.engine.base.Engine Thread-373 : (1, 1)
2020-06-16 00:12:55,877 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:12:55,878 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:12:55,879 INFO sqlalchemy.engine.base.Engine Thread-373 : ROLLBACK
2020-06-16 00:17:06,746 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:17:06,746 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:17:06,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:17:06,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:17:06,749 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:17:06,749 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:17:06,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:17:06,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:17:06,750 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:17:06,750 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:17:06,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:17:06,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:17:06,750 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:17:06,751 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:17:06,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:17:06,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:17:06,752 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:17:06,752 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:17:06,753 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:17:06,753 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:17:06,753 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:17:06,754 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:17:06,754 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:17:06,756 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:06,756 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:17:06,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:06,758 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:06,760 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:17:06,760 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:17:06,761 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:06,761 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:06,765 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:17:06,765 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-16 00:17:06,765 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:17:06,766 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:17:06,766 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:17:06,766 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:17:06,766 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:17:06,776 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:17:06,776 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 16, 0, 17, 6, 766688), datetime.datetime(2020, 6, 30, 0, 17, 6, 766688), datetime.datetime(2020, 6, 16, 0, 17, 6, 766688), datetime.datetime(2020, 6, 30, 0, 17, 6, 766688), datetime.datetime(2020, 6, 16, 0, 17, 6, 766688), datetime.datetime(2020, 6, 30, 0, 17, 6, 766688))
2020-06-16 00:17:06,777 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:17:06,777 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:17:06,777 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:17:06,855 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:17:06,855 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:17:06,856 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:06,856 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:06,859 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:17:07,137 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-16 00:17:07,138 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:07,138 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-16 00:17:07,142 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:07,143 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:07,143 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-16 00:17:07,148 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:07,149 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-16 00:17:07,156 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:07,161 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:07,163 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-16 00:17:07,169 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-16 00:17:07,176 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:07,176 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 00:17:07,178 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-16 00:17:07,179 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-16 00:17:07,179 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:07,182 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:07,180 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:07,182 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-16 00:17:07,183 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:07,183 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:07,184 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-16 00:17:07,185 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-16 00:17:07,190 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-16 00:17:07,191 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:07,191 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-16 00:17:07,192 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:07,192 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:07,193 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-16 00:17:09,370 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-16 00:17:09,371 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:09,371 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-16 00:17:09,372 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,372 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,374 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:17:09,374 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 00:17:09,375 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,375 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,378 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:17:09,378 INFO sqlalchemy.engine.base.Engine Thread-17 : ('15', 1)
2020-06-16 00:17:09,378 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:17:09,378 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:17:09,381 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:17:09,381 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-06-16 00:17:09,381 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:17:09,381 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:17:09,382 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:17:09,382 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:17:09,383 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:17:09,383 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-06-16 00:17:09,384 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:17:09,384 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:17:09,384 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:17:09,386 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:17:09,386 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-06-16 00:17:09,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:17:09,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:17:09,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:17:09,389 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:17:09,389 INFO sqlalchemy.engine.base.Engine Thread-17 : (127, 0)
2020-06-16 00:17:09,390 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:17:09,390 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:17:09,390 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:17:09,390 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:17:09,390 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:17:09,392 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:17:09,392 INFO sqlalchemy.engine.base.Engine Thread-17 : (105,)
2020-06-16 00:17:09,392 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:17:09,393 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:17:09,393 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:17:09,428 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:17:09,428 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 00:17:09,428 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,429 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,431 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-16 00:17:09,678 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-16 00:17:09,679 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:09,679 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-16 00:17:09,680 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,680 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,681 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-16 00:17:09,747 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-16 00:17:09,749 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:09,751 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-16 00:17:09,752 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-16 00:17:09,755 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-16 00:17:09,758 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-16 00:17:09,761 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:09,760 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:09,762 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-16 00:17:09,762 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-16 00:17:09,759 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:09,762 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-16 00:17:09,763 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,763 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,764 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,764 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,766 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,765 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-16 00:17:09,765 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,767 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-16 00:17:09,764 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:09,769 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-16 00:17:09,769 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:09,772 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-16 00:17:25,103 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-16 00:17:25,104 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:25,104 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-16 00:17:25,105 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,105 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,107 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:17:25,107 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-16 00:17:25,108 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,108 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,110 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:17:25,110 INFO sqlalchemy.engine.base.Engine Thread-32 : (132,)
2020-06-16 00:17:25,111 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:17:25,111 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:17:25,111 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:17:25,111 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:17:25,112 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:17:25,120 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:17:25,120 INFO sqlalchemy.engine.base.Engine Thread-32 : (datetime.datetime(2020, 6, 16, 0, 17, 25, 112247), datetime.datetime(2020, 6, 30, 0, 17, 25, 112247), datetime.datetime(2020, 6, 16, 0, 17, 25, 112247), datetime.datetime(2020, 6, 30, 0, 17, 25, 112247), datetime.datetime(2020, 6, 16, 0, 17, 25, 112247), datetime.datetime(2020, 6, 30, 0, 17, 25, 112247))
2020-06-16 00:17:25,121 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:17:25,121 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:17:25,121 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:17:25,125 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:17:25,125 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-16 00:17:25,126 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,126 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,128 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-16 00:17:25,381 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-16 00:17:25,382 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:25,382 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-06-16 00:17:25,382 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,383 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,384 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-16 00:17:25,466 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-16 00:17:25,467 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:25,467 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-16 00:17:25,468 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,471 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-16 00:17:25,477 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:25,478 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-16 00:17:25,476 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-16 00:17:25,474 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,474 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-16 00:17:25,479 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:25,482 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-16 00:17:25,480 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,481 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:17:25,483 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-16 00:17:25,483 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,480 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-16 00:17:25,483 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,484 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-16 00:17:25,485 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:17:25,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,486 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:17:25,488 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-16 00:17:25,489 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-16 00:18:09,664 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-16 00:18:09,666 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:18:09,666 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-16 00:18:09,667 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:09,667 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:09,669 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:18:09,669 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-06-16 00:18:09,670 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:09,670 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:09,672 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:18:09,672 INFO sqlalchemy.engine.base.Engine Thread-47 : ('15', 1)
2020-06-16 00:18:09,672 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:18:09,672 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:18:09,675 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:18:09,675 INFO sqlalchemy.engine.base.Engine Thread-47 : (82,)
2020-06-16 00:18:09,675 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:18:09,675 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:18:09,675 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:18:09,676 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:18:09,677 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:18:09,677 INFO sqlalchemy.engine.base.Engine Thread-47 : (1,)
2020-06-16 00:18:09,677 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:18:09,678 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:18:09,678 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:18:09,679 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:18:09,679 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-06-16 00:18:09,680 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:18:09,680 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:18:09,680 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:18:09,681 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:18:09,682 INFO sqlalchemy.engine.base.Engine Thread-47 : (127, 0)
2020-06-16 00:18:09,682 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:18:09,682 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:18:09,682 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:18:09,682 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:18:09,683 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:18:09,684 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:18:09,684 INFO sqlalchemy.engine.base.Engine Thread-47 : (105,)
2020-06-16 00:18:09,684 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:18:09,684 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:18:09,685 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:18:09,717 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:18:09,717 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-06-16 00:18:09,718 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:09,718 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:09,721 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-16 00:18:09,970 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-16 00:18:09,971 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:18:09,971 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-16 00:18:09,972 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:09,972 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:09,973 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-16 00:18:10,048 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-16 00:18:10,049 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:18:10,049 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-16 00:18:10,050 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:10,050 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:10,051 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-16 00:18:10,055 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-16 00:18:10,058 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-16 00:18:10,061 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-16 00:18:10,062 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:18:10,065 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-16 00:18:10,065 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:18:10,066 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-16 00:18:10,064 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:18:10,066 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:10,066 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-16 00:18:10,067 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:10,067 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:10,067 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:10,068 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:18:10,069 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-16 00:18:10,070 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-16 00:18:10,070 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:18:10,072 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-16 00:19:57,425 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-16 00:19:57,426 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:19:57,426 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-16 00:19:57,427 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,427 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,430 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:19:57,430 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-06-16 00:19:57,431 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,431 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,433 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:19:57,434 INFO sqlalchemy.engine.base.Engine Thread-62 : ('15', 1)
2020-06-16 00:19:57,434 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:19:57,435 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:19:57,438 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:19:57,438 INFO sqlalchemy.engine.base.Engine Thread-62 : (82,)
2020-06-16 00:19:57,439 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:19:57,439 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:19:57,439 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:19:57,440 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:19:57,441 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:19:57,441 INFO sqlalchemy.engine.base.Engine Thread-62 : (1,)
2020-06-16 00:19:57,442 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:19:57,442 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:19:57,442 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:19:57,445 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:19:57,445 INFO sqlalchemy.engine.base.Engine Thread-62 : ()
2020-06-16 00:19:57,446 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:19:57,447 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:19:57,447 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:19:57,448 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:19:57,448 INFO sqlalchemy.engine.base.Engine Thread-62 : (127, 0)
2020-06-16 00:19:57,449 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:19:57,449 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:19:57,449 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:19:57,449 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:19:57,449 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:19:57,451 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:19:57,451 INFO sqlalchemy.engine.base.Engine Thread-62 : (105,)
2020-06-16 00:19:57,451 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:19:57,451 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:19:57,452 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:19:57,488 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:19:57,488 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-06-16 00:19:57,489 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,489 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,492 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-16 00:19:57,734 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-16 00:19:57,735 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:19:57,735 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-16 00:19:57,736 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,736 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,737 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-16 00:19:57,805 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-16 00:19:57,806 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:19:57,806 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-16 00:19:57,809 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-16 00:19:57,815 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:19:57,815 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-16 00:19:57,813 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-16 00:19:57,816 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:19:57,816 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-16 00:19:57,817 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,817 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,818 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-16 00:19:57,814 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,819 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,820 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,821 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,822 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-16 00:19:57,824 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-16 00:19:57,825 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-16 00:19:57,827 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:19:57,827 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-16 00:19:57,828 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:19:57,828 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:19:57,829 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-16 00:21:25,346 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-16 00:21:25,348 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:21:25,348 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-16 00:21:25,349 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,349 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,351 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:21:25,352 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-16 00:21:25,352 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,352 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,354 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:21:25,354 INFO sqlalchemy.engine.base.Engine Thread-78 : ('15', 1)
2020-06-16 00:21:25,354 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:21:25,355 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:21:25,357 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:21:25,357 INFO sqlalchemy.engine.base.Engine Thread-78 : (82,)
2020-06-16 00:21:25,358 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:21:25,358 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:21:25,358 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:21:25,358 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:21:25,359 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:21:25,360 INFO sqlalchemy.engine.base.Engine Thread-78 : (1,)
2020-06-16 00:21:25,360 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:21:25,360 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:21:25,360 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:21:25,362 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:21:25,362 INFO sqlalchemy.engine.base.Engine Thread-78 : ()
2020-06-16 00:21:25,362 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:21:25,362 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:21:25,362 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:21:25,364 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:21:25,364 INFO sqlalchemy.engine.base.Engine Thread-78 : (127, 0)
2020-06-16 00:21:25,364 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:21:25,365 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:21:25,365 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:21:25,365 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:21:25,365 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:21:25,366 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:21:25,366 INFO sqlalchemy.engine.base.Engine Thread-78 : (105,)
2020-06-16 00:21:25,367 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:21:25,367 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:21:25,368 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:21:25,400 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:21:25,400 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-16 00:21:25,401 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,401 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,403 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-16 00:21:25,659 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-16 00:21:25,660 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:21:25,660 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-16 00:21:25,661 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,661 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,662 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-16 00:21:25,727 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-16 00:21:25,730 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-16 00:21:25,731 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:21:25,732 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:21:25,732 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-16 00:21:25,733 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-16 00:21:25,736 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-16 00:21:25,736 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,738 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:21:25,741 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-16 00:21:25,740 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,741 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-16 00:21:25,739 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,745 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-16 00:21:25,744 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:21:25,743 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-16 00:21:25,745 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,746 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-16 00:21:25,747 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,749 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-16 00:21:25,749 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:21:25,750 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:21:25,751 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-16 00:22:02,545 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-16 00:22:02,546 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:02,546 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-06-16 00:22:02,547 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,547 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,550 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:22:02,550 INFO sqlalchemy.engine.base.Engine Thread-94 : ('philip', 1, 1)
2020-06-16 00:22:02,551 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,551 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,552 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:22:02,553 INFO sqlalchemy.engine.base.Engine Thread-94 : ('15', 1)
2020-06-16 00:22:02,553 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:22:02,553 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:22:02,556 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:22:02,556 INFO sqlalchemy.engine.base.Engine Thread-94 : (82,)
2020-06-16 00:22:02,556 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:22:02,556 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:22:02,557 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:22:02,557 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:22:02,558 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:22:02,558 INFO sqlalchemy.engine.base.Engine Thread-94 : (1,)
2020-06-16 00:22:02,558 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:22:02,559 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:22:02,559 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:22:02,560 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:22:02,560 INFO sqlalchemy.engine.base.Engine Thread-94 : ()
2020-06-16 00:22:02,560 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:22:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:22:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:22:02,562 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:22:02,562 INFO sqlalchemy.engine.base.Engine Thread-94 : (127, 0)
2020-06-16 00:22:02,563 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:22:02,563 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:22:02,563 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:22:02,563 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:22:02,563 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:22:02,565 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:22:02,565 INFO sqlalchemy.engine.base.Engine Thread-94 : (105,)
2020-06-16 00:22:02,565 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:22:02,565 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:22:02,566 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:22:02,599 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:22:02,599 INFO sqlalchemy.engine.base.Engine Thread-94 : ('philip', 1, 1)
2020-06-16 00:22:02,600 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,600 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,603 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-16 00:22:02,869 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-16 00:22:02,870 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:02,870 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-16 00:22:02,871 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,871 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,872 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-16 00:22:02,926 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-16 00:22:02,927 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:02,928 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-16 00:22:02,930 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-16 00:22:02,931 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,932 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:02,933 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-16 00:22:02,932 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,934 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-16 00:22:02,935 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,938 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-16 00:22:02,939 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,940 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:02,942 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-16 00:22:02,944 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-16 00:22:02,945 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-16 00:22:02,946 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:02,947 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-16 00:22:02,948 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,948 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,949 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-16 00:22:02,949 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:02,950 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:02,952 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-16 00:22:17,812 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-16 00:22:17,813 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:17,813 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-16 00:22:17,814 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:17,814 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:17,816 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:22:17,817 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-06-16 00:22:17,817 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:17,818 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:17,820 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:22:17,820 INFO sqlalchemy.engine.base.Engine Thread-110 : (132,)
2020-06-16 00:22:17,820 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:22:17,821 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:22:17,821 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:22:17,821 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:22:17,821 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:22:17,830 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:22:17,830 INFO sqlalchemy.engine.base.Engine Thread-110 : (datetime.datetime(2020, 6, 16, 0, 22, 17, 821765), datetime.datetime(2020, 6, 30, 0, 22, 17, 821765), datetime.datetime(2020, 6, 16, 0, 22, 17, 821765), datetime.datetime(2020, 6, 30, 0, 22, 17, 821765), datetime.datetime(2020, 6, 16, 0, 22, 17, 821765), datetime.datetime(2020, 6, 30, 0, 22, 17, 821765))
2020-06-16 00:22:17,831 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:22:17,832 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:22:17,832 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:22:17,836 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:22:17,836 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-06-16 00:22:17,836 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:17,837 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:17,838 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-16 00:22:19,090 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-16 00:22:19,092 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:19,092 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-16 00:22:19,093 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:19,094 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:19,095 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-16 00:22:19,195 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-16 00:22:19,197 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:19,197 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-16 00:22:19,200 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-16 00:22:19,200 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:19,203 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-16 00:22:19,209 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:19,209 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-16 00:22:19,208 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:19,205 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:19,210 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-16 00:22:19,211 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:19,211 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:19,213 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-16 00:22:19,212 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-16 00:22:19,207 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-16 00:22:19,214 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:19,216 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:22:19,216 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:19,217 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-16 00:22:19,219 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-16 00:22:19,221 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:22:19,221 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:22:19,222 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-16 00:23:41,232 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-16 00:23:41,233 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:23:41,233 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-16 00:23:41,234 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,234 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,237 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:23:41,237 INFO sqlalchemy.engine.base.Engine Thread-125 : ('philip', 1, 1)
2020-06-16 00:23:41,237 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,238 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,239 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:23:41,239 INFO sqlalchemy.engine.base.Engine Thread-125 : ('15', 1)
2020-06-16 00:23:41,240 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:23:41,240 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:23:41,242 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:23:41,242 INFO sqlalchemy.engine.base.Engine Thread-125 : (82,)
2020-06-16 00:23:41,243 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:23:41,243 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:23:41,243 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:23:41,243 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:23:41,245 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:23:41,245 INFO sqlalchemy.engine.base.Engine Thread-125 : (1,)
2020-06-16 00:23:41,245 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:23:41,245 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:23:41,245 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:23:41,247 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:23:41,247 INFO sqlalchemy.engine.base.Engine Thread-125 : ()
2020-06-16 00:23:41,247 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:23:41,247 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:23:41,247 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:23:41,249 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:23:41,249 INFO sqlalchemy.engine.base.Engine Thread-125 : (127, 0)
2020-06-16 00:23:41,250 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:23:41,250 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:23:41,250 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:23:41,251 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:23:41,251 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:23:41,252 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:23:41,252 INFO sqlalchemy.engine.base.Engine Thread-125 : (105,)
2020-06-16 00:23:41,253 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:23:41,253 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:23:41,253 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:23:41,286 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:23:41,286 INFO sqlalchemy.engine.base.Engine Thread-125 : ('philip', 1, 1)
2020-06-16 00:23:41,287 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,287 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,290 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-16 00:23:41,521 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-16 00:23:41,522 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:23:41,522 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-06-16 00:23:41,523 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,523 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,524 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-16 00:23:41,597 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-16 00:23:41,600 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-16 00:23:41,602 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:23:41,606 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-06-16 00:23:41,606 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:23:41,606 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-16 00:23:41,605 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-06-16 00:23:41,607 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:23:41,608 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-06-16 00:23:41,608 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,608 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,610 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-16 00:23:41,610 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,611 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,612 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-06-16 00:23:41,612 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,613 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,614 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-16 00:23:41,618 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-06-16 00:23:41,620 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:23:41,620 INFO sqlalchemy.engine.base.Engine Thread-139 : (1, 1)
2020-06-16 00:23:41,621 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:23:41,622 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:23:41,623 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-06-16 00:24:41,257 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-06-16 00:24:41,258 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:24:41,258 INFO sqlalchemy.engine.base.Engine Thread-140 : (1, 1)
2020-06-16 00:24:41,259 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,259 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,261 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:24:41,262 INFO sqlalchemy.engine.base.Engine Thread-140 : ('philip', 1, 1)
2020-06-16 00:24:41,262 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,262 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,264 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:24:41,264 INFO sqlalchemy.engine.base.Engine Thread-140 : ('15', 1)
2020-06-16 00:24:41,264 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:24:41,265 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:24:41,267 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:24:41,267 INFO sqlalchemy.engine.base.Engine Thread-140 : (82,)
2020-06-16 00:24:41,268 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:24:41,268 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:24:41,268 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:24:41,268 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:24:41,269 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:24:41,269 INFO sqlalchemy.engine.base.Engine Thread-140 : (1,)
2020-06-16 00:24:41,270 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:24:41,270 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:24:41,270 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:24:41,271 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:24:41,271 INFO sqlalchemy.engine.base.Engine Thread-140 : ()
2020-06-16 00:24:41,272 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:24:41,272 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:24:41,273 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:24:41,274 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:24:41,274 INFO sqlalchemy.engine.base.Engine Thread-140 : (127, 0)
2020-06-16 00:24:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:24:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:24:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:24:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:24:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:24:41,276 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:24:41,277 INFO sqlalchemy.engine.base.Engine Thread-140 : (105,)
2020-06-16 00:24:41,277 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:24:41,277 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:24:41,277 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:24:41,310 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:24:41,310 INFO sqlalchemy.engine.base.Engine Thread-140 : ('philip', 1, 1)
2020-06-16 00:24:41,310 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,311 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,313 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-06-16 00:24:41,566 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-06-16 00:24:41,567 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:24:41,567 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-06-16 00:24:41,568 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,568 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,569 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-06-16 00:24:41,634 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-06-16 00:24:41,636 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:24:41,637 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-06-16 00:24:41,639 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-06-16 00:24:41,640 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:24:41,643 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-06-16 00:24:41,643 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,644 INFO sqlalchemy.engine.base.Engine Thread-153 : (1, 1)
2020-06-16 00:24:41,645 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-06-16 00:24:41,646 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:24:41,650 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-06-16 00:24:41,647 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,650 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:24:41,650 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,651 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,653 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,653 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-06-16 00:24:41,652 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,658 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-06-16 00:24:41,652 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-06-16 00:24:41,651 INFO sqlalchemy.engine.base.Engine Thread-154 : (1, 1)
2020-06-16 00:24:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:24:41,660 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:24:41,661 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-06-16 00:25:35,734 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:25:35,734 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,735 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:25:35,736 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:25:35,736 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:25:35,736 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,737 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:25:35,737 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:25:35,737 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:25:35,737 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,738 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:25:35,738 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:25:35,738 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:25:35,738 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:25:35,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:25:35,740 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:25:35,740 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,740 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:25:35,740 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,741 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:25:35,741 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,741 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:25:35,744 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:25:35,744 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:25:35,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:35,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:35,748 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:25:35,748 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:25:35,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:35,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:35,751 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:25:35,751 INFO sqlalchemy.engine.base.Engine Thread-2 : ('15', 1)
2020-06-16 00:25:35,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:25:35,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:25:35,756 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:25:35,756 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-06-16 00:25:35,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:25:35,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:25:35,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:25:35,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:25:35,758 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:25:35,758 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-06-16 00:25:35,759 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:25:35,759 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:25:35,759 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:25:35,761 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:25:35,761 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:25:35,762 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:25:35,762 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:25:35,762 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:25:35,764 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:25:35,764 INFO sqlalchemy.engine.base.Engine Thread-2 : (127, 0)
2020-06-16 00:25:35,765 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:25:35,765 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:25:35,765 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:25:35,765 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:25:35,765 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:25:35,767 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:25:35,767 INFO sqlalchemy.engine.base.Engine Thread-2 : (105,)
2020-06-16 00:25:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:25:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:25:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:25:35,868 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:25:35,868 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:25:35,869 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:35,869 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:35,872 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:25:36,119 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-16 00:25:36,120 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:25:36,120 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-16 00:25:36,121 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:36,121 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:36,133 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-16 00:25:36,199 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-16 00:25:36,203 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:25:36,205 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 00:25:36,206 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:36,207 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:36,209 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-16 00:25:36,211 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-16 00:25:36,213 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:25:36,213 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-16 00:25:36,213 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-16 00:25:36,214 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:25:36,215 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-16 00:25:36,215 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:36,215 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:36,216 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:36,216 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:36,217 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-16 00:25:36,218 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-16 00:25:36,219 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:25:36,219 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-16 00:25:36,221 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-16 00:25:36,221 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:36,222 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:36,223 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-16 00:25:59,753 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-16 00:25:59,754 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:25:59,754 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-16 00:25:59,755 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:59,755 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:59,758 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:25:59,758 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-16 00:25:59,758 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:59,759 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:59,761 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:25:59,761 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-16 00:25:59,761 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:25:59,762 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:25:59,762 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:25:59,762 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:25:59,762 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:25:59,772 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:25:59,772 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 16, 0, 25, 59, 762732), datetime.datetime(2020, 6, 30, 0, 25, 59, 762732), datetime.datetime(2020, 6, 16, 0, 25, 59, 762732), datetime.datetime(2020, 6, 30, 0, 25, 59, 762732), datetime.datetime(2020, 6, 16, 0, 25, 59, 762732), datetime.datetime(2020, 6, 30, 0, 25, 59, 762732))
2020-06-16 00:25:59,773 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:25:59,773 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:25:59,773 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:25:59,790 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:25:59,790 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-16 00:25:59,791 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:25:59,792 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:25:59,794 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-16 00:26:00,053 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-16 00:26:00,058 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:00,056 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-16 00:26:00,065 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:00,061 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-16 00:26:00,067 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:00,067 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-16 00:26:00,066 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-16 00:26:00,064 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-16 00:26:00,064 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-16 00:26:00,068 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:00,069 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:00,071 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:00,070 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:00,073 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-16 00:26:00,069 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:00,073 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-16 00:26:00,073 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:00,075 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-16 00:26:00,074 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:00,071 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:00,077 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:00,079 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-16 00:26:00,080 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-16 00:26:00,111 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-16 00:26:00,113 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:00,113 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-16 00:26:00,114 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:00,114 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:00,115 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-16 00:26:02,085 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-16 00:26:02,086 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:02,086 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-16 00:26:02,087 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,087 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,089 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:02,089 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-16 00:26:02,090 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,090 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,092 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:26:02,092 INFO sqlalchemy.engine.base.Engine Thread-33 : ('15', 1)
2020-06-16 00:26:02,092 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:26:02,093 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:26:02,095 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:26:02,095 INFO sqlalchemy.engine.base.Engine Thread-33 : (82,)
2020-06-16 00:26:02,096 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:02,097 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:26:02,097 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:26:02,097 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:26:02,098 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:26:02,098 INFO sqlalchemy.engine.base.Engine Thread-33 : (1,)
2020-06-16 00:26:02,099 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:02,099 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:26:02,099 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:26:02,100 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:26:02,100 INFO sqlalchemy.engine.base.Engine Thread-33 : ()
2020-06-16 00:26:02,101 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:26:02,101 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:26:02,101 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:26:02,103 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:26:02,103 INFO sqlalchemy.engine.base.Engine Thread-33 : (127, 0)
2020-06-16 00:26:02,103 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:02,103 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:26:02,103 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:26:02,103 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:26:02,104 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:26:02,105 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:26:02,105 INFO sqlalchemy.engine.base.Engine Thread-33 : (105,)
2020-06-16 00:26:02,105 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:02,105 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:26:02,106 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:26:02,110 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:02,110 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-16 00:26:02,111 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,111 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,114 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-16 00:26:02,351 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-16 00:26:02,352 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:02,352 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-16 00:26:02,353 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,353 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,354 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-16 00:26:02,421 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-16 00:26:02,422 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:02,423 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-16 00:26:02,424 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,427 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-16 00:26:02,427 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,428 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:02,430 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-16 00:26:02,431 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-16 00:26:02,433 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-16 00:26:02,434 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:02,434 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-16 00:26:02,435 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,435 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,436 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-16 00:26:02,437 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,437 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,438 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-16 00:26:02,443 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-16 00:26:02,444 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:02,444 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-16 00:26:02,445 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:02,445 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:02,446 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-16 00:26:10,185 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-16 00:26:10,186 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:10,186 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-16 00:26:10,187 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,187 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,190 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:10,190 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-16 00:26:10,190 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,190 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,193 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:26:10,193 INFO sqlalchemy.engine.base.Engine Thread-48 : (132,)
2020-06-16 00:26:10,193 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:10,193 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:26:10,194 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:26:10,194 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:26:10,194 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:26:10,204 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:26:10,204 INFO sqlalchemy.engine.base.Engine Thread-48 : (datetime.datetime(2020, 6, 16, 0, 26, 10, 194611), datetime.datetime(2020, 6, 30, 0, 26, 10, 194611), datetime.datetime(2020, 6, 16, 0, 26, 10, 194611), datetime.datetime(2020, 6, 30, 0, 26, 10, 194611), datetime.datetime(2020, 6, 16, 0, 26, 10, 194611), datetime.datetime(2020, 6, 30, 0, 26, 10, 194611))
2020-06-16 00:26:10,205 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:26:10,205 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:26:10,205 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:26:10,210 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:10,210 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-16 00:26:10,211 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,211 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,213 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-16 00:26:10,481 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-16 00:26:10,482 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:10,482 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-16 00:26:10,483 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,483 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,484 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-16 00:26:10,548 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-16 00:26:10,549 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:10,549 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-16 00:26:10,552 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-16 00:26:10,552 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,557 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,556 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-16 00:26:10,557 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:10,564 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-16 00:26:10,559 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-16 00:26:10,563 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:10,564 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-16 00:26:10,562 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-16 00:26:10,566 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:10,566 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-16 00:26:10,565 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,567 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,567 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,569 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,569 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-16 00:26:10,570 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:10,571 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:10,568 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-16 00:26:10,572 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-16 00:26:39,105 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-16 00:26:39,106 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:39,106 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-16 00:26:39,107 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,107 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,109 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:39,109 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-16 00:26:39,110 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,110 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,112 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:26:39,112 INFO sqlalchemy.engine.base.Engine Thread-63 : ('15', 1)
2020-06-16 00:26:39,112 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:26:39,113 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:26:39,115 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:26:39,115 INFO sqlalchemy.engine.base.Engine Thread-63 : (82,)
2020-06-16 00:26:39,115 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:39,115 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:26:39,116 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:26:39,116 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:26:39,117 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:26:39,117 INFO sqlalchemy.engine.base.Engine Thread-63 : (1,)
2020-06-16 00:26:39,119 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:39,120 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:26:39,120 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:26:39,121 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:26:39,121 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-06-16 00:26:39,121 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:26:39,122 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:26:39,122 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:26:39,123 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:26:39,123 INFO sqlalchemy.engine.base.Engine Thread-63 : (127, 0)
2020-06-16 00:26:39,124 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:39,124 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:26:39,124 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:26:39,124 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:26:39,124 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:26:39,125 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:26:39,125 INFO sqlalchemy.engine.base.Engine Thread-63 : (105,)
2020-06-16 00:26:39,126 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:39,126 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:26:39,126 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:26:39,157 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:39,157 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-16 00:26:39,158 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,158 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,161 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-16 00:26:39,421 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-16 00:26:39,422 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:39,422 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-16 00:26:39,422 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,423 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,424 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-16 00:26:39,493 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-16 00:26:39,496 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-16 00:26:39,504 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:39,504 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-16 00:26:39,503 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:39,499 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-16 00:26:39,505 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:39,504 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-16 00:26:39,506 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,505 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-16 00:26:39,506 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,508 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-16 00:26:39,506 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,502 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-16 00:26:39,508 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,510 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,510 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:39,511 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-16 00:26:39,509 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,512 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-16 00:26:39,513 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-16 00:26:39,514 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:39,514 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:39,516 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-16 00:26:48,414 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-16 00:26:48,415 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:48,415 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-16 00:26:48,416 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,416 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,418 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:48,418 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-16 00:26:48,419 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,419 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,421 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:26:48,421 INFO sqlalchemy.engine.base.Engine Thread-78 : (132,)
2020-06-16 00:26:48,422 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:26:48,422 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:26:48,422 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:26:48,422 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:26:48,422 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:26:48,431 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:26:48,431 INFO sqlalchemy.engine.base.Engine Thread-78 : (datetime.datetime(2020, 6, 16, 0, 26, 48, 422921), datetime.datetime(2020, 6, 30, 0, 26, 48, 422921), datetime.datetime(2020, 6, 16, 0, 26, 48, 422921), datetime.datetime(2020, 6, 30, 0, 26, 48, 422921), datetime.datetime(2020, 6, 16, 0, 26, 48, 422921), datetime.datetime(2020, 6, 30, 0, 26, 48, 422921))
2020-06-16 00:26:48,432 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:26:48,432 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:26:48,432 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:26:48,436 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:26:48,436 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-16 00:26:48,437 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,437 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,439 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-16 00:26:48,699 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-16 00:26:48,700 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:48,700 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-16 00:26:48,701 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,701 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,702 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-16 00:26:48,773 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-16 00:26:48,774 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:48,777 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-16 00:26:48,776 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-16 00:26:48,779 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-16 00:26:48,780 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:48,786 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-16 00:26:48,781 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,785 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:48,786 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,784 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-16 00:26:48,789 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:26:48,789 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-16 00:26:48,788 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-16 00:26:48,786 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-16 00:26:48,786 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,790 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,791 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-16 00:26:48,791 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,792 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,793 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-16 00:26:48,794 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:26:48,795 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:26:48,796 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-16 00:31:48,867 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:31:48,867 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,869 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:31:48,869 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:31:48,870 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:31:48,870 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,870 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:31:48,870 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:31:48,871 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:31:48,871 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,871 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:31:48,871 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:31:48,872 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:31:48,872 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,873 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:31:48,873 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:31:48,874 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:31:48,874 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,874 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:31:48,875 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,875 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:31:48,875 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,876 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:31:48,879 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:48,879 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:31:48,880 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:48,880 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:48,883 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:31:48,883 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:31:48,884 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:48,884 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:48,887 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:31:48,887 INFO sqlalchemy.engine.base.Engine Thread-2 : ('15', 1)
2020-06-16 00:31:48,888 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:31:48,888 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:31:48,892 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:31:48,892 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-06-16 00:31:48,892 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:48,893 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:31:48,893 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:31:48,893 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:31:48,894 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:31:48,894 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-06-16 00:31:48,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:48,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:31:48,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:31:48,898 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:31:48,898 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:31:48,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:31:48,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:31:48,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:31:48,900 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:31:48,900 INFO sqlalchemy.engine.base.Engine Thread-2 : (127, 0)
2020-06-16 00:31:48,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:48,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:31:48,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:31:48,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:31:48,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:31:48,903 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:31:48,903 INFO sqlalchemy.engine.base.Engine Thread-2 : (105,)
2020-06-16 00:31:48,903 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:48,904 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:31:48,904 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:31:49,008 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:31:49,008 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-16 00:31:49,009 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:49,009 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:49,012 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:31:49,261 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-16 00:31:49,262 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:49,262 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-16 00:31:49,263 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:49,264 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:49,275 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-16 00:31:49,338 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-16 00:31:49,339 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:49,339 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-16 00:31:49,342 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:49,343 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:49,343 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-16 00:31:49,345 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-16 00:31:49,346 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:49,347 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 00:31:49,347 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:49,348 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:49,349 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-16 00:31:49,352 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-16 00:31:49,353 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:49,353 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-16 00:31:49,354 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:49,355 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:49,356 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-16 00:31:49,359 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-16 00:31:49,360 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:49,360 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-16 00:31:49,361 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:49,361 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:49,363 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-16 00:31:54,606 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-16 00:31:54,607 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:54,607 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-16 00:31:54,609 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:54,609 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:54,612 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:31:54,612 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 00:31:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:54,614 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:31:54,614 INFO sqlalchemy.engine.base.Engine Thread-17 : ('15', 1)
2020-06-16 00:31:54,615 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:31:54,615 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:31:54,619 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:31:54,619 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-06-16 00:31:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:31:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:31:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:31:54,621 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:31:54,622 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-06-16 00:31:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:31:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:31:54,624 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:31:54,624 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-06-16 00:31:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:31:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:31:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:31:54,627 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:31:54,627 INFO sqlalchemy.engine.base.Engine Thread-17 : (127, 0)
2020-06-16 00:31:54,627 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:54,627 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:31:54,628 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:31:54,628 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:31:54,628 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:31:54,629 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:31:54,629 INFO sqlalchemy.engine.base.Engine Thread-17 : (105,)
2020-06-16 00:31:54,630 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:31:54,630 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:31:54,630 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:31:54,637 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:31:54,637 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 00:31:54,638 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:54,638 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:54,642 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-16 00:31:54,893 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-16 00:31:54,894 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:54,894 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-16 00:31:54,895 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:54,895 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:54,896 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-16 00:31:54,978 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-16 00:31:54,980 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:54,980 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-16 00:31:54,982 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-16 00:31:54,983 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:54,984 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:54,984 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:54,987 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-16 00:31:54,985 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-16 00:31:54,990 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-16 00:31:54,991 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:54,992 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-16 00:31:54,992 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:54,993 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:54,994 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-16 00:31:54,994 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:54,998 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-16 00:31:54,999 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:55,002 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-16 00:31:55,000 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:31:55,002 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-16 00:31:55,003 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:31:55,003 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:31:55,004 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-16 00:32:05,801 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-16 00:32:05,802 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:05,802 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-16 00:32:05,803 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:05,803 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:05,805 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:05,806 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-16 00:32:05,806 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:05,806 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:05,808 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:32:05,808 INFO sqlalchemy.engine.base.Engine Thread-32 : ('15', 1)
2020-06-16 00:32:05,808 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:32:05,809 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-16 00:32:05,812 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:32:05,812 INFO sqlalchemy.engine.base.Engine Thread-32 : (82,)
2020-06-16 00:32:05,813 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:05,813 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:32:05,813 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:32:05,813 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:32:05,814 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:32:05,814 INFO sqlalchemy.engine.base.Engine Thread-32 : (1,)
2020-06-16 00:32:05,815 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:05,815 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:32:05,815 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:32:05,816 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:32:05,816 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-06-16 00:32:05,817 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:32:05,817 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:32:05,817 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:32:05,818 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:32:05,819 INFO sqlalchemy.engine.base.Engine Thread-32 : (127, 0)
2020-06-16 00:32:05,819 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:05,819 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:32:05,820 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:32:05,820 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:32:05,820 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:32:05,821 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:32:05,821 INFO sqlalchemy.engine.base.Engine Thread-32 : (105,)
2020-06-16 00:32:05,822 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:05,822 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:32:05,822 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:32:05,824 INFO sqlalchemy.engine.base.Engine Thread-32 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-06-16 00:32:05,824 INFO sqlalchemy.engine.base.Engine Thread-32 : ('15', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 15)
2020-06-16 00:32:05,825 INFO sqlalchemy.engine.base.Engine Thread-32 : COMMIT
2020-06-16 00:32:05,873 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-16 00:32:05,874 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:05,874 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-16 00:32:05,875 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:05,875 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:05,877 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:05,877 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-16 00:32:05,878 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:05,878 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:05,880 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:32:05,880 INFO sqlalchemy.engine.base.Engine Thread-33 : (132,)
2020-06-16 00:32:05,881 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:05,881 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:32:05,881 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:32:05,881 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:32:05,881 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:32:05,891 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:32:05,891 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 6, 16, 0, 32, 5, 881863), datetime.datetime(2020, 6, 30, 0, 32, 5, 881863), datetime.datetime(2020, 6, 16, 0, 32, 5, 881863), datetime.datetime(2020, 6, 30, 0, 32, 5, 881863), datetime.datetime(2020, 6, 16, 0, 32, 5, 881863), datetime.datetime(2020, 6, 30, 0, 32, 5, 881863))
2020-06-16 00:32:05,891 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:32:05,892 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:32:05,892 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:32:05,908 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:05,909 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-16 00:32:05,909 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:05,910 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:05,912 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-16 00:32:06,155 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-16 00:32:06,156 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:06,156 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-16 00:32:06,157 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:06,157 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:06,159 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-16 00:32:06,221 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-16 00:32:06,222 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:06,222 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-16 00:32:06,226 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-16 00:32:06,227 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:06,227 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-16 00:32:06,227 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:06,231 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:06,230 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:06,234 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:06,235 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-16 00:32:06,236 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-16 00:32:06,237 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-16 00:32:06,238 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:06,238 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-16 00:32:06,238 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-16 00:32:06,239 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:06,240 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-16 00:32:06,238 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:06,244 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:06,241 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:06,245 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-16 00:32:06,246 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:06,248 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-16 00:32:08,874 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-16 00:32:08,880 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:32:08,880 INFO sqlalchemy.engine.base.Engine Thread-48 : ()
2020-06-16 00:32:08,882 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:32:08,883 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:08,883 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:32:08,884 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:32:08,885 INFO sqlalchemy.engine.base.Engine Thread-48 : (100,)
2020-06-16 00:32:08,885 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:08,885 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 00:32:08,886 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 00:32:08,886 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 00:32:08,886 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 00:32:08,886 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 00:32:08,888 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:08,888 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-16 00:32:08,888 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:08,888 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:08,899 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:08,900 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-16 00:32:08,900 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:08,901 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:08,902 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-16 00:32:09,166 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-16 00:32:09,169 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-16 00:32:09,170 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:09,171 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:09,177 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-16 00:32:09,174 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-16 00:32:09,177 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-16 00:32:09,179 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:09,180 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-16 00:32:09,179 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:09,181 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:09,177 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-16 00:32:09,182 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-16 00:32:09,180 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:09,184 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:09,187 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:09,186 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-16 00:32:09,185 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:09,188 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:09,189 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-16 00:32:09,189 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:09,190 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-16 00:32:09,190 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:09,193 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-16 00:32:09,210 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-16 00:32:09,211 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:09,211 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-16 00:32:09,211 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:09,211 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:09,212 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-16 00:32:09,957 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-16 00:32:09,959 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:32:09,959 INFO sqlalchemy.engine.base.Engine Thread-63 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:32:09,961 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:32:09,962 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:32:09,962 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:32:09,962 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 00:32:09,962 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:32:09,962 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:32:09,962 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:32:09,967 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:32:09,967 INFO sqlalchemy.engine.base.Engine Thread-63 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:32:09,968 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:32:09,968 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:32:09,973 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:32:09,973 INFO sqlalchemy.engine.base.Engine Thread-63 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:32:09,974 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:32:09,975 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:32:09,976 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-16 00:32:10,009 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-16 00:32:10,010 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:32:10,011 INFO sqlalchemy.engine.base.Engine Thread-64 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:32:10,012 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:32:10,013 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:32:10,013 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:32:10,013 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 00:32:10,013 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:32:10,013 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:32:10,013 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:32:10,017 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:32:10,018 INFO sqlalchemy.engine.base.Engine Thread-64 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:32:10,018 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:32:10,019 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:32:10,023 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:32:10,023 INFO sqlalchemy.engine.base.Engine Thread-64 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:32:10,024 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:32:10,025 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:32:10,026 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-16 00:32:10,059 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-16 00:32:10,062 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-16 00:32:10,065 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-16 00:32:10,068 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,067 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,068 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-06-16 00:32:10,068 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-16 00:32:10,066 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,069 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-16 00:32:10,069 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,070 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,082 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-06-16 00:32:10,083 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,084 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-06-16 00:32:10,084 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,084 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,085 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,091 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,091 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,090 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,104 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,105 INFO sqlalchemy.engine.base.Engine Thread-66 : (20, 1)
2020-06-16 00:32:10,112 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,115 INFO sqlalchemy.engine.base.Engine Thread-68 : (21, 1)
2020-06-16 00:32:10,113 INFO sqlalchemy.engine.base.Engine Thread-65 : (15, 1)
2020-06-16 00:32:10,116 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-06-16 00:32:10,112 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,117 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,117 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:32:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:32:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:32:10,123 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-06-16 00:32:10,125 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:32:10,126 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:32:10,126 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-06-16 00:32:10,132 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,133 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:32:10,135 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,136 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,136 INFO sqlalchemy.engine.base.Engine Thread-67 : (19, 1)
2020-06-16 00:32:10,142 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,162 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-06-16 00:32:10,174 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-16 00:32:10,201 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-16 00:32:10,211 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,211 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:32:10,216 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:32:10,214 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,217 INFO sqlalchemy.engine.base.Engine Thread-70 : (23, 1)
2020-06-16 00:32:10,215 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,218 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-06-16 00:32:10,213 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-06-16 00:32:10,224 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:32:10,232 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,234 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:32:10,234 INFO sqlalchemy.engine.base.Engine Thread-69 : (22, 1)
2020-06-16 00:32:10,235 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-06-16 00:32:10,238 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-06-16 00:32:10,239 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,239 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-06-16 00:32:10,240 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,241 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,247 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:32:10,249 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-16 00:32:10,256 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:32:10,271 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:10,272 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,273 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-16 00:32:10,274 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-06-16 00:32:10,274 INFO sqlalchemy.engine.base.Engine Thread-71 : (31, 1)
2020-06-16 00:32:10,275 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:10,275 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:10,282 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:32:10,302 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:32:10,304 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:10,304 INFO sqlalchemy.engine.base.Engine Thread-72 : (30, 1)
2020-06-16 00:32:10,305 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-06-16 00:32:10,306 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:32:10,308 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:10,309 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-16 00:32:18,281 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-16 00:32:18,282 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:18,282 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-16 00:32:18,283 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:18,283 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:18,291 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:32:18,291 INFO sqlalchemy.engine.base.Engine Thread-73 : (20,)
2020-06-16 00:32:18,292 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:32:18,293 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:32:18,294 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-16 00:32:19,211 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-16 00:32:19,212 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:19,212 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-16 00:32:19,213 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:19,213 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:19,216 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:32:19,216 INFO sqlalchemy.engine.base.Engine Thread-74 : (20,)
2020-06-16 00:32:19,217 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:32:19,217 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:32:19,221 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:32:19,221 INFO sqlalchemy.engine.base.Engine Thread-74 : (20,)
2020-06-16 00:32:19,222 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:32:19,222 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:32:19,222 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:32:19,222 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:32:19,222 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:32:19,224 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:32:19,224 INFO sqlalchemy.engine.base.Engine Thread-74 : ()
2020-06-16 00:32:19,225 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:32:19,225 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:32:19,225 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:32:19,228 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:32:19,228 INFO sqlalchemy.engine.base.Engine Thread-74 : ()
2020-06-16 00:32:19,229 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:32:19,230 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:19,230 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:32:19,233 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:32:19,233 INFO sqlalchemy.engine.base.Engine Thread-74 : (20,)
2020-06-16 00:32:19,233 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:32:19,233 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:32:19,234 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:32:19,234 INFO sqlalchemy.engine.base.Engine Thread-74 : (1,)
2020-06-16 00:32:19,235 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexgroups_1_group_members',)
2020-06-16 00:32:19,235 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row ('1',)
2020-06-16 00:32:19,241 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:32:19,241 INFO sqlalchemy.engine.base.Engine Thread-74 : ('1',)
2020-06-16 00:32:19,241 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:32:19,242 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:32:19,243 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:32:19,243 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-16 00:32:19,243 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:32:19,244 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (5,)
2020-06-16 00:32:19,260 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-16 00:32:22,855 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-16 00:32:22,857 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-16 00:32:22,857 INFO sqlalchemy.engine.base.Engine Thread-75 : (0, 1)
2020-06-16 00:32:22,858 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-16 00:32:22,865 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:32:22,865 INFO sqlalchemy.engine.base.Engine Thread-75 : ()
2020-06-16 00:32:22,866 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:32:22,866 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:22,866 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:32:22,868 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:32:22,868 INFO sqlalchemy.engine.base.Engine Thread-75 : (97,)
2020-06-16 00:32:22,868 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:22,868 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-16 00:32:22,868 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-16 00:32:22,870 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:32:22,870 INFO sqlalchemy.engine.base.Engine Thread-75 : (0, 1)
2020-06-16 00:32:22,870 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:32:22,873 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-16 00:32:22,873 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-16 00:32:22,874 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:32:22,875 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:22,876 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:32:22,876 INFO sqlalchemy.engine.base.Engine Thread-75 : (20, 1)
2020-06-16 00:32:22,877 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:32:22,877 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 00:32:22,880 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:22,881 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-16 00:32:22,881 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:22,882 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:22,943 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:22,943 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-06-16 00:32:22,943 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:22,944 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:22,948 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:22,949 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-06-16 00:32:22,949 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:22,949 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:22,950 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-16 00:32:23,231 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-06-16 00:32:23,232 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:23,232 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-06-16 00:32:23,233 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:23,234 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:23,235 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-06-16 00:32:23,318 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-06-16 00:32:23,319 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:23,319 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-06-16 00:32:23,322 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-06-16 00:32:23,323 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:23,323 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-16 00:32:23,324 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:23,324 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:23,325 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-06-16 00:32:23,326 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:23,326 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:23,328 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-06-16 00:32:23,331 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-16 00:32:23,333 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:23,333 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-16 00:32:23,334 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:23,337 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-16 00:32:23,337 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:23,338 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:23,339 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-16 00:32:23,340 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-16 00:32:23,341 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:23,341 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:23,342 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-16 00:32:50,533 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-16 00:32:50,535 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-16 00:32:50,535 INFO sqlalchemy.engine.base.Engine Thread-90 : (0, 1)
2020-06-16 00:32:50,536 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-16 00:32:50,541 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:32:50,541 INFO sqlalchemy.engine.base.Engine Thread-90 : ()
2020-06-16 00:32:50,542 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:32:50,543 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,543 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:32:50,545 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:32:50,545 INFO sqlalchemy.engine.base.Engine Thread-90 : (97,)
2020-06-16 00:32:50,545 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:50,546 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-16 00:32:50,546 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-16 00:32:50,547 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:32:50,547 INFO sqlalchemy.engine.base.Engine Thread-90 : (20, 1)
2020-06-16 00:32:50,548 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:32:50,548 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 00:32:50,552 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-16 00:32:50,552 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-16 00:32:50,553 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:32:50,554 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,557 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-16 00:32:50,557 INFO sqlalchemy.engine.base.Engine Thread-90 : (109,)
2020-06-16 00:32:50,558 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_param_name', 'parameters_param_value')
2020-06-16 00:32:50,558 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row ('TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '3')
2020-06-16 00:32:50,558 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row ('DIFFERENT_COMPLEXES_PER_DAY', '8')
2020-06-16 00:32:50,558 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row ('TOTAL_CHANGES_PER_DAY', '16')
2020-06-16 00:32:50,558 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row ('TOTAL_SLOTS_PER_CHANGE', '8')
2020-06-16 00:32:50,562 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT count(*) AS count_1 
FROM (SELECT bookings.id AS bookings_id 
FROM bookings 
WHERE bookings.start_dt BETWEEN %s AND %s) AS anon_1
2020-06-16 00:32:50,562 INFO sqlalchemy.engine.base.Engine Thread-90 : (datetime.datetime(2020, 6, 16, 0, 0), datetime.datetime(2020, 6, 16, 23, 59))
2020-06-16 00:32:50,563 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('count_1',)
2020-06-16 00:32:50,563 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (4,)
2020-06-16 00:32:50,565 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT count(*) AS count_1 
FROM (SELECT bookings.id AS bookings_id 
FROM bookings 
WHERE bookings.complex = %s AND bookings.start_dt BETWEEN %s AND %s) AS anon_1
2020-06-16 00:32:50,565 INFO sqlalchemy.engine.base.Engine Thread-90 : ('1', datetime.datetime(2020, 6, 16, 0, 0), datetime.datetime(2020, 6, 16, 23, 59))
2020-06-16 00:32:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('count_1',)
2020-06-16 00:32:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (4,)
2020-06-16 00:32:50,568 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT count(*) AS count_1 
FROM (SELECT count(bookings.complex) AS count_2 
FROM bookings GROUP BY bookings.complex) AS anon_1
2020-06-16 00:32:50,568 INFO sqlalchemy.engine.base.Engine Thread-90 : ()
2020-06-16 00:32:50,569 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('count_1',)
2020-06-16 00:32:50,569 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (2,)
2020-06-16 00:32:50,571 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-16 00:32:50,572 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-16 00:32:50,572 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:32:50,573 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,575 INFO sqlalchemy.engine.base.Engine Thread-90 : INSERT INTO bookings (id, slot_id, title, start_dt, end_dt, ticket, stakeholder_id, budget, project, description, owner_id, complex, cluster, approval_required, approved_date, approved_by, approval_reason, change_ref, change_subref, logged) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
2020-06-16 00:32:50,575 INFO sqlalchemy.engine.base.Engine Thread-90 : ('0', '20', 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', '1', 98, '0', None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50, 557000))
2020-06-16 00:32:50,576 INFO sqlalchemy.engine.base.Engine Thread-90 : COMMIT
2020-06-16 00:32:50,615 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-16 00:32:50,616 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:50,616 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-16 00:32:50,616 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:50,617 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:50,619 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:32:50,619 INFO sqlalchemy.engine.base.Engine Thread-91 : (132,)
2020-06-16 00:32:50,619 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:32:50,620 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:32:50,620 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:32:50,620 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:32:50,620 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:32:50,646 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-16 00:32:50,647 INFO sqlalchemy.engine.base.Engine Thread-91 : (datetime.datetime(2020, 6, 16, 0, 32, 50, 620550), datetime.datetime(2020, 6, 30, 0, 32, 50, 620550), datetime.datetime(2020, 6, 16, 0, 32, 50, 620550), datetime.datetime(2020, 6, 30, 0, 32, 50, 620550), datetime.datetime(2020, 6, 16, 0, 32, 50, 620550), datetime.datetime(2020, 6, 30, 0, 32, 50, 620550))
2020-06-16 00:32:50,648 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:32:50,650 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,650 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,650 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,651 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,651 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,658 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-16 00:32:50,658 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', datetime.datetime(2020, 6, 16, 0, 32, 50, 620550), datetime.datetime(2020, 6, 30, 0, 32, 50, 620550), datetime.datetime(2020, 6, 16, 0, 32, 50, 620550), datetime.datetime(2020, 6, 30, 0, 32, 50, 620550), datetime.datetime(2020, 6, 16, 0, 32, 50, 620550), datetime.datetime(2020, 6, 30, 0, 32, 50, 620550))
2020-06-16 00:32:50,660 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:32:50,660 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,660 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,661 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:32:50,696 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:50,696 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', 1, 1)
2020-06-16 00:32:50,696 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:50,697 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:50,700 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:32:50,700 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', 1, 1)
2020-06-16 00:32:50,701 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:50,701 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:50,705 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-16 00:32:50,968 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-06-16 00:32:50,969 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:50,969 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-06-16 00:32:50,970 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:50,970 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:50,971 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-06-16 00:32:51,032 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-06-16 00:32:51,034 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:51,035 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-06-16 00:32:51,037 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-16 00:32:51,038 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:51,045 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:51,042 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-16 00:32:51,045 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-16 00:32:51,041 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:51,047 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-06-16 00:32:51,048 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:51,049 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:32:51,049 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-16 00:32:51,049 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-16 00:32:51,049 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-16 00:32:51,051 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:51,051 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:51,052 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-16 00:32:51,053 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:51,054 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:51,055 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-16 00:32:51,055 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:32:51,055 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:32:51,057 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-16 00:33:02,382 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-16 00:33:02,384 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:33:02,384 INFO sqlalchemy.engine.base.Engine Thread-106 : ()
2020-06-16 00:33:02,388 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:33:02,388 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:33:02,388 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:33:02,390 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:33:02,390 INFO sqlalchemy.engine.base.Engine Thread-106 : (100,)
2020-06-16 00:33:02,390 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:33:02,391 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 00:33:02,391 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 00:33:02,391 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 00:33:02,391 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 00:33:02,391 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 00:33:02,393 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:02,393 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-16 00:33:02,393 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:02,394 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:02,398 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:33:02,398 INFO sqlalchemy.engine.base.Engine Thread-106 : ('philip', 1, 1)
2020-06-16 00:33:02,399 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:02,399 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:02,400 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-16 00:33:02,663 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-06-16 00:33:02,664 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:02,664 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-06-16 00:33:02,664 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:02,665 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:02,666 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-06-16 00:33:02,727 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-06-16 00:33:02,730 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-16 00:33:02,766 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-16 00:33:02,768 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:02,769 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:02,774 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-16 00:33:02,773 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-06-16 00:33:02,774 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-16 00:33:02,771 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:02,777 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-16 00:33:02,775 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:02,778 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:02,777 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:02,776 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:02,778 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:02,779 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:02,781 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:02,780 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-16 00:33:02,781 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-16 00:33:02,782 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-16 00:33:02,779 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-06-16 00:33:02,784 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:02,785 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:02,786 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-16 00:33:03,595 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-16 00:33:03,597 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:33:03,597 INFO sqlalchemy.engine.base.Engine Thread-121 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:33:03,599 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:33:03,599 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:33:03,599 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:33:03,599 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:33:03,599 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:33:03,599 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:33:03,599 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:33:03,604 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:33:03,604 INFO sqlalchemy.engine.base.Engine Thread-121 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:33:03,605 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:33:03,605 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:33:03,610 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:33:03,610 INFO sqlalchemy.engine.base.Engine Thread-121 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:33:03,611 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:33:03,611 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:33:03,613 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-16 00:33:03,646 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-16 00:33:03,648 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:33:03,648 INFO sqlalchemy.engine.base.Engine Thread-122 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:33:03,649 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:33:03,649 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:33:03,650 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:33:03,650 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:33:03,650 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:33:03,650 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:33:03,650 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:33:03,655 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:33:03,655 INFO sqlalchemy.engine.base.Engine Thread-122 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:33:03,656 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:33:03,656 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:33:03,661 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:33:03,661 INFO sqlalchemy.engine.base.Engine Thread-122 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:33:03,662 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:33:03,662 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:33:03,663 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-16 00:33:03,695 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-16 00:33:03,696 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,696 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-16 00:33:03,699 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-16 00:33:03,700 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,701 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-16 00:33:03,701 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,701 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,713 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-16 00:33:03,714 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,714 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-16 00:33:03,716 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,722 INFO sqlalchemy.engine.base.Engine Thread-123 : (15, 1)
2020-06-16 00:33:03,722 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,723 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,721 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-06-16 00:33:03,739 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,739 INFO sqlalchemy.engine.base.Engine Thread-126 : (1, 1)
2020-06-16 00:33:03,737 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,739 INFO sqlalchemy.engine.base.Engine Thread-124 : (19, 1)
2020-06-16 00:33:03,729 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:33:03,741 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:33:03,740 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,731 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-06-16 00:33:03,742 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,742 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:33:03,743 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-16 00:33:03,744 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,752 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-06-16 00:33:03,758 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,759 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:33:03,760 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,760 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-06-16 00:33:03,764 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,762 INFO sqlalchemy.engine.base.Engine Thread-125 : (20, 1)
2020-06-16 00:33:03,763 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-16 00:33:03,763 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,762 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,780 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-06-16 00:33:03,771 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:33:03,777 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,780 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-06-16 00:33:03,764 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,782 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 0, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:33:03,782 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,792 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,783 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,791 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-16 00:33:03,792 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-06-16 00:33:03,782 INFO sqlalchemy.engine.base.Engine Thread-126 : (21, 1)
2020-06-16 00:33:03,804 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,804 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-06-16 00:33:03,813 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,814 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:03,814 INFO sqlalchemy.engine.base.Engine Thread-127 : (22, 1)
2020-06-16 00:33:03,815 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:33:03,816 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,819 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,816 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-06-16 00:33:03,818 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:33:03,818 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:33:03,816 INFO sqlalchemy.engine.base.Engine Thread-128 : (23, 1)
2020-06-16 00:33:03,841 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:33:03,844 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,844 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:03,846 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:03,845 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:33:03,846 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-06-16 00:33:03,846 INFO sqlalchemy.engine.base.Engine Thread-129 : (31, 1)
2020-06-16 00:33:03,844 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-06-16 00:33:03,858 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:33:03,875 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:33:03,878 INFO sqlalchemy.engine.base.Engine Thread-130 : (30, 1)
2020-06-16 00:33:03,878 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-06-16 00:33:03,876 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:33:03,880 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:33:03,883 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:33:03,885 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:33:03,886 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-06-16 00:33:03,887 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-06-16 00:33:19,839 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-06-16 00:33:19,840 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:19,840 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-06-16 00:33:19,841 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:19,841 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:19,850 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:33:19,850 INFO sqlalchemy.engine.base.Engine Thread-131 : (20,)
2020-06-16 00:33:19,851 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:33:19,852 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:33:19,853 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-06-16 00:33:19,869 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-06-16 00:33:19,870 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:33:19,870 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-06-16 00:33:19,871 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:33:19,871 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:33:19,877 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:33:19,877 INFO sqlalchemy.engine.base.Engine Thread-132 : (20,)
2020-06-16 00:33:19,878 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:33:19,878 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:33:19,882 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:33:19,882 INFO sqlalchemy.engine.base.Engine Thread-132 : (20,)
2020-06-16 00:33:19,883 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:33:19,883 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:33:19,883 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:33:19,883 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:33:19,883 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:33:19,883 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:33:19,885 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:33:19,885 INFO sqlalchemy.engine.base.Engine Thread-132 : ()
2020-06-16 00:33:19,886 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:33:19,886 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:33:19,886 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:33:19,889 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:33:19,889 INFO sqlalchemy.engine.base.Engine Thread-132 : ()
2020-06-16 00:33:19,890 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:33:19,891 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:33:19,891 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:33:19,894 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:33:19,894 INFO sqlalchemy.engine.base.Engine Thread-132 : (20,)
2020-06-16 00:33:19,895 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:33:19,895 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:33:19,896 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:33:19,896 INFO sqlalchemy.engine.base.Engine Thread-132 : (1,)
2020-06-16 00:33:19,897 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('complexgroups_1_group_members',)
2020-06-16 00:33:19,897 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row ('1',)
2020-06-16 00:33:19,903 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:33:19,903 INFO sqlalchemy.engine.base.Engine Thread-132 : ('1',)
2020-06-16 00:33:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:33:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:33:19,904 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:33:19,904 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-06-16 00:33:19,905 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:33:19,905 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (5,)
2020-06-16 00:33:19,906 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-06-16 00:34:28,440 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-16 00:34:28,441 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:28,441 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-16 00:34:28,442 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,442 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,445 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:34:28,445 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-06-16 00:34:28,446 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,446 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,448 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:34:28,448 INFO sqlalchemy.engine.base.Engine Thread-133 : (132,)
2020-06-16 00:34:28,449 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:34:28,449 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:34:28,449 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:34:28,449 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:34:28,449 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:34:28,459 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:34:28,459 INFO sqlalchemy.engine.base.Engine Thread-133 : (datetime.datetime(2020, 6, 16, 0, 34, 28, 450206), datetime.datetime(2020, 6, 30, 0, 34, 28, 450206), datetime.datetime(2020, 6, 16, 0, 34, 28, 450206), datetime.datetime(2020, 6, 30, 0, 34, 28, 450206), datetime.datetime(2020, 6, 16, 0, 34, 28, 450206), datetime.datetime(2020, 6, 30, 0, 34, 28, 450206))
2020-06-16 00:34:28,460 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:34:28,460 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:34:28,460 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:34:28,465 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:34:28,465 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-06-16 00:34:28,465 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,466 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,468 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-16 00:34:28,746 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-06-16 00:34:28,750 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-06-16 00:34:28,751 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:28,758 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-06-16 00:34:28,755 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:28,758 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-06-16 00:34:28,753 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-06-16 00:34:28,758 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-06-16 00:34:28,759 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:28,761 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:28,761 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,762 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,762 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-06-16 00:34:28,762 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-06-16 00:34:28,762 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,763 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,764 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,764 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,767 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,766 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,769 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-06-16 00:34:28,765 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-06-16 00:34:28,767 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-06-16 00:34:28,768 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-06-16 00:34:28,797 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-06-16 00:34:28,798 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:28,798 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-06-16 00:34:28,799 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:28,799 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:28,800 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-06-16 00:34:30,765 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-06-16 00:34:30,766 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:30,766 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-06-16 00:34:30,767 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:30,767 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:30,770 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:34:30,770 INFO sqlalchemy.engine.base.Engine Thread-148 : ('philip', 1, 1)
2020-06-16 00:34:30,770 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:30,771 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:30,772 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 00:34:30,772 INFO sqlalchemy.engine.base.Engine Thread-148 : ('20', 1)
2020-06-16 00:34:30,773 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 00:34:30,773 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 00:34:30,775 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:34:30,775 INFO sqlalchemy.engine.base.Engine Thread-148 : (82,)
2020-06-16 00:34:30,776 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:34:30,777 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:34:30,777 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 00:34:30,777 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 00:34:30,778 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 00:34:30,779 INFO sqlalchemy.engine.base.Engine Thread-148 : (1,)
2020-06-16 00:34:30,779 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:34:30,779 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 00:34:30,779 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 00:34:30,781 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 00:34:30,781 INFO sqlalchemy.engine.base.Engine Thread-148 : ()
2020-06-16 00:34:30,781 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:34:30,781 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:34:30,782 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:34:30,783 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 00:34:30,783 INFO sqlalchemy.engine.base.Engine Thread-148 : (127, 0)
2020-06-16 00:34:30,784 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:34:30,784 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:34:30,784 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:34:30,784 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 00:34:30,784 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 00:34:30,786 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:34:30,786 INFO sqlalchemy.engine.base.Engine Thread-148 : (105,)
2020-06-16 00:34:30,786 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:34:30,787 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 00:34:30,787 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 00:34:30,791 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:34:30,792 INFO sqlalchemy.engine.base.Engine Thread-148 : ('philip', 1, 1)
2020-06-16 00:34:30,792 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:30,792 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:30,795 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-06-16 00:34:31,031 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-16 00:34:31,032 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:31,032 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-06-16 00:34:31,032 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:31,033 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:31,034 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-16 00:34:31,094 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-06-16 00:34:31,097 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-06-16 00:34:31,098 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:31,100 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:31,103 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-06-16 00:34:31,104 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-06-16 00:34:31,106 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-06-16 00:34:31,106 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-06-16 00:34:31,107 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:31,109 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:31,110 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-06-16 00:34:31,109 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-06-16 00:34:31,110 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:31,110 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:31,109 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:31,111 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:31,113 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:31,111 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:31,114 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:31,115 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-06-16 00:34:31,114 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-06-16 00:34:31,112 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-06-16 00:34:31,112 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:31,118 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-06-16 00:34:36,965 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-06-16 00:34:36,966 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:36,966 INFO sqlalchemy.engine.base.Engine Thread-163 : (1, 1)
2020-06-16 00:34:36,967 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:36,967 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:36,969 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:34:36,970 INFO sqlalchemy.engine.base.Engine Thread-163 : ('philip', 1, 1)
2020-06-16 00:34:36,970 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:36,971 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:36,973 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:34:36,973 INFO sqlalchemy.engine.base.Engine Thread-163 : (132,)
2020-06-16 00:34:36,973 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:34:36,974 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:34:36,974 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:34:36,974 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:34:36,974 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:34:36,983 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 00:34:36,983 INFO sqlalchemy.engine.base.Engine Thread-163 : (datetime.datetime(2020, 6, 16, 0, 34, 36, 974766), datetime.datetime(2020, 6, 30, 0, 34, 36, 974766), datetime.datetime(2020, 6, 16, 0, 34, 36, 974766), datetime.datetime(2020, 6, 30, 0, 34, 36, 974766), datetime.datetime(2020, 6, 16, 0, 34, 36, 974766), datetime.datetime(2020, 6, 30, 0, 34, 36, 974766))
2020-06-16 00:34:36,984 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 00:34:36,984 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 00:34:36,984 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 00:34:36,988 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:34:36,988 INFO sqlalchemy.engine.base.Engine Thread-163 : ('philip', 1, 1)
2020-06-16 00:34:36,989 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:36,989 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:36,991 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-06-16 00:34:37,254 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-06-16 00:34:37,256 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:37,256 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-06-16 00:34:37,256 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:37,257 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:37,258 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-06-16 00:34:37,326 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-06-16 00:34:37,329 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:37,329 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-06-16 00:34:37,331 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-06-16 00:34:37,333 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:37,333 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-06-16 00:34:37,333 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:37,334 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:37,337 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-06-16 00:34:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:37,339 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-06-16 00:34:37,340 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:37,343 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-06-16 00:34:37,343 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:37,344 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-06-16 00:34:37,347 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:37,347 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-06-16 00:34:37,346 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:37,349 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-06-16 00:34:37,348 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:37,350 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-06-16 00:34:37,351 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:37,351 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:37,352 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-06-16 00:34:39,918 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-06-16 00:34:39,921 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:34:39,921 INFO sqlalchemy.engine.base.Engine Thread-178 : ()
2020-06-16 00:34:39,922 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:34:39,922 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:34:39,922 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:34:39,924 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:34:39,924 INFO sqlalchemy.engine.base.Engine Thread-178 : (100,)
2020-06-16 00:34:39,925 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:34:39,925 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 00:34:39,925 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 00:34:39,925 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 00:34:39,925 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 00:34:39,925 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 00:34:39,927 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:39,927 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-06-16 00:34:39,928 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:39,928 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:39,933 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:34:39,933 INFO sqlalchemy.engine.base.Engine Thread-178 : ('philip', 1, 1)
2020-06-16 00:34:39,934 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:39,934 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:39,936 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-06-16 00:34:40,200 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-06-16 00:34:40,201 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:40,201 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-06-16 00:34:40,201 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:40,202 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:40,203 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-06-16 00:34:40,269 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-06-16 00:34:40,270 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:40,270 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-06-16 00:34:40,272 INFO sqlalchemy.engine.base.Engine Thread-190 : BEGIN (implicit)
2020-06-16 00:34:40,273 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:40,273 INFO sqlalchemy.engine.base.Engine Thread-190 : (1, 1)
2020-06-16 00:34:40,273 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:40,274 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:40,274 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:40,278 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-06-16 00:34:40,278 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:40,279 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-06-16 00:34:40,280 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:40,285 INFO sqlalchemy.engine.base.Engine Thread-191 : (1, 1)
2020-06-16 00:34:40,283 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-06-16 00:34:40,285 INFO sqlalchemy.engine.base.Engine Thread-190 : ROLLBACK
2020-06-16 00:34:40,287 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:40,288 INFO sqlalchemy.engine.base.Engine Thread-192 : (1, 1)
2020-06-16 00:34:40,287 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:40,289 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:40,290 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-06-16 00:34:40,288 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:40,291 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:40,293 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-06-16 00:34:41,075 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-06-16 00:34:41,077 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:34:41,077 INFO sqlalchemy.engine.base.Engine Thread-193 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:34:41,079 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:34:41,079 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:34:41,079 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:34:41,080 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:34:41,080 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:34:41,080 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:34:41,080 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:34:41,085 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:34:41,085 INFO sqlalchemy.engine.base.Engine Thread-193 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:34:41,086 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:34:41,087 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:34:41,093 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:34:41,093 INFO sqlalchemy.engine.base.Engine Thread-193 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:34:41,094 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:34:41,095 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:34:41,096 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-06-16 00:34:41,131 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-06-16 00:34:41,134 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:34:41,134 INFO sqlalchemy.engine.base.Engine Thread-194 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:34:41,135 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:34:41,136 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:34:41,136 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:34:41,136 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:34:41,136 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:34:41,136 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:34:41,136 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:34:41,141 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:34:41,141 INFO sqlalchemy.engine.base.Engine Thread-194 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:34:41,142 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:34:41,142 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:34:41,147 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:34:41,147 INFO sqlalchemy.engine.base.Engine Thread-194 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:34:41,148 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:34:41,148 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:34:41,149 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-06-16 00:34:41,179 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-06-16 00:34:41,181 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,181 INFO sqlalchemy.engine.base.Engine Thread-195 : (1, 1)
2020-06-16 00:34:41,182 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,182 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,194 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,194 INFO sqlalchemy.engine.base.Engine Thread-195 : (15, 1)
2020-06-16 00:34:41,195 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:34:41,197 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-06-16 00:34:41,200 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,200 INFO sqlalchemy.engine.base.Engine Thread-196 : (1, 1)
2020-06-16 00:34:41,198 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:34:41,201 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,207 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,205 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-06-16 00:34:41,207 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-06-16 00:34:41,226 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,219 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,221 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-06-16 00:34:41,224 INFO sqlalchemy.engine.base.Engine Thread-200 : BEGIN (implicit)
2020-06-16 00:34:41,204 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-06-16 00:34:41,226 INFO sqlalchemy.engine.base.Engine Thread-198 : (1, 1)
2020-06-16 00:34:41,227 INFO sqlalchemy.engine.base.Engine Thread-196 : (19, 1)
2020-06-16 00:34:41,228 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,230 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,231 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,233 INFO sqlalchemy.engine.base.Engine Thread-197 : (1, 1)
2020-06-16 00:34:41,232 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,232 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-06-16 00:34:41,233 INFO sqlalchemy.engine.base.Engine Thread-200 : (1, 1)
2020-06-16 00:34:41,234 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,233 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:34:41,244 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:34:41,236 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,245 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,243 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,236 INFO sqlalchemy.engine.base.Engine Thread-201 : BEGIN (implicit)
2020-06-16 00:34:41,243 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,268 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,251 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-06-16 00:34:41,260 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,267 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,268 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,280 INFO sqlalchemy.engine.base.Engine Thread-201 : (1, 1)
2020-06-16 00:34:41,279 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,281 INFO sqlalchemy.engine.base.Engine Thread-199 : (22, 1)
2020-06-16 00:34:41,280 INFO sqlalchemy.engine.base.Engine Thread-198 : (21, 1)
2020-06-16 00:34:41,251 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,279 INFO sqlalchemy.engine.base.Engine Thread-197 : (20, 1)
2020-06-16 00:34:41,282 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,282 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:34:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:34:41,297 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,297 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:34:41,298 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,298 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:34:41,296 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-06-16 00:34:41,300 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-06-16 00:34:41,313 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 0, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:34:41,326 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,326 INFO sqlalchemy.engine.base.Engine Thread-200 : (23, 1)
2020-06-16 00:34:41,328 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:34:41,329 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:34:41,330 INFO sqlalchemy.engine.base.Engine Thread-201 : (31, 1)
2020-06-16 00:34:41,331 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-06-16 00:34:41,332 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-06-16 00:34:41,332 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-06-16 00:34:41,333 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:34:41,337 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:34:41,338 INFO sqlalchemy.engine.base.Engine Thread-200 : ROLLBACK
2020-06-16 00:34:41,337 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:34:41,335 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:34:41,339 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:34:41,341 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:34:41,353 INFO sqlalchemy.engine.base.Engine Thread-201 : ROLLBACK
2020-06-16 00:34:41,370 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:34:41,370 INFO sqlalchemy.engine.base.Engine Thread-202 : (30, 1)
2020-06-16 00:34:41,372 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:34:41,374 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:34:41,375 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-06-16 00:35:03,117 INFO sqlalchemy.engine.base.Engine Thread-203 : BEGIN (implicit)
2020-06-16 00:35:03,119 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:35:03,119 INFO sqlalchemy.engine.base.Engine Thread-203 : ('DATE', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-16 00:35:03,122 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:35:03,122 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (1, datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (8, datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (9, datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (10, datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (11, datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (12, datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', 5, 5)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (13, datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', 5, 5)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (18, datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:35:03,123 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:35:03,124 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:35:03,124 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:35:03,124 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:35:03,129 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:35:03,129 INFO sqlalchemy.engine.base.Engine Thread-203 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-16 00:35:03,130 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:35:03,130 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (11, datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Bob', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,130 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (12, datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Bob', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,131 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (13, datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'Bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,131 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (21, datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'Bob', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,131 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (23, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'Bob', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,131 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (25, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'Bob', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,131 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (29, datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'Bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,131 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:03,136 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:35:03,136 INFO sqlalchemy.engine.base.Engine Thread-203 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-16 00:35:03,137 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:35:03,137 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (7, datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Bob', 'testing', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:03,138 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (8, datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Bob', 'testing 2', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:03,138 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (9, datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Bob', 'testing', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:03,138 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (22, datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'Bob', 'test b', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:03,138 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (26, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'Bob', 'Testing booking #3', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:03,138 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (28, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'Bob', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:03,138 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:03,140 INFO sqlalchemy.engine.base.Engine Thread-203 : ROLLBACK
2020-06-16 00:35:03,216 INFO sqlalchemy.engine.base.Engine Thread-204 : BEGIN (implicit)
2020-06-16 00:35:03,217 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:35:03,217 INFO sqlalchemy.engine.base.Engine Thread-204 : (1, 1)
2020-06-16 00:35:03,218 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:35:03,218 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:35:03,219 INFO sqlalchemy.engine.base.Engine Thread-204 : ROLLBACK
2020-06-16 00:35:27,593 INFO sqlalchemy.engine.base.Engine Thread-205 : BEGIN (implicit)
2020-06-16 00:35:27,596 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:35:27,596 INFO sqlalchemy.engine.base.Engine Thread-205 : ('DATE', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (11, datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (12, datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', 5, 5)
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (13, datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', 5, 5)
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:35:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:35:27,603 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:35:27,603 INFO sqlalchemy.engine.base.Engine Thread-205 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-16 00:35:27,604 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:35:27,605 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:35:27,610 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:35:27,610 INFO sqlalchemy.engine.base.Engine Thread-205 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-16 00:35:27,611 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:35:27,611 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:35:27,613 INFO sqlalchemy.engine.base.Engine Thread-205 : ROLLBACK
2020-06-16 00:35:27,688 INFO sqlalchemy.engine.base.Engine Thread-206 : BEGIN (implicit)
2020-06-16 00:35:27,689 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:35:27,689 INFO sqlalchemy.engine.base.Engine Thread-206 : (1, 1)
2020-06-16 00:35:27,690 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:35:27,690 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:35:27,691 INFO sqlalchemy.engine.base.Engine Thread-206 : ROLLBACK
2020-06-16 00:36:46,181 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-06-16 00:36:46,183 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:46,183 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-06-16 00:36:46,184 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:46,184 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:46,194 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:36:46,194 INFO sqlalchemy.engine.base.Engine Thread-207 : (20,)
2020-06-16 00:36:46,195 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:36:46,196 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:36:46,197 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-06-16 00:36:46,214 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-06-16 00:36:46,215 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:46,215 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-06-16 00:36:46,216 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:46,216 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:46,220 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:36:46,220 INFO sqlalchemy.engine.base.Engine Thread-208 : (20,)
2020-06-16 00:36:46,220 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:36:46,221 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:36:46,226 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:36:46,226 INFO sqlalchemy.engine.base.Engine Thread-208 : (20,)
2020-06-16 00:36:46,227 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:36:46,227 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:36:46,227 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:36:46,227 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:36:46,227 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:36:46,228 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:36:46,230 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:36:46,230 INFO sqlalchemy.engine.base.Engine Thread-208 : ()
2020-06-16 00:36:46,231 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:36:46,231 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:36:46,231 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:36:46,235 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:36:46,235 INFO sqlalchemy.engine.base.Engine Thread-208 : ()
2020-06-16 00:36:46,236 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:36:46,236 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:46,236 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:36:46,239 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:36:46,239 INFO sqlalchemy.engine.base.Engine Thread-208 : (20,)
2020-06-16 00:36:46,240 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:36:46,240 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:36:46,241 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:36:46,241 INFO sqlalchemy.engine.base.Engine Thread-208 : (1,)
2020-06-16 00:36:46,242 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexgroups_1_group_members',)
2020-06-16 00:36:46,242 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row ('1',)
2020-06-16 00:36:46,251 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:36:46,251 INFO sqlalchemy.engine.base.Engine Thread-208 : ('1',)
2020-06-16 00:36:46,251 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:36:46,252 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:36:46,253 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:36:46,253 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-06-16 00:36:46,253 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:36:46,254 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (5,)
2020-06-16 00:36:46,255 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-06-16 00:36:53,624 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-06-16 00:36:53,625 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:53,626 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-06-16 00:36:53,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:53,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:53,629 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:36:53,629 INFO sqlalchemy.engine.base.Engine Thread-209 : (132,)
2020-06-16 00:36:53,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:36:53,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 00:36:53,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 00:36:53,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 00:36:53,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 00:36:53,653 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-16 00:36:53,653 INFO sqlalchemy.engine.base.Engine Thread-209 : (datetime.datetime(2020, 6, 16, 0, 36, 53, 630555), datetime.datetime(2020, 6, 30, 0, 36, 53, 630555), datetime.datetime(2020, 6, 16, 0, 36, 53, 630555), datetime.datetime(2020, 6, 30, 0, 36, 53, 630555), datetime.datetime(2020, 6, 16, 0, 36, 53, 630555), datetime.datetime(2020, 6, 30, 0, 36, 53, 630555))
2020-06-16 00:36:53,655 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:36:53,657 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,657 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,657 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,658 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,658 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,664 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-16 00:36:53,665 INFO sqlalchemy.engine.base.Engine Thread-209 : ('philip', datetime.datetime(2020, 6, 16, 0, 36, 53, 630555), datetime.datetime(2020, 6, 30, 0, 36, 53, 630555), datetime.datetime(2020, 6, 16, 0, 36, 53, 630555), datetime.datetime(2020, 6, 30, 0, 36, 53, 630555), datetime.datetime(2020, 6, 16, 0, 36, 53, 630555), datetime.datetime(2020, 6, 30, 0, 36, 53, 630555))
2020-06-16 00:36:53,666 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:36:53,667 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,667 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,667 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:36:53,672 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:36:53,672 INFO sqlalchemy.engine.base.Engine Thread-209 : ('philip', 1, 1)
2020-06-16 00:36:53,672 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:53,673 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:53,676 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:36:53,676 INFO sqlalchemy.engine.base.Engine Thread-209 : ('philip', 1, 1)
2020-06-16 00:36:53,677 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:53,677 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:53,679 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-06-16 00:36:54,000 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-06-16 00:36:54,001 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:54,002 INFO sqlalchemy.engine.base.Engine Thread-219 : (1, 1)
2020-06-16 00:36:54,002 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:54,003 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:54,006 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-06-16 00:36:54,007 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:54,007 INFO sqlalchemy.engine.base.Engine Thread-220 : (1, 1)
2020-06-16 00:36:54,009 INFO sqlalchemy.engine.base.Engine Thread-219 : ROLLBACK
2020-06-16 00:36:54,009 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:54,010 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:54,011 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-06-16 00:36:54,014 INFO sqlalchemy.engine.base.Engine Thread-221 : BEGIN (implicit)
2020-06-16 00:36:54,015 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:54,016 INFO sqlalchemy.engine.base.Engine Thread-221 : (1, 1)
2020-06-16 00:36:54,018 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:54,019 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:54,020 INFO sqlalchemy.engine.base.Engine Thread-221 : ROLLBACK
2020-06-16 00:36:54,022 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-06-16 00:36:54,023 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:54,023 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-06-16 00:36:54,024 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:54,024 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:54,025 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-06-16 00:36:54,060 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-06-16 00:36:54,061 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:36:54,061 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-06-16 00:36:54,061 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:36:54,062 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:36:54,063 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-06-16 00:38:20,898 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-06-16 00:38:20,901 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:38:20,901 INFO sqlalchemy.engine.base.Engine Thread-224 : ()
2020-06-16 00:38:20,902 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:38:20,903 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:38:20,903 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:38:20,905 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:38:20,905 INFO sqlalchemy.engine.base.Engine Thread-224 : (100,)
2020-06-16 00:38:20,905 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:38:20,906 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 00:38:20,906 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 00:38:20,906 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 00:38:20,906 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 00:38:20,906 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 00:38:20,908 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:20,908 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-06-16 00:38:20,909 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:20,909 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:20,913 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:38:20,913 INFO sqlalchemy.engine.base.Engine Thread-224 : ('philip', 1, 1)
2020-06-16 00:38:20,914 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:20,915 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:20,916 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-06-16 00:38:21,174 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-06-16 00:38:21,175 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:21,175 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-06-16 00:38:21,176 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:21,176 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:21,177 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-06-16 00:38:21,274 INFO sqlalchemy.engine.base.Engine Thread-235 : BEGIN (implicit)
2020-06-16 00:38:21,275 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:21,275 INFO sqlalchemy.engine.base.Engine Thread-235 : (1, 1)
2020-06-16 00:38:21,277 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:21,278 INFO sqlalchemy.engine.base.Engine Thread-236 : BEGIN (implicit)
2020-06-16 00:38:21,279 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:21,282 INFO sqlalchemy.engine.base.Engine Thread-237 : BEGIN (implicit)
2020-06-16 00:38:21,285 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-06-16 00:38:21,286 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:21,288 INFO sqlalchemy.engine.base.Engine Thread-235 : ROLLBACK
2020-06-16 00:38:21,289 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:21,290 INFO sqlalchemy.engine.base.Engine Thread-237 : (1, 1)
2020-06-16 00:38:21,289 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:21,291 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-06-16 00:38:21,291 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:21,291 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:21,292 INFO sqlalchemy.engine.base.Engine Thread-237 : ROLLBACK
2020-06-16 00:38:21,290 INFO sqlalchemy.engine.base.Engine Thread-236 : (1, 1)
2020-06-16 00:38:21,294 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:21,294 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:21,295 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:21,296 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-06-16 00:38:21,297 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:21,298 INFO sqlalchemy.engine.base.Engine Thread-236 : ROLLBACK
2020-06-16 00:38:22,022 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-06-16 00:38:22,024 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:38:22,024 INFO sqlalchemy.engine.base.Engine Thread-239 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:38:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:38:22,026 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:38:22,026 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:38:22,026 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:38:22,026 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:38:22,026 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:38:22,026 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:38:22,030 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:38:22,031 INFO sqlalchemy.engine.base.Engine Thread-239 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:38:22,031 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:38:22,032 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:38:22,036 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:38:22,036 INFO sqlalchemy.engine.base.Engine Thread-239 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:38:22,037 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:38:22,037 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:38:22,038 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-06-16 00:38:22,065 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-06-16 00:38:22,067 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:38:22,067 INFO sqlalchemy.engine.base.Engine Thread-240 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:38:22,068 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:38:22,068 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:38:22,068 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:38:22,069 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:38:22,069 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:38:22,069 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:38:22,069 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:38:22,073 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:38:22,073 INFO sqlalchemy.engine.base.Engine Thread-240 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:38:22,074 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:38:22,074 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:38:22,078 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:38:22,078 INFO sqlalchemy.engine.base.Engine Thread-240 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:38:22,079 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:38:22,079 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:38:22,080 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-06-16 00:38:22,113 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-06-16 00:38:22,113 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,114 INFO sqlalchemy.engine.base.Engine Thread-241 : (1, 1)
2020-06-16 00:38:22,114 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,114 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,122 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-06-16 00:38:22,123 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,124 INFO sqlalchemy.engine.base.Engine Thread-242 : (1, 1)
2020-06-16 00:38:22,129 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,131 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,131 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,134 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-06-16 00:38:22,134 INFO sqlalchemy.engine.base.Engine Thread-241 : (15, 1)
2020-06-16 00:38:22,141 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,141 INFO sqlalchemy.engine.base.Engine Thread-243 : (1, 1)
2020-06-16 00:38:22,146 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,148 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-06-16 00:38:22,149 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,149 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:38:22,149 INFO sqlalchemy.engine.base.Engine Thread-242 : (19, 1)
2020-06-16 00:38:22,150 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,156 INFO sqlalchemy.engine.base.Engine Thread-244 : (1, 1)
2020-06-16 00:38:22,153 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,152 INFO sqlalchemy.engine.base.Engine Thread-245 : BEGIN (implicit)
2020-06-16 00:38:22,169 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,169 INFO sqlalchemy.engine.base.Engine Thread-245 : (1, 1)
2020-06-16 00:38:22,156 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:38:22,163 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:38:22,162 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,155 INFO sqlalchemy.engine.base.Engine Thread-246 : BEGIN (implicit)
2020-06-16 00:38:22,187 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,170 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:38:22,186 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,187 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,205 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,188 INFO sqlalchemy.engine.base.Engine Thread-246 : (1, 1)
2020-06-16 00:38:22,168 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,222 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,235 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,247 INFO sqlalchemy.engine.base.Engine Thread-244 : (21, 1)
2020-06-16 00:38:22,243 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,245 INFO sqlalchemy.engine.base.Engine Thread-245 : (22, 1)
2020-06-16 00:38:22,245 INFO sqlalchemy.engine.base.Engine Thread-243 : (20, 1)
2020-06-16 00:38:22,252 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,253 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:38:22,255 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:38:22,268 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:38:22,269 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,270 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:38:22,271 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:38:22,280 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 0, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:38:22,282 INFO sqlalchemy.engine.base.Engine Thread-246 : (23, 1)
2020-06-16 00:38:22,295 INFO sqlalchemy.engine.base.Engine Thread-245 : ROLLBACK
2020-06-16 00:38:22,295 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-06-16 00:38:22,297 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:38:22,301 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:38:22,302 INFO sqlalchemy.engine.base.Engine Thread-246 : ROLLBACK
2020-06-16 00:38:22,313 INFO sqlalchemy.engine.base.Engine Thread-247 : BEGIN (implicit)
2020-06-16 00:38:22,314 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,317 INFO sqlalchemy.engine.base.Engine Thread-247 : (1, 1)
2020-06-16 00:38:22,318 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,318 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,331 INFO sqlalchemy.engine.base.Engine Thread-248 : BEGIN (implicit)
2020-06-16 00:38:22,332 INFO sqlalchemy.engine.base.Engine Thread-248 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:22,359 INFO sqlalchemy.engine.base.Engine Thread-248 : (1, 1)
2020-06-16 00:38:22,358 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,361 INFO sqlalchemy.engine.base.Engine Thread-247 : (31, 1)
2020-06-16 00:38:22,362 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:38:22,361 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:22,366 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:22,365 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:38:22,394 INFO sqlalchemy.engine.base.Engine Thread-248 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:38:22,394 INFO sqlalchemy.engine.base.Engine Thread-247 : ROLLBACK
2020-06-16 00:38:22,395 INFO sqlalchemy.engine.base.Engine Thread-248 : (30, 1)
2020-06-16 00:38:22,398 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:38:22,400 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:38:22,401 INFO sqlalchemy.engine.base.Engine Thread-248 : ROLLBACK
2020-06-16 00:38:26,936 INFO sqlalchemy.engine.base.Engine Thread-249 : ROLLBACK
2020-06-16 00:38:26,939 INFO sqlalchemy.engine.base.Engine Thread-249 : BEGIN (implicit)
2020-06-16 00:38:26,940 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:38:26,940 INFO sqlalchemy.engine.base.Engine Thread-249 : (1, 1)
2020-06-16 00:38:26,941 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:38:26,941 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:38:26,950 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:38:26,950 INFO sqlalchemy.engine.base.Engine Thread-249 : (15,)
2020-06-16 00:38:26,951 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:38:26,952 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:38:26,975 INFO sqlalchemy.engine.base.Engine Thread-249 : ROLLBACK
2020-06-16 00:39:23,217 INFO sqlalchemy.engine.base.Engine Thread-250 : BEGIN (implicit)
2020-06-16 00:39:23,220 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:39:23,220 INFO sqlalchemy.engine.base.Engine Thread-250 : ()
2020-06-16 00:39:23,221 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:39:23,222 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:39:23,222 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:39:23,224 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:39:23,224 INFO sqlalchemy.engine.base.Engine Thread-250 : (100,)
2020-06-16 00:39:23,224 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:39:23,225 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 00:39:23,225 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 00:39:23,225 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 00:39:23,225 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 00:39:23,225 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 00:39:23,227 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:23,227 INFO sqlalchemy.engine.base.Engine Thread-250 : (1, 1)
2020-06-16 00:39:23,228 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:23,228 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:23,232 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:39:23,232 INFO sqlalchemy.engine.base.Engine Thread-250 : ('philip', 1, 1)
2020-06-16 00:39:23,233 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:23,233 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:23,235 INFO sqlalchemy.engine.base.Engine Thread-250 : ROLLBACK
2020-06-16 00:39:23,516 INFO sqlalchemy.engine.base.Engine Thread-261 : BEGIN (implicit)
2020-06-16 00:39:23,517 INFO sqlalchemy.engine.base.Engine Thread-261 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:23,518 INFO sqlalchemy.engine.base.Engine Thread-261 : (1, 1)
2020-06-16 00:39:23,519 INFO sqlalchemy.engine.base.Engine Thread-262 : ROLLBACK
2020-06-16 00:39:23,520 INFO sqlalchemy.engine.base.Engine Thread-263 : ROLLBACK
2020-06-16 00:39:23,520 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:23,522 INFO sqlalchemy.engine.base.Engine Thread-260 : BEGIN (implicit)
2020-06-16 00:39:23,527 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:23,527 INFO sqlalchemy.engine.base.Engine Thread-260 : (1, 1)
2020-06-16 00:39:23,526 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:23,529 INFO sqlalchemy.engine.base.Engine Thread-261 : ROLLBACK
2020-06-16 00:39:23,524 INFO sqlalchemy.engine.base.Engine Thread-262 : BEGIN (implicit)
2020-06-16 00:39:23,530 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:23,531 INFO sqlalchemy.engine.base.Engine Thread-262 : (1, 1)
2020-06-16 00:39:23,532 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:23,533 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:23,534 INFO sqlalchemy.engine.base.Engine Thread-260 : ROLLBACK
2020-06-16 00:39:23,535 INFO sqlalchemy.engine.base.Engine Thread-263 : BEGIN (implicit)
2020-06-16 00:39:23,536 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:23,537 INFO sqlalchemy.engine.base.Engine Thread-263 : (1, 1)
2020-06-16 00:39:23,537 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:23,538 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:23,538 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:23,539 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:23,540 INFO sqlalchemy.engine.base.Engine Thread-263 : ROLLBACK
2020-06-16 00:39:23,541 INFO sqlalchemy.engine.base.Engine Thread-262 : ROLLBACK
2020-06-16 00:39:23,561 INFO sqlalchemy.engine.base.Engine Thread-264 : BEGIN (implicit)
2020-06-16 00:39:23,562 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:23,562 INFO sqlalchemy.engine.base.Engine Thread-264 : (1, 1)
2020-06-16 00:39:23,563 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:23,563 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:23,564 INFO sqlalchemy.engine.base.Engine Thread-264 : ROLLBACK
2020-06-16 00:39:24,333 INFO sqlalchemy.engine.base.Engine Thread-265 : BEGIN (implicit)
2020-06-16 00:39:24,335 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:39:24,335 INFO sqlalchemy.engine.base.Engine Thread-265 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:24,337 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:39:24,337 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:39:24,337 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:39:24,337 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:39:24,337 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:39:24,337 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:24,337 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:24,342 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:39:24,343 INFO sqlalchemy.engine.base.Engine Thread-265 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:24,344 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:24,344 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:39:24,348 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:39:24,348 INFO sqlalchemy.engine.base.Engine Thread-265 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:24,349 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:24,350 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:39:24,351 INFO sqlalchemy.engine.base.Engine Thread-265 : ROLLBACK
2020-06-16 00:39:24,380 INFO sqlalchemy.engine.base.Engine Thread-266 : BEGIN (implicit)
2020-06-16 00:39:24,382 INFO sqlalchemy.engine.base.Engine Thread-266 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:39:24,382 INFO sqlalchemy.engine.base.Engine Thread-266 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:24,383 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:39:24,384 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:39:24,384 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:39:24,384 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:39:24,384 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:39:24,384 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:24,384 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:24,389 INFO sqlalchemy.engine.base.Engine Thread-266 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:39:24,389 INFO sqlalchemy.engine.base.Engine Thread-266 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:24,390 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:24,390 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:39:24,395 INFO sqlalchemy.engine.base.Engine Thread-266 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:39:24,395 INFO sqlalchemy.engine.base.Engine Thread-266 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:24,395 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:24,396 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:39:24,397 INFO sqlalchemy.engine.base.Engine Thread-266 : ROLLBACK
2020-06-16 00:39:24,432 INFO sqlalchemy.engine.base.Engine Thread-268 : BEGIN (implicit)
2020-06-16 00:39:24,433 INFO sqlalchemy.engine.base.Engine Thread-269 : BEGIN (implicit)
2020-06-16 00:39:24,436 INFO sqlalchemy.engine.base.Engine Thread-270 : BEGIN (implicit)
2020-06-16 00:39:24,442 INFO sqlalchemy.engine.base.Engine Thread-270 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,441 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,437 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,443 INFO sqlalchemy.engine.base.Engine Thread-270 : (1, 1)
2020-06-16 00:39:24,444 INFO sqlalchemy.engine.base.Engine Thread-271 : BEGIN (implicit)
2020-06-16 00:39:24,446 INFO sqlalchemy.engine.base.Engine Thread-272 : BEGIN (implicit)
2020-06-16 00:39:24,449 INFO sqlalchemy.engine.base.Engine Thread-273 : BEGIN (implicit)
2020-06-16 00:39:24,449 INFO sqlalchemy.engine.base.Engine Thread-269 : (1, 1)
2020-06-16 00:39:24,449 INFO sqlalchemy.engine.base.Engine Thread-268 : (1, 1)
2020-06-16 00:39:24,450 INFO sqlalchemy.engine.base.Engine Thread-271 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,453 INFO sqlalchemy.engine.base.Engine Thread-271 : (1, 1)
2020-06-16 00:39:24,452 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,453 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,451 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,454 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,506 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:24,454 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,519 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:24,454 INFO sqlalchemy.engine.base.Engine Thread-272 : (1, 1)
2020-06-16 00:39:24,505 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:24,454 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,516 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:24,549 INFO sqlalchemy.engine.base.Engine Thread-268 : (15, 1)
2020-06-16 00:39:24,530 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:24,544 INFO sqlalchemy.engine.base.Engine Thread-270 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:24,549 INFO sqlalchemy.engine.base.Engine Thread-270 : (20, 1)
2020-06-16 00:39:24,547 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:24,455 INFO sqlalchemy.engine.base.Engine Thread-273 : (1, 1)
2020-06-16 00:39:24,549 INFO sqlalchemy.engine.base.Engine Thread-269 : (19, 1)
2020-06-16 00:39:24,545 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,561 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:24,556 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,561 INFO sqlalchemy.engine.base.Engine Thread-271 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:24,561 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:24,574 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:39:24,555 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:24,572 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:24,572 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:24,573 INFO sqlalchemy.engine.base.Engine Thread-271 : (21, 1)
2020-06-16 00:39:24,571 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:24,611 INFO sqlalchemy.engine.base.Engine Thread-272 : (22, 1)
2020-06-16 00:39:24,582 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 0, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:39:24,601 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:39:24,606 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:24,613 INFO sqlalchemy.engine.base.Engine Thread-273 : (23, 1)
2020-06-16 00:39:24,612 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:24,613 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:24,615 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:39:24,621 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:39:24,650 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:24,651 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:39:24,905 INFO sqlalchemy.engine.base.Engine Thread-274 : ROLLBACK
2020-06-16 00:39:24,910 INFO sqlalchemy.engine.base.Engine Thread-274 : BEGIN (implicit)
2020-06-16 00:39:24,911 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,911 INFO sqlalchemy.engine.base.Engine Thread-274 : (1, 1)
2020-06-16 00:39:24,915 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,917 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:24,916 INFO sqlalchemy.engine.base.Engine Thread-275 : ROLLBACK
2020-06-16 00:39:24,951 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:39:24,951 INFO sqlalchemy.engine.base.Engine Thread-274 : (31, 1)
2020-06-16 00:39:24,969 INFO sqlalchemy.engine.base.Engine Thread-275 : BEGIN (implicit)
2020-06-16 00:39:24,970 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:24,970 INFO sqlalchemy.engine.base.Engine Thread-275 : (1, 1)
2020-06-16 00:39:24,972 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:39:24,975 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:39:24,975 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:24,979 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:25,019 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:39:25,021 INFO sqlalchemy.engine.base.Engine Thread-275 : (30, 1)
2020-06-16 00:39:25,025 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:39:25,034 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:39:38,812 INFO sqlalchemy.engine.base.Engine Thread-276 : ROLLBACK
2020-06-16 00:39:38,819 INFO sqlalchemy.engine.base.Engine Thread-276 : BEGIN (implicit)
2020-06-16 00:39:38,821 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:39:38,821 INFO sqlalchemy.engine.base.Engine Thread-276 : ()
2020-06-16 00:39:38,823 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:39:38,823 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:39:38,823 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:39:38,825 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 00:39:38,825 INFO sqlalchemy.engine.base.Engine Thread-276 : (100,)
2020-06-16 00:39:38,825 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 00:39:38,826 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 00:39:38,826 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 00:39:38,826 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 00:39:38,826 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 00:39:38,826 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 00:39:38,828 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:38,828 INFO sqlalchemy.engine.base.Engine Thread-276 : (1, 1)
2020-06-16 00:39:38,829 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:38,829 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:38,833 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 00:39:38,833 INFO sqlalchemy.engine.base.Engine Thread-276 : ('philip', 1, 1)
2020-06-16 00:39:38,834 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:38,834 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:38,836 INFO sqlalchemy.engine.base.Engine Thread-276 : ROLLBACK
2020-06-16 00:39:38,884 INFO sqlalchemy.engine.base.Engine Thread-278 : ROLLBACK
2020-06-16 00:39:38,885 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-06-16 00:39:38,887 INFO sqlalchemy.engine.base.Engine Thread-280 : ROLLBACK
2020-06-16 00:39:38,890 INFO sqlalchemy.engine.base.Engine Thread-281 : ROLLBACK
2020-06-16 00:39:38,895 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-06-16 00:39:39,116 INFO sqlalchemy.engine.base.Engine Thread-286 : BEGIN (implicit)
2020-06-16 00:39:39,117 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,117 INFO sqlalchemy.engine.base.Engine Thread-286 : (1, 1)
2020-06-16 00:39:39,120 INFO sqlalchemy.engine.base.Engine Thread-287 : BEGIN (implicit)
2020-06-16 00:39:39,121 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:39,122 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,122 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:39,130 INFO sqlalchemy.engine.base.Engine Thread-286 : ROLLBACK
2020-06-16 00:39:39,125 INFO sqlalchemy.engine.base.Engine Thread-288 : BEGIN (implicit)
2020-06-16 00:39:39,129 INFO sqlalchemy.engine.base.Engine Thread-287 : (1, 1)
2020-06-16 00:39:39,131 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,132 INFO sqlalchemy.engine.base.Engine Thread-288 : (1, 1)
2020-06-16 00:39:39,128 INFO sqlalchemy.engine.base.Engine Thread-289 : BEGIN (implicit)
2020-06-16 00:39:39,133 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,133 INFO sqlalchemy.engine.base.Engine Thread-289 : (1, 1)
2020-06-16 00:39:39,134 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:39,134 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:39,136 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:39,135 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:39,135 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:39,137 INFO sqlalchemy.engine.base.Engine Thread-288 : ROLLBACK
2020-06-16 00:39:39,138 INFO sqlalchemy.engine.base.Engine Thread-287 : ROLLBACK
2020-06-16 00:39:39,138 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:39,141 INFO sqlalchemy.engine.base.Engine Thread-289 : ROLLBACK
2020-06-16 00:39:39,169 INFO sqlalchemy.engine.base.Engine Thread-290 : BEGIN (implicit)
2020-06-16 00:39:39,170 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,170 INFO sqlalchemy.engine.base.Engine Thread-290 : (1, 1)
2020-06-16 00:39:39,171 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:39,171 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:39,172 INFO sqlalchemy.engine.base.Engine Thread-290 : ROLLBACK
2020-06-16 00:39:39,859 INFO sqlalchemy.engine.base.Engine Thread-291 : BEGIN (implicit)
2020-06-16 00:39:39,868 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:39:39,868 INFO sqlalchemy.engine.base.Engine Thread-291 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:39,870 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:39:39,870 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:39:39,870 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:39:39,870 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:39:39,870 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:39:39,870 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:39,871 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:39,875 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:39:39,875 INFO sqlalchemy.engine.base.Engine Thread-291 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:39,876 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:39,876 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:39:39,880 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:39:39,880 INFO sqlalchemy.engine.base.Engine Thread-291 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:39,881 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:39,881 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:39:39,882 INFO sqlalchemy.engine.base.Engine Thread-291 : ROLLBACK
2020-06-16 00:39:39,912 INFO sqlalchemy.engine.base.Engine Thread-292 : BEGIN (implicit)
2020-06-16 00:39:39,914 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:39:39,914 INFO sqlalchemy.engine.base.Engine Thread-292 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:39,916 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:39:39,916 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:39:39,916 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:39:39,916 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:39:39,916 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:39:39,917 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:39,917 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:39:39,921 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:39:39,921 INFO sqlalchemy.engine.base.Engine Thread-292 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:39,922 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:39,922 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:39:39,926 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:39:39,927 INFO sqlalchemy.engine.base.Engine Thread-292 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:39:39,927 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:39:39,928 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:39:39,929 INFO sqlalchemy.engine.base.Engine Thread-292 : ROLLBACK
2020-06-16 00:39:39,957 INFO sqlalchemy.engine.base.Engine Thread-294 : BEGIN (implicit)
2020-06-16 00:39:39,959 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,959 INFO sqlalchemy.engine.base.Engine Thread-294 : (1, 1)
2020-06-16 00:39:39,959 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:39,960 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:39,971 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:39,971 INFO sqlalchemy.engine.base.Engine Thread-294 : (15, 1)
2020-06-16 00:39:39,974 INFO sqlalchemy.engine.base.Engine Thread-295 : BEGIN (implicit)
2020-06-16 00:39:39,976 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,976 INFO sqlalchemy.engine.base.Engine Thread-295 : (1, 1)
2020-06-16 00:39:39,977 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:39,977 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:39,978 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:39:39,981 INFO sqlalchemy.engine.base.Engine Thread-296 : BEGIN (implicit)
2020-06-16 00:39:39,984 INFO sqlalchemy.engine.base.Engine Thread-297 : BEGIN (implicit)
2020-06-16 00:39:39,984 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:39,986 INFO sqlalchemy.engine.base.Engine Thread-296 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:39,999 INFO sqlalchemy.engine.base.Engine Thread-297 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:40,023 INFO sqlalchemy.engine.base.Engine Thread-297 : (1, 1)
2020-06-16 00:39:40,016 INFO sqlalchemy.engine.base.Engine Thread-296 : (1, 1)
2020-06-16 00:39:40,017 INFO sqlalchemy.engine.base.Engine Thread-294 : ROLLBACK
2020-06-16 00:39:40,022 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:40,027 INFO sqlalchemy.engine.base.Engine Thread-295 : (19, 1)
2020-06-16 00:39:40,025 INFO sqlalchemy.engine.base.Engine Thread-299 : BEGIN (implicit)
2020-06-16 00:39:40,001 INFO sqlalchemy.engine.base.Engine Thread-298 : BEGIN (implicit)
2020-06-16 00:39:40,026 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:40,026 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:40,028 INFO sqlalchemy.engine.base.Engine Thread-299 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:40,029 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:40,031 INFO sqlalchemy.engine.base.Engine Thread-298 : (1, 1)
2020-06-16 00:39:40,030 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:40,031 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:40,031 INFO sqlalchemy.engine.base.Engine Thread-299 : (1, 1)
2020-06-16 00:39:40,030 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:40,037 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:40,046 INFO sqlalchemy.engine.base.Engine Thread-296 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:40,048 INFO sqlalchemy.engine.base.Engine Thread-300 : BEGIN (implicit)
2020-06-16 00:39:40,060 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:39:40,060 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:40,061 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:40,061 INFO sqlalchemy.engine.base.Engine Thread-297 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:40,061 INFO sqlalchemy.engine.base.Engine Thread-296 : (20, 1)
2020-06-16 00:39:40,062 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:40,074 INFO sqlalchemy.engine.base.Engine Thread-300 : (1, 1)
2020-06-16 00:39:40,063 INFO sqlalchemy.engine.base.Engine Thread-295 : ROLLBACK
2020-06-16 00:39:40,064 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:40,074 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:40,074 INFO sqlalchemy.engine.base.Engine Thread-297 : (21, 1)
2020-06-16 00:39:40,086 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:40,088 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:40,087 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:40,100 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 0, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:39:40,088 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:40,086 INFO sqlalchemy.engine.base.Engine Thread-298 : (22, 1)
2020-06-16 00:39:40,088 INFO sqlalchemy.engine.base.Engine Thread-299 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:39:40,108 INFO sqlalchemy.engine.base.Engine Thread-299 : (23, 1)
2020-06-16 00:39:40,107 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:39:40,107 INFO sqlalchemy.engine.base.Engine Thread-296 : ROLLBACK
2020-06-16 00:39:40,117 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:39:40,118 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:40,120 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:39:40,119 INFO sqlalchemy.engine.base.Engine Thread-300 : (31, 1)
2020-06-16 00:39:40,118 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:39:40,121 INFO sqlalchemy.engine.base.Engine Thread-298 : ROLLBACK
2020-06-16 00:39:40,122 INFO sqlalchemy.engine.base.Engine Thread-297 : ROLLBACK
2020-06-16 00:39:40,124 INFO sqlalchemy.engine.base.Engine Thread-301 : BEGIN (implicit)
2020-06-16 00:39:40,128 INFO sqlalchemy.engine.base.Engine Thread-301 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:39:40,126 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:39:40,128 INFO sqlalchemy.engine.base.Engine Thread-301 : (1, 1)
2020-06-16 00:39:40,130 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:39:40,134 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:39:40,135 INFO sqlalchemy.engine.base.Engine Thread-299 : ROLLBACK
2020-06-16 00:39:40,136 INFO sqlalchemy.engine.base.Engine Thread-300 : ROLLBACK
2020-06-16 00:39:40,137 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:39:40,137 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:39:40,163 INFO sqlalchemy.engine.base.Engine Thread-301 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:39:40,163 INFO sqlalchemy.engine.base.Engine Thread-301 : (30, 1)
2020-06-16 00:39:40,165 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:39:40,167 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:39:40,168 INFO sqlalchemy.engine.base.Engine Thread-301 : ROLLBACK
2020-06-16 00:40:05,720 INFO sqlalchemy.engine.base.Engine Thread-302 : BEGIN (implicit)
2020-06-16 00:40:05,721 INFO sqlalchemy.engine.base.Engine Thread-302 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:05,721 INFO sqlalchemy.engine.base.Engine Thread-302 : (1, 1)
2020-06-16 00:40:05,723 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:05,723 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:05,731 INFO sqlalchemy.engine.base.Engine Thread-302 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:05,731 INFO sqlalchemy.engine.base.Engine Thread-302 : (23,)
2020-06-16 00:40:05,732 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:40:05,733 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:40:05,734 INFO sqlalchemy.engine.base.Engine Thread-302 : ROLLBACK
2020-06-16 00:40:05,751 INFO sqlalchemy.engine.base.Engine Thread-303 : BEGIN (implicit)
2020-06-16 00:40:05,752 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:05,752 INFO sqlalchemy.engine.base.Engine Thread-303 : (1, 1)
2020-06-16 00:40:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:05,757 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:05,757 INFO sqlalchemy.engine.base.Engine Thread-303 : (23,)
2020-06-16 00:40:05,758 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:40:05,758 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-16 00:40:05,763 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:40:05,763 INFO sqlalchemy.engine.base.Engine Thread-303 : (23,)
2020-06-16 00:40:05,763 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:40:05,765 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:40:05,766 INFO sqlalchemy.engine.base.Engine Thread-303 : ()
2020-06-16 00:40:05,766 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:40:05,766 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:40:05,766 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:40:05,769 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:40:05,769 INFO sqlalchemy.engine.base.Engine Thread-303 : ()
2020-06-16 00:40:05,771 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:40:05,771 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:05,771 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:05,774 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:05,774 INFO sqlalchemy.engine.base.Engine Thread-303 : (23,)
2020-06-16 00:40:05,774 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:40:05,774 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (2, 'Zone 5 Complexes')
2020-06-16 00:40:05,775 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:40:05,775 INFO sqlalchemy.engine.base.Engine Thread-303 : (2,)
2020-06-16 00:40:05,776 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('complexgroups_1_group_members',)
2020-06-16 00:40:05,776 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row ('1,2',)
2020-06-16 00:40:05,781 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 00:40:05,781 INFO sqlalchemy.engine.base.Engine Thread-303 : ('1', '2')
2020-06-16 00:40:05,782 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:40:05,782 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:40:05,782 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (2, 'Made Up Fortigate')
2020-06-16 00:40:05,783 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:40:05,783 INFO sqlalchemy.engine.base.Engine Thread-303 : (2, 1)
2020-06-16 00:40:05,790 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:40:05,790 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (2,)
2020-06-16 00:40:05,792 INFO sqlalchemy.engine.base.Engine Thread-303 : ROLLBACK
2020-06-16 00:40:10,486 INFO sqlalchemy.engine.base.Engine Thread-304 : BEGIN (implicit)
2020-06-16 00:40:10,487 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:10,487 INFO sqlalchemy.engine.base.Engine Thread-304 : (1, 1)
2020-06-16 00:40:10,487 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:10,488 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:10,496 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:10,496 INFO sqlalchemy.engine.base.Engine Thread-304 : (20,)
2020-06-16 00:40:10,496 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:40:10,497 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:40:10,498 INFO sqlalchemy.engine.base.Engine Thread-304 : ROLLBACK
2020-06-16 00:40:10,514 INFO sqlalchemy.engine.base.Engine Thread-305 : BEGIN (implicit)
2020-06-16 00:40:10,515 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:10,515 INFO sqlalchemy.engine.base.Engine Thread-305 : (1, 1)
2020-06-16 00:40:10,516 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:10,516 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:10,519 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:10,519 INFO sqlalchemy.engine.base.Engine Thread-305 : (20,)
2020-06-16 00:40:10,520 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:40:10,520 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:40:10,524 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:40:10,524 INFO sqlalchemy.engine.base.Engine Thread-305 : (20,)
2020-06-16 00:40:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:40:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:40:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:40:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:40:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:40:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:40:10,527 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:40:10,527 INFO sqlalchemy.engine.base.Engine Thread-305 : ()
2020-06-16 00:40:10,527 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:40:10,528 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:40:10,528 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:40:10,530 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:40:10,531 INFO sqlalchemy.engine.base.Engine Thread-305 : ()
2020-06-16 00:40:10,531 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:40:10,532 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:10,532 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:10,534 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:10,534 INFO sqlalchemy.engine.base.Engine Thread-305 : (20,)
2020-06-16 00:40:10,535 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:40:10,535 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:40:10,536 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:40:10,536 INFO sqlalchemy.engine.base.Engine Thread-305 : (1,)
2020-06-16 00:40:10,537 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('complexgroups_1_group_members',)
2020-06-16 00:40:10,537 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row ('1',)
2020-06-16 00:40:10,542 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:40:10,542 INFO sqlalchemy.engine.base.Engine Thread-305 : ('1',)
2020-06-16 00:40:10,542 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:40:10,543 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:40:10,544 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:40:10,544 INFO sqlalchemy.engine.base.Engine Thread-305 : (1, 1)
2020-06-16 00:40:10,544 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:40:10,544 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (5,)
2020-06-16 00:40:10,545 INFO sqlalchemy.engine.base.Engine Thread-305 : ROLLBACK
2020-06-16 00:40:26,876 INFO sqlalchemy.engine.base.Engine Thread-306 : BEGIN (implicit)
2020-06-16 00:40:26,878 INFO sqlalchemy.engine.base.Engine Thread-306 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:40:26,878 INFO sqlalchemy.engine.base.Engine Thread-306 : ('DATE', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:40:26,880 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:40:26,880 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Row (9, datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:40:26,880 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Row (10, datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:40:26,880 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Row (18, datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-16 00:40:26,885 INFO sqlalchemy.engine.base.Engine Thread-306 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:40:26,885 INFO sqlalchemy.engine.base.Engine Thread-306 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:40:26,886 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:26,891 INFO sqlalchemy.engine.base.Engine Thread-306 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:40:26,891 INFO sqlalchemy.engine.base.Engine Thread-306 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:40:26,892 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:26,892 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Row (9, datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Bob', 'testing', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:40:26,893 INFO sqlalchemy.engine.base.Engine Thread-306 : ROLLBACK
2020-06-16 00:40:26,917 INFO sqlalchemy.engine.base.Engine Thread-308 : BEGIN (implicit)
2020-06-16 00:40:26,919 INFO sqlalchemy.engine.base.Engine Thread-307 : BEGIN (implicit)
2020-06-16 00:40:26,920 INFO sqlalchemy.engine.base.Engine Thread-308 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:26,925 INFO sqlalchemy.engine.base.Engine Thread-308 : (1, 1)
2020-06-16 00:40:26,924 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:26,925 INFO sqlalchemy.engine.base.Engine Thread-307 : (1, 1)
2020-06-16 00:40:26,923 INFO sqlalchemy.engine.base.Engine Thread-309 : BEGIN (implicit)
2020-06-16 00:40:26,925 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:26,927 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:26,927 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:26,927 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:26,930 INFO sqlalchemy.engine.base.Engine Thread-310 : BEGIN (implicit)
2020-06-16 00:40:26,930 INFO sqlalchemy.engine.base.Engine Thread-309 : (1, 1)
2020-06-16 00:40:26,931 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:26,942 INFO sqlalchemy.engine.base.Engine Thread-310 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:26,954 INFO sqlalchemy.engine.base.Engine Thread-310 : (1, 1)
2020-06-16 00:40:26,949 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:26,954 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:26,954 INFO sqlalchemy.engine.base.Engine Thread-307 : (9, 1)
2020-06-16 00:40:26,954 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:26,943 INFO sqlalchemy.engine.base.Engine Thread-308 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:26,960 INFO sqlalchemy.engine.base.Engine Thread-308 : (10, 1)
2020-06-16 00:40:26,966 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:26,966 INFO sqlalchemy.engine.base.Engine Thread-309 : (18, 1)
2020-06-16 00:40:26,966 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:26,967 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:26,967 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:26,968 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:26,996 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:26,997 INFO sqlalchemy.engine.base.Engine Thread-308 : ROLLBACK
2020-06-16 00:40:26,996 INFO sqlalchemy.engine.base.Engine Thread-310 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:26,973 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:26,999 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:26,998 INFO sqlalchemy.engine.base.Engine Thread-310 : (9, 1)
2020-06-16 00:40:26,980 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:40:27,001 INFO sqlalchemy.engine.base.Engine Thread-309 : ROLLBACK
2020-06-16 00:40:27,000 INFO sqlalchemy.engine.base.Engine Thread-307 : ROLLBACK
2020-06-16 00:40:27,002 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:27,006 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:27,007 INFO sqlalchemy.engine.base.Engine Thread-310 : ROLLBACK
2020-06-16 00:40:32,524 INFO sqlalchemy.engine.base.Engine Thread-311 : BEGIN (implicit)
2020-06-16 00:40:32,525 INFO sqlalchemy.engine.base.Engine Thread-311 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:32,525 INFO sqlalchemy.engine.base.Engine Thread-311 : (1, 1)
2020-06-16 00:40:32,525 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:32,526 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:32,535 INFO sqlalchemy.engine.base.Engine Thread-311 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:32,535 INFO sqlalchemy.engine.base.Engine Thread-311 : (18,)
2020-06-16 00:40:32,535 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:40:32,536 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:40:32,537 INFO sqlalchemy.engine.base.Engine Thread-311 : ROLLBACK
2020-06-16 00:40:32,553 INFO sqlalchemy.engine.base.Engine Thread-312 : BEGIN (implicit)
2020-06-16 00:40:32,554 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:32,554 INFO sqlalchemy.engine.base.Engine Thread-312 : (1, 1)
2020-06-16 00:40:32,555 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:32,555 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:32,559 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:32,559 INFO sqlalchemy.engine.base.Engine Thread-312 : (18,)
2020-06-16 00:40:32,560 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:40:32,560 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (18, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 131)
2020-06-16 00:40:32,564 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:40:32,565 INFO sqlalchemy.engine.base.Engine Thread-312 : (18,)
2020-06-16 00:40:32,565 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:40:32,567 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:40:32,567 INFO sqlalchemy.engine.base.Engine Thread-312 : ()
2020-06-16 00:40:32,568 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:40:32,568 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:40:32,568 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:40:32,571 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:40:32,571 INFO sqlalchemy.engine.base.Engine Thread-312 : ()
2020-06-16 00:40:32,573 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:40:32,573 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:32,573 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:32,576 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:32,576 INFO sqlalchemy.engine.base.Engine Thread-312 : (18,)
2020-06-16 00:40:32,576 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:40:32,577 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:40:32,578 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:40:32,578 INFO sqlalchemy.engine.base.Engine Thread-312 : (1,)
2020-06-16 00:40:32,578 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('complexgroups_1_group_members',)
2020-06-16 00:40:32,578 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row ('1',)
2020-06-16 00:40:32,583 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:40:32,583 INFO sqlalchemy.engine.base.Engine Thread-312 : ('1',)
2020-06-16 00:40:32,584 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:40:32,584 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:40:32,585 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:40:32,585 INFO sqlalchemy.engine.base.Engine Thread-312 : (1, 1)
2020-06-16 00:40:32,586 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:40:32,586 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (5,)
2020-06-16 00:40:32,587 INFO sqlalchemy.engine.base.Engine Thread-312 : ROLLBACK
2020-06-16 00:40:39,948 INFO sqlalchemy.engine.base.Engine Thread-313 : BEGIN (implicit)
2020-06-16 00:40:39,949 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:39,949 INFO sqlalchemy.engine.base.Engine Thread-313 : (1, 1)
2020-06-16 00:40:39,950 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:39,950 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:39,959 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:39,959 INFO sqlalchemy.engine.base.Engine Thread-313 : (18,)
2020-06-16 00:40:39,960 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:40:39,961 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:40:39,962 INFO sqlalchemy.engine.base.Engine Thread-313 : ROLLBACK
2020-06-16 00:40:39,976 INFO sqlalchemy.engine.base.Engine Thread-314 : BEGIN (implicit)
2020-06-16 00:40:39,977 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:39,978 INFO sqlalchemy.engine.base.Engine Thread-314 : (1, 1)
2020-06-16 00:40:39,978 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:39,978 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:39,982 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:39,982 INFO sqlalchemy.engine.base.Engine Thread-314 : (18,)
2020-06-16 00:40:39,983 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:40:39,983 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (18, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 131)
2020-06-16 00:40:39,987 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:40:39,988 INFO sqlalchemy.engine.base.Engine Thread-314 : (18,)
2020-06-16 00:40:39,988 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:40:39,990 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:40:39,990 INFO sqlalchemy.engine.base.Engine Thread-314 : ()
2020-06-16 00:40:39,990 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:40:39,990 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:40:39,990 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:40:39,993 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:40:39,993 INFO sqlalchemy.engine.base.Engine Thread-314 : ()
2020-06-16 00:40:39,994 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:40:39,995 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:39,995 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:39,997 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:40:39,997 INFO sqlalchemy.engine.base.Engine Thread-314 : (18,)
2020-06-16 00:40:39,998 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:40:39,998 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:40:39,999 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:40:39,999 INFO sqlalchemy.engine.base.Engine Thread-314 : (1,)
2020-06-16 00:40:39,999 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('complexgroups_1_group_members',)
2020-06-16 00:40:39,999 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row ('1',)
2020-06-16 00:40:40,005 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:40:40,005 INFO sqlalchemy.engine.base.Engine Thread-314 : ('1',)
2020-06-16 00:40:40,005 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:40:40,005 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:40:40,006 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:40:40,006 INFO sqlalchemy.engine.base.Engine Thread-314 : (1, 1)
2020-06-16 00:40:40,007 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:40:40,007 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (5,)
2020-06-16 00:40:40,008 INFO sqlalchemy.engine.base.Engine Thread-314 : ROLLBACK
2020-06-16 00:40:49,479 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-06-16 00:40:49,481 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:40:49,481 INFO sqlalchemy.engine.base.Engine Thread-315 : ('DATE', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-06-16 00:40:49,484 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-06-16 00:40:49,486 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:49,486 INFO sqlalchemy.engine.base.Engine Thread-316 : (1, 1)
2020-06-16 00:40:49,486 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:40:49,486 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (8, datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:40:49,487 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:49,487 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (9, datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:40:49,487 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:49,492 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:40:49,503 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:49,503 INFO sqlalchemy.engine.base.Engine Thread-315 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-06-16 00:40:49,503 INFO sqlalchemy.engine.base.Engine Thread-316 : (9, 1)
2020-06-16 00:40:49,504 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:49,504 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:49,509 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:40:49,510 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:49,510 INFO sqlalchemy.engine.base.Engine Thread-315 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-06-16 00:40:49,511 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-06-16 00:40:49,511 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:49,512 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-06-16 00:40:49,544 INFO sqlalchemy.engine.base.Engine Thread-317 : BEGIN (implicit)
2020-06-16 00:40:49,546 INFO sqlalchemy.engine.base.Engine Thread-317 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:49,546 INFO sqlalchemy.engine.base.Engine Thread-317 : (1, 1)
2020-06-16 00:40:49,548 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-06-16 00:40:49,549 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:49,549 INFO sqlalchemy.engine.base.Engine Thread-318 : (1, 1)
2020-06-16 00:40:49,550 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:49,550 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:49,551 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:49,551 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:49,567 INFO sqlalchemy.engine.base.Engine Thread-317 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:49,568 INFO sqlalchemy.engine.base.Engine Thread-317 : (8, 1)
2020-06-16 00:40:49,574 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:49,574 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:49,575 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 128, None, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:49,575 INFO sqlalchemy.engine.base.Engine Thread-318 : (9, 1)
2020-06-16 00:40:49,578 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:49,581 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:49,579 INFO sqlalchemy.engine.base.Engine Thread-317 : ROLLBACK
2020-06-16 00:40:49,582 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-06-16 00:40:49,597 INFO sqlalchemy.engine.base.Engine Thread-319 : BEGIN (implicit)
2020-06-16 00:40:49,598 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:49,598 INFO sqlalchemy.engine.base.Engine Thread-319 : (1, 1)
2020-06-16 00:40:49,599 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:49,599 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:49,610 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:49,611 INFO sqlalchemy.engine.base.Engine Thread-319 : (8, 1)
2020-06-16 00:40:49,612 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:49,613 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 128, None, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:49,613 INFO sqlalchemy.engine.base.Engine Thread-319 : ROLLBACK
2020-06-16 00:40:50,300 INFO sqlalchemy.engine.base.Engine Thread-320 : BEGIN (implicit)
2020-06-16 00:40:50,302 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:40:50,302 INFO sqlalchemy.engine.base.Engine Thread-320 : ('DATE', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-06-16 00:40:50,303 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:40:50,303 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (1, datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:40:50,308 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:40:50,308 INFO sqlalchemy.engine.base.Engine Thread-320 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-06-16 00:40:50,308 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:50,309 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (11, datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Bob', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:40:50,309 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (21, datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'Bob', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:40:50,309 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (23, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'Bob', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:40:50,309 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (25, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'Bob', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:40:50,309 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (29, datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'Bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:40:50,314 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:40:50,314 INFO sqlalchemy.engine.base.Engine Thread-320 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-06-16 00:40:50,315 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:50,315 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (7, datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Bob', 'testing', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:40:50,315 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (8, datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Bob', 'testing 2', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:40:50,315 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (22, datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'Bob', 'test b', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:40:50,315 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (26, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'Bob', 'Testing booking #3', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:40:50,315 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (28, datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'Bob', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:40:50,316 INFO sqlalchemy.engine.base.Engine Thread-320 : ROLLBACK
2020-06-16 00:40:50,341 INFO sqlalchemy.engine.base.Engine Thread-321 : BEGIN (implicit)
2020-06-16 00:40:50,343 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,343 INFO sqlalchemy.engine.base.Engine Thread-321 : (1, 1)
2020-06-16 00:40:50,345 INFO sqlalchemy.engine.base.Engine Thread-322 : BEGIN (implicit)
2020-06-16 00:40:50,345 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,346 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,352 INFO sqlalchemy.engine.base.Engine Thread-322 : (1, 1)
2020-06-16 00:40:50,349 INFO sqlalchemy.engine.base.Engine Thread-323 : BEGIN (implicit)
2020-06-16 00:40:50,352 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,351 INFO sqlalchemy.engine.base.Engine Thread-324 : BEGIN (implicit)
2020-06-16 00:40:50,354 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,381 INFO sqlalchemy.engine.base.Engine Thread-323 : (1, 1)
2020-06-16 00:40:50,366 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,382 INFO sqlalchemy.engine.base.Engine Thread-324 : (1, 1)
2020-06-16 00:40:50,373 INFO sqlalchemy.engine.base.Engine Thread-325 : BEGIN (implicit)
2020-06-16 00:40:50,354 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,381 INFO sqlalchemy.engine.base.Engine Thread-326 : BEGIN (implicit)
2020-06-16 00:40:50,386 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,384 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,386 INFO sqlalchemy.engine.base.Engine Thread-321 : (11, 1)
2020-06-16 00:40:50,385 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,386 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,386 INFO sqlalchemy.engine.base.Engine Thread-326 : (1, 1)
2020-06-16 00:40:50,383 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,392 INFO sqlalchemy.engine.base.Engine Thread-325 : (1, 1)
2020-06-16 00:40:50,385 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,392 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,384 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,398 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,403 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,409 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,413 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:50,414 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,414 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,419 INFO sqlalchemy.engine.base.Engine Thread-321 : ROLLBACK
2020-06-16 00:40:50,426 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,426 INFO sqlalchemy.engine.base.Engine Thread-322 : (1, 1)
2020-06-16 00:40:50,452 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:50,453 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical) that is very important', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 128, None, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:50,457 INFO sqlalchemy.engine.base.Engine Thread-327 : BEGIN (implicit)
2020-06-16 00:40:50,458 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,458 INFO sqlalchemy.engine.base.Engine Thread-327 : (1, 1)
2020-06-16 00:40:50,459 INFO sqlalchemy.engine.base.Engine Thread-322 : ROLLBACK
2020-06-16 00:40:50,468 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,468 INFO sqlalchemy.engine.base.Engine Thread-324 : (23, 1)
2020-06-16 00:40:50,483 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,483 INFO sqlalchemy.engine.base.Engine Thread-326 : (29, 1)
2020-06-16 00:40:50,485 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,487 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:50,488 INFO sqlalchemy.engine.base.Engine Thread-326 : ROLLBACK
2020-06-16 00:40:50,489 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,491 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:50,493 INFO sqlalchemy.engine.base.Engine Thread-324 : ROLLBACK
2020-06-16 00:40:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,520 INFO sqlalchemy.engine.base.Engine Thread-328 : BEGIN (implicit)
2020-06-16 00:40:50,526 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,526 INFO sqlalchemy.engine.base.Engine Thread-328 : (1, 1)
2020-06-16 00:40:50,612 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,612 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,635 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,636 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,648 INFO sqlalchemy.engine.base.Engine Thread-329 : BEGIN (implicit)
2020-06-16 00:40:50,659 INFO sqlalchemy.engine.base.Engine Thread-329 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,652 INFO sqlalchemy.engine.base.Engine Thread-325 : (25, 1)
2020-06-16 00:40:50,652 INFO sqlalchemy.engine.base.Engine Thread-323 : (21, 1)
2020-06-16 00:40:50,654 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,657 INFO sqlalchemy.engine.base.Engine Thread-330 : BEGIN (implicit)
2020-06-16 00:40:50,676 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,676 INFO sqlalchemy.engine.base.Engine Thread-330 : (1, 1)
2020-06-16 00:40:50,651 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,676 INFO sqlalchemy.engine.base.Engine Thread-328 : (8, 1)
2020-06-16 00:40:50,675 INFO sqlalchemy.engine.base.Engine Thread-327 : (7, 1)
2020-06-16 00:40:50,667 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,680 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:50,681 INFO sqlalchemy.engine.base.Engine Thread-323 : ROLLBACK
2020-06-16 00:40:50,677 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,677 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,659 INFO sqlalchemy.engine.base.Engine Thread-329 : (1, 1)
2020-06-16 00:40:50,668 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,682 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,683 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,685 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:50,687 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:50,689 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,692 INFO sqlalchemy.engine.base.Engine Thread-331 : BEGIN (implicit)
2020-06-16 00:40:50,699 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:50,711 INFO sqlalchemy.engine.base.Engine Thread-328 : ROLLBACK
2020-06-16 00:40:50,717 INFO sqlalchemy.engine.base.Engine Thread-325 : ROLLBACK
2020-06-16 00:40:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,720 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,738 INFO sqlalchemy.engine.base.Engine Thread-330 : (26, 1)
2020-06-16 00:40:50,722 INFO sqlalchemy.engine.base.Engine Thread-327 : ROLLBACK
2020-06-16 00:40:50,721 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:50,744 INFO sqlalchemy.engine.base.Engine Thread-331 : (1, 1)
2020-06-16 00:40:50,745 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:50,746 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:50,771 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,771 INFO sqlalchemy.engine.base.Engine Thread-331 : (28, 1)
2020-06-16 00:40:50,773 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,775 INFO sqlalchemy.engine.base.Engine Thread-329 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:40:50,779 INFO sqlalchemy.engine.base.Engine Thread-329 : (22, 1)
2020-06-16 00:40:50,779 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:50,776 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,780 INFO sqlalchemy.engine.base.Engine Thread-331 : ROLLBACK
2020-06-16 00:40:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:40:50,786 INFO sqlalchemy.engine.base.Engine Thread-330 : ROLLBACK
2020-06-16 00:40:50,785 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:40:50,789 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:40:50,790 INFO sqlalchemy.engine.base.Engine Thread-329 : ROLLBACK
2020-06-16 00:40:59,123 INFO sqlalchemy.engine.base.Engine Thread-332 : BEGIN (implicit)
2020-06-16 00:40:59,125 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:40:59,125 INFO sqlalchemy.engine.base.Engine Thread-332 : ('DATE', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-06-16 00:40:59,127 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:40:59,127 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (8, datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:40:59,127 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (9, datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:40:59,131 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:40:59,132 INFO sqlalchemy.engine.base.Engine Thread-332 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-06-16 00:40:59,132 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:59,137 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:40:59,137 INFO sqlalchemy.engine.base.Engine Thread-332 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-06-16 00:40:59,138 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:59,139 INFO sqlalchemy.engine.base.Engine Thread-332 : ROLLBACK
2020-06-16 00:40:59,161 INFO sqlalchemy.engine.base.Engine Thread-333 : BEGIN (implicit)
2020-06-16 00:40:59,162 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,162 INFO sqlalchemy.engine.base.Engine Thread-333 : (1, 1)
2020-06-16 00:40:59,165 INFO sqlalchemy.engine.base.Engine Thread-334 : BEGIN (implicit)
2020-06-16 00:40:59,165 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,167 INFO sqlalchemy.engine.base.Engine Thread-334 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,167 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,167 INFO sqlalchemy.engine.base.Engine Thread-334 : (1, 1)
2020-06-16 00:40:59,178 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:59,179 INFO sqlalchemy.engine.base.Engine Thread-333 : (8, 1)
2020-06-16 00:40:59,179 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,179 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,185 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:59,186 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 128, None, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:59,192 INFO sqlalchemy.engine.base.Engine Thread-333 : ROLLBACK
2020-06-16 00:40:59,193 INFO sqlalchemy.engine.base.Engine Thread-334 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:59,194 INFO sqlalchemy.engine.base.Engine Thread-334 : (9, 1)
2020-06-16 00:40:59,195 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:59,196 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:59,197 INFO sqlalchemy.engine.base.Engine Thread-334 : ROLLBACK
2020-06-16 00:40:59,203 INFO sqlalchemy.engine.base.Engine Thread-335 : BEGIN (implicit)
2020-06-16 00:40:59,204 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,204 INFO sqlalchemy.engine.base.Engine Thread-335 : (1, 1)
2020-06-16 00:40:59,204 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,205 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,216 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:59,216 INFO sqlalchemy.engine.base.Engine Thread-335 : (8, 1)
2020-06-16 00:40:59,217 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:59,218 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 128, None, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:59,219 INFO sqlalchemy.engine.base.Engine Thread-335 : ROLLBACK
2020-06-16 00:40:59,862 INFO sqlalchemy.engine.base.Engine Thread-336 : BEGIN (implicit)
2020-06-16 00:40:59,865 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:40:59,865 INFO sqlalchemy.engine.base.Engine Thread-336 : ('DATE', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:40:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:40:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (9, datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:40:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (10, datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:40:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (18, datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-16 00:40:59,871 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:40:59,871 INFO sqlalchemy.engine.base.Engine Thread-336 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:40:59,873 INFO sqlalchemy.engine.base.Engine Thread-337 : BEGIN (implicit)
2020-06-16 00:40:59,874 INFO sqlalchemy.engine.base.Engine Thread-337 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,874 INFO sqlalchemy.engine.base.Engine Thread-337 : (1, 1)
2020-06-16 00:40:59,875 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:59,875 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,879 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:40:59,880 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,880 INFO sqlalchemy.engine.base.Engine Thread-336 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:40:59,890 INFO sqlalchemy.engine.base.Engine Thread-337 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:59,890 INFO sqlalchemy.engine.base.Engine Thread-337 : (9, 1)
2020-06-16 00:40:59,891 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:40:59,891 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:40:59,891 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (9, datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Bob', 'testing', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:40:59,893 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:40:59,894 INFO sqlalchemy.engine.base.Engine Thread-336 : ROLLBACK
2020-06-16 00:40:59,895 INFO sqlalchemy.engine.base.Engine Thread-337 : ROLLBACK
2020-06-16 00:40:59,923 INFO sqlalchemy.engine.base.Engine Thread-340 : BEGIN (implicit)
2020-06-16 00:40:59,924 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,930 INFO sqlalchemy.engine.base.Engine Thread-340 : (1, 1)
2020-06-16 00:40:59,929 INFO sqlalchemy.engine.base.Engine Thread-338 : BEGIN (implicit)
2020-06-16 00:40:59,926 INFO sqlalchemy.engine.base.Engine Thread-339 : BEGIN (implicit)
2020-06-16 00:40:59,936 INFO sqlalchemy.engine.base.Engine Thread-339 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,936 INFO sqlalchemy.engine.base.Engine Thread-339 : (1, 1)
2020-06-16 00:40:59,934 INFO sqlalchemy.engine.base.Engine Thread-338 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,936 INFO sqlalchemy.engine.base.Engine Thread-338 : (1, 1)
2020-06-16 00:40:59,931 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,933 INFO sqlalchemy.engine.base.Engine Thread-341 : BEGIN (implicit)
2020-06-16 00:40:59,937 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,937 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,946 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,944 INFO sqlalchemy.engine.base.Engine Thread-341 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:40:59,957 INFO sqlalchemy.engine.base.Engine Thread-341 : (1, 1)
2020-06-16 00:40:59,937 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,956 INFO sqlalchemy.engine.base.Engine Thread-338 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:59,945 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,962 INFO sqlalchemy.engine.base.Engine Thread-338 : (9, 1)
2020-06-16 00:40:59,963 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:40:59,981 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:40:59,980 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:40:59,998 INFO sqlalchemy.engine.base.Engine Thread-340 : (18, 1)
2020-06-16 00:40:59,998 INFO sqlalchemy.engine.base.Engine Thread-339 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:41:00,005 INFO sqlalchemy.engine.base.Engine Thread-339 : (10, 1)
2020-06-16 00:41:00,004 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:00,005 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:00,007 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:41:00,013 INFO sqlalchemy.engine.base.Engine Thread-338 : ROLLBACK
2020-06-16 00:41:00,011 INFO sqlalchemy.engine.base.Engine Thread-341 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:41:00,014 INFO sqlalchemy.engine.base.Engine Thread-341 : (9, 1)
2020-06-16 00:41:00,007 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:00,012 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:41:00,015 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:41:00,020 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:41:00,017 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:41:00,018 INFO sqlalchemy.engine.base.Engine Thread-340 : ROLLBACK
2020-06-16 00:41:00,021 INFO sqlalchemy.engine.base.Engine Thread-341 : ROLLBACK
2020-06-16 00:41:00,022 INFO sqlalchemy.engine.base.Engine Thread-339 : ROLLBACK
2020-06-16 00:41:02,988 INFO sqlalchemy.engine.base.Engine Thread-342 : BEGIN (implicit)
2020-06-16 00:41:02,990 INFO sqlalchemy.engine.base.Engine Thread-342 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:41:02,990 INFO sqlalchemy.engine.base.Engine Thread-342 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:41:02,992 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:41:02,992 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:41:02,992 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:41:02,993 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:41:02,993 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:41:02,993 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:41:02,993 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:41:02,997 INFO sqlalchemy.engine.base.Engine Thread-342 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:41:02,998 INFO sqlalchemy.engine.base.Engine Thread-342 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:41:02,999 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:41:02,999 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:41:03,003 INFO sqlalchemy.engine.base.Engine Thread-342 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:41:03,003 INFO sqlalchemy.engine.base.Engine Thread-342 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:41:03,004 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:41:03,004 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:41:03,005 INFO sqlalchemy.engine.base.Engine Thread-342 : ROLLBACK
2020-06-16 00:41:03,039 INFO sqlalchemy.engine.base.Engine Thread-343 : BEGIN (implicit)
2020-06-16 00:41:03,042 INFO sqlalchemy.engine.base.Engine Thread-344 : BEGIN (implicit)
2020-06-16 00:41:03,043 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,045 INFO sqlalchemy.engine.base.Engine Thread-344 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,047 INFO sqlalchemy.engine.base.Engine Thread-344 : (1, 1)
2020-06-16 00:41:03,047 INFO sqlalchemy.engine.base.Engine Thread-343 : (1, 1)
2020-06-16 00:41:03,047 INFO sqlalchemy.engine.base.Engine Thread-345 : BEGIN (implicit)
2020-06-16 00:41:03,052 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,048 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,051 INFO sqlalchemy.engine.base.Engine Thread-346 : BEGIN (implicit)
2020-06-16 00:41:03,052 INFO sqlalchemy.engine.base.Engine Thread-345 : (1, 1)
2020-06-16 00:41:03,048 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,060 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,055 INFO sqlalchemy.engine.base.Engine Thread-347 : BEGIN (implicit)
2020-06-16 00:41:03,072 INFO sqlalchemy.engine.base.Engine Thread-347 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,059 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,053 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,071 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,058 INFO sqlalchemy.engine.base.Engine Thread-348 : BEGIN (implicit)
2020-06-16 00:41:03,072 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,073 INFO sqlalchemy.engine.base.Engine Thread-347 : (1, 1)
2020-06-16 00:41:03,073 INFO sqlalchemy.engine.base.Engine Thread-346 : (1, 1)
2020-06-16 00:41:03,079 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,080 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,086 INFO sqlalchemy.engine.base.Engine Thread-343 : (15, 1)
2020-06-16 00:41:03,088 INFO sqlalchemy.engine.base.Engine Thread-344 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,108 INFO sqlalchemy.engine.base.Engine Thread-344 : (19, 1)
2020-06-16 00:41:03,089 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,108 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,104 INFO sqlalchemy.engine.base.Engine Thread-348 : (1, 1)
2020-06-16 00:41:03,107 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:03,090 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,122 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,119 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:03,134 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:41:03,120 INFO sqlalchemy.engine.base.Engine Thread-347 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,134 INFO sqlalchemy.engine.base.Engine Thread-347 : (22, 1)
2020-06-16 00:41:03,122 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:41:03,132 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,137 INFO sqlalchemy.engine.base.Engine Thread-346 : (21, 1)
2020-06-16 00:41:03,103 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,137 INFO sqlalchemy.engine.base.Engine Thread-345 : (20, 1)
2020-06-16 00:41:03,135 INFO sqlalchemy.engine.base.Engine Thread-344 : ROLLBACK
2020-06-16 00:41:03,136 INFO sqlalchemy.engine.base.Engine Thread-343 : ROLLBACK
2020-06-16 00:41:03,120 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,151 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,139 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:03,137 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:03,152 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 0, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:41:03,154 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:41:03,155 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:03,169 INFO sqlalchemy.engine.base.Engine Thread-349 : BEGIN (implicit)
2020-06-16 00:41:03,170 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,177 INFO sqlalchemy.engine.base.Engine Thread-348 : (23, 1)
2020-06-16 00:41:03,172 INFO sqlalchemy.engine.base.Engine Thread-347 : ROLLBACK
2020-06-16 00:41:03,174 INFO sqlalchemy.engine.base.Engine Thread-350 : BEGIN (implicit)
2020-06-16 00:41:03,175 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:41:03,177 INFO sqlalchemy.engine.base.Engine Thread-349 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,171 INFO sqlalchemy.engine.base.Engine Thread-345 : ROLLBACK
2020-06-16 00:41:03,178 INFO sqlalchemy.engine.base.Engine Thread-350 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:03,180 INFO sqlalchemy.engine.base.Engine Thread-346 : ROLLBACK
2020-06-16 00:41:03,180 INFO sqlalchemy.engine.base.Engine Thread-349 : (1, 1)
2020-06-16 00:41:03,180 INFO sqlalchemy.engine.base.Engine Thread-350 : (1, 1)
2020-06-16 00:41:03,181 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:41:03,182 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,184 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:41:03,184 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:03,202 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:03,186 INFO sqlalchemy.engine.base.Engine Thread-348 : ROLLBACK
2020-06-16 00:41:03,229 INFO sqlalchemy.engine.base.Engine Thread-349 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,229 INFO sqlalchemy.engine.base.Engine Thread-349 : (31, 1)
2020-06-16 00:41:03,236 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:41:03,238 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:41:03,242 INFO sqlalchemy.engine.base.Engine Thread-350 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:41:03,242 INFO sqlalchemy.engine.base.Engine Thread-349 : ROLLBACK
2020-06-16 00:41:03,242 INFO sqlalchemy.engine.base.Engine Thread-350 : (30, 1)
2020-06-16 00:41:03,244 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:41:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:41:03,247 INFO sqlalchemy.engine.base.Engine Thread-350 : ROLLBACK
2020-06-16 00:41:05,342 INFO sqlalchemy.engine.base.Engine Thread-351 : BEGIN (implicit)
2020-06-16 00:41:05,343 INFO sqlalchemy.engine.base.Engine Thread-351 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:05,343 INFO sqlalchemy.engine.base.Engine Thread-351 : (1, 1)
2020-06-16 00:41:05,344 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:05,344 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:05,352 INFO sqlalchemy.engine.base.Engine Thread-351 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:41:05,352 INFO sqlalchemy.engine.base.Engine Thread-351 : (22,)
2020-06-16 00:41:05,353 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:41:05,354 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:41:05,356 INFO sqlalchemy.engine.base.Engine Thread-351 : ROLLBACK
2020-06-16 00:41:05,369 INFO sqlalchemy.engine.base.Engine Thread-352 : BEGIN (implicit)
2020-06-16 00:41:05,370 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:41:05,370 INFO sqlalchemy.engine.base.Engine Thread-352 : (1, 1)
2020-06-16 00:41:05,371 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:41:05,371 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:41:05,375 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:41:05,375 INFO sqlalchemy.engine.base.Engine Thread-352 : (22,)
2020-06-16 00:41:05,376 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:41:05,376 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (22, 'Zone 5 BAU', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 test', 131)
2020-06-16 00:41:05,380 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:41:05,380 INFO sqlalchemy.engine.base.Engine Thread-352 : (22,)
2020-06-16 00:41:05,380 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:41:05,382 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:41:05,382 INFO sqlalchemy.engine.base.Engine Thread-352 : ()
2020-06-16 00:41:05,383 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:41:05,383 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:41:05,383 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:41:05,386 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:41:05,386 INFO sqlalchemy.engine.base.Engine Thread-352 : ()
2020-06-16 00:41:05,387 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:41:05,388 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:41:05,388 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:41:05,391 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:41:05,391 INFO sqlalchemy.engine.base.Engine Thread-352 : (22,)
2020-06-16 00:41:05,392 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:41:05,392 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (2, 'Zone 5 Complexes')
2020-06-16 00:41:05,393 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:41:05,393 INFO sqlalchemy.engine.base.Engine Thread-352 : (2,)
2020-06-16 00:41:05,394 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('complexgroups_1_group_members',)
2020-06-16 00:41:05,394 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row ('1,2',)
2020-06-16 00:41:05,400 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 00:41:05,400 INFO sqlalchemy.engine.base.Engine Thread-352 : ('1', '2')
2020-06-16 00:41:05,400 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:41:05,401 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:41:05,401 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (2, 'Made Up Fortigate')
2020-06-16 00:41:05,402 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:41:05,402 INFO sqlalchemy.engine.base.Engine Thread-352 : (2, 1)
2020-06-16 00:41:05,403 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:41:05,403 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (2,)
2020-06-16 00:41:05,404 INFO sqlalchemy.engine.base.Engine Thread-352 : ROLLBACK
2020-06-16 00:52:05,453 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:52:05,454 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:05,455 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:52:05,455 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:52:05,456 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:52:05,456 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:05,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:52:05,457 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:52:05,457 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:52:05,457 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:05,457 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:52:05,457 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:52:05,458 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:52:05,458 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:05,459 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:52:05,459 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:52:05,459 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:52:05,459 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:05,460 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:52:05,460 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:05,461 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:52:05,461 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:05,461 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:52:05,463 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:05,463 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:52:05,464 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:05,465 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:05,476 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:05,476 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:52:05,477 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:52:05,478 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:52:05,480 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:52:05,496 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:52:05,497 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:05,497 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:52:05,498 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:05,498 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:05,502 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:05,502 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:52:05,502 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:52:05,503 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:52:05,509 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:52:05,509 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:52:05,510 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:52:05,510 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:52:05,510 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:52:05,510 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:52:05,510 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:52:05,510 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:52:05,514 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:52:05,514 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:52:05,514 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:52:05,515 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:52:05,515 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:52:05,523 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:52:05,524 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:52:05,525 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:52:05,526 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:52:05,526 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:52:05,529 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:05,529 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:52:05,530 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:52:05,530 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:52:05,531 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:52:05,531 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:52:05,532 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:52:05,532 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:52:05,538 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:52:05,538 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:52:05,538 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:52:05,539 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:52:05,540 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:52:05,540 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:52:05,540 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:52:05,540 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:52:05,563 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-16 00:52:10,442 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-16 00:52:10,443 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:10,444 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-16 00:52:10,444 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:10,445 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:10,454 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:10,454 INFO sqlalchemy.engine.base.Engine Thread-4 : (22,)
2020-06-16 00:52:10,454 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:52:10,455 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:52:10,456 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-16 00:52:10,470 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-16 00:52:10,471 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:10,471 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-16 00:52:10,471 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:10,472 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:10,475 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:10,475 INFO sqlalchemy.engine.base.Engine Thread-5 : (22,)
2020-06-16 00:52:10,476 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:52:10,476 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (22, 'Zone 5 BAU', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 test', 131)
2020-06-16 00:52:10,480 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:52:10,480 INFO sqlalchemy.engine.base.Engine Thread-5 : (22,)
2020-06-16 00:52:10,480 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:52:10,482 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:52:10,482 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:52:10,483 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:52:10,483 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:52:10,483 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:52:10,486 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:52:10,486 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:52:10,487 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:52:10,487 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:52:10,487 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:52:10,490 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:10,490 INFO sqlalchemy.engine.base.Engine Thread-5 : (22,)
2020-06-16 00:52:10,490 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:52:10,490 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes')
2020-06-16 00:52:10,491 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:52:10,491 INFO sqlalchemy.engine.base.Engine Thread-5 : (2,)
2020-06-16 00:52:10,492 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_group_members',)
2020-06-16 00:52:10,492 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('1,2',)
2020-06-16 00:52:10,497 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 00:52:10,497 INFO sqlalchemy.engine.base.Engine Thread-5 : ('1', '2')
2020-06-16 00:52:10,498 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:52:10,498 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:52:10,498 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate')
2020-06-16 00:52:10,499 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:52:10,499 INFO sqlalchemy.engine.base.Engine Thread-5 : (2, 1)
2020-06-16 00:52:10,500 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:52:10,500 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2,)
2020-06-16 00:52:10,501 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-16 00:52:19,236 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-16 00:52:19,238 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:19,238 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-16 00:52:19,238 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:19,239 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:19,246 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:19,247 INFO sqlalchemy.engine.base.Engine Thread-6 : (20,)
2020-06-16 00:52:19,247 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:52:19,248 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:52:19,250 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-16 00:52:20,078 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-16 00:52:20,079 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:20,079 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-16 00:52:20,080 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:20,080 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:20,083 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:20,083 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-16 00:52:20,084 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:52:20,084 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:52:20,090 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:52:20,090 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-16 00:52:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:52:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:52:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:52:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:52:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:52:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:52:20,093 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:52:20,093 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:52:20,094 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:52:20,094 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:52:20,094 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:52:20,097 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:52:20,097 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:52:20,098 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:52:20,099 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:52:20,099 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:52:20,102 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:20,102 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-16 00:52:20,102 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:52:20,102 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:52:20,103 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:52:20,103 INFO sqlalchemy.engine.base.Engine Thread-7 : (1,)
2020-06-16 00:52:20,104 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_group_members',)
2020-06-16 00:52:20,104 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row ('1',)
2020-06-16 00:52:20,110 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:52:20,110 INFO sqlalchemy.engine.base.Engine Thread-7 : ('1',)
2020-06-16 00:52:20,110 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:52:20,110 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:52:20,111 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:52:20,111 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-16 00:52:20,112 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:52:20,112 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (5,)
2020-06-16 00:52:20,113 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-16 00:52:49,001 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:52:49,002 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:49,003 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:52:49,003 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:52:49,004 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:52:49,004 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:49,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:52:49,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:52:49,005 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:52:49,005 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:49,005 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:52:49,005 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:52:49,005 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:52:49,005 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:49,006 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:52:49,006 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:52:49,007 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:52:49,007 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:49,007 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:52:49,007 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:49,008 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:52:49,008 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:52:49,008 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:52:49,011 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:49,011 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:52:49,012 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:49,012 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:49,021 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:49,021 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:52:49,022 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:52:49,023 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:52:49,025 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:52:49,040 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:52:49,041 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:52:49,041 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:52:49,042 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:52:49,042 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:52:49,046 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:49,046 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:52:49,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:52:49,047 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:52:49,052 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:52:49,052 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:52:49,053 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:52:49,053 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:52:49,053 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:52:49,053 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:52:49,053 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:52:49,054 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:52:49,056 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:52:49,056 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:52:49,057 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:52:49,057 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:52:49,057 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:52:49,065 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:52:49,065 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:52:49,066 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:52:49,067 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:52:49,067 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:52:49,069 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:52:49,069 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:52:49,070 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:52:49,070 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:52:49,071 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:52:49,071 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:52:49,071 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:52:49,072 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:52:49,077 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:52:49,077 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:52:49,078 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:52:49,078 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:52:49,079 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:52:49,079 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:52:49,080 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:52:49,080 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:53:32,551 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:53:32,551 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:32,552 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:53:32,553 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:53:32,553 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:53:32,553 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:32,554 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:53:32,554 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:53:32,554 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:53:32,554 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:32,554 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:53:32,555 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:53:32,555 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:53:32,555 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:32,555 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:53:32,556 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:53:32,556 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:53:32,556 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:32,557 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:53:32,557 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:32,558 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:53:32,558 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:32,558 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:53:32,561 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:53:32,561 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:53:32,561 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:53:32,562 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:53:32,572 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:53:32,572 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:53:32,573 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:53:32,574 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:53:32,576 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:53:32,594 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:53:32,595 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:53:32,595 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:53:32,596 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:53:32,596 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:53:32,600 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:53:32,601 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:53:32,601 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:53:32,601 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:53:32,608 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:53:32,608 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:53:32,608 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:53:32,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:53:32,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:53:32,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:53:32,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:53:32,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:53:32,612 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:53:32,612 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:53:32,613 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:53:32,613 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:53:32,613 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:53:32,621 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:53:32,621 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:53:32,623 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:53:32,623 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:53:32,623 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:53:32,626 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:53:32,626 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:53:32,627 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:53:32,627 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:53:32,628 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:53:32,629 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:53:32,629 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:53:32,629 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:53:32,636 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:53:32,636 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:53:32,636 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:53:32,636 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:53:32,638 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:53:32,638 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:53:32,638 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:53:32,638 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:53:32,661 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-16 00:53:55,220 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:53:55,220 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:55,221 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:53:55,222 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:53:55,222 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:53:55,222 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:55,223 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:53:55,223 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:53:55,223 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:53:55,223 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:55,224 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:53:55,224 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:53:55,224 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:53:55,224 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:55,225 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:53:55,225 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:53:55,226 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:53:55,226 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:55,227 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:53:55,227 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:55,227 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:53:55,227 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:53:55,228 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:53:55,230 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:53:55,231 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:53:55,231 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:53:55,232 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:53:55,241 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:53:55,241 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:53:55,243 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:53:55,243 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:53:55,245 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:53:55,265 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:53:55,266 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:53:55,266 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:53:55,267 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:53:55,267 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:53:55,271 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:53:55,271 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:53:55,272 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:53:55,272 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:53:55,279 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:53:55,279 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:53:55,279 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:53:55,280 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:53:55,280 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:53:55,280 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:53:55,280 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:53:55,280 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:53:55,283 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:53:55,283 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:53:55,284 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:53:55,284 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:53:55,284 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:53:55,293 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:53:55,293 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:53:55,294 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:53:55,295 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:53:55,295 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:53:55,298 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:53:55,298 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:53:55,298 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:53:55,298 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:53:55,299 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:53:55,299 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:53:55,300 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:53:55,300 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:53:55,306 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:53:55,306 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:53:55,307 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:53:55,307 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:53:55,308 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:53:55,308 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:53:55,309 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:53:55,309 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:53:55,335 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-16 00:55:49,133 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:55:49,133 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:55:49,134 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:55:49,135 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:55:49,135 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:55:49,136 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:55:49,136 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:55:49,136 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:55:49,136 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:55:49,136 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:55:49,137 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:55:49,137 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:55:49,137 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:55:49,137 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:55:49,138 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:55:49,138 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:55:49,138 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:55:49,139 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:55:49,139 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:55:49,139 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:55:49,140 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:55:49,140 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:55:49,140 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:55:49,143 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:55:49,143 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:55:49,143 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:55:49,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:55:49,154 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:55:49,155 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:55:49,156 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:55:49,156 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:55:49,158 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:55:49,175 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:55:49,176 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:55:49,176 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:55:49,177 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:55:49,177 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:55:49,181 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:55:49,181 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:55:49,181 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:55:49,182 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:55:49,187 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:55:49,187 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:55:49,188 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:55:49,188 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:55:49,188 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:55:49,188 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:55:49,188 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:55:49,188 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:55:49,191 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:55:49,191 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:55:49,192 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:55:49,192 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:55:49,192 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:55:49,200 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:55:49,200 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:55:49,201 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:55:49,202 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:55:49,202 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:55:49,205 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:55:49,205 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:55:49,205 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:55:49,206 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:55:49,207 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:55:49,207 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:55:49,207 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:55:49,207 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:55:49,213 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:55:49,213 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:55:49,213 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:55:49,214 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:55:49,215 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:55:49,215 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:55:49,215 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:55:49,215 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:56:06,993 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:56:06,993 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:06,994 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:56:06,994 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:56:06,995 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:56:06,995 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:06,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:56:06,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:56:06,997 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:56:06,997 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:06,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:56:06,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:56:06,997 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:56:06,997 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:06,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:56:06,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:56:06,999 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:56:06,999 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:07,000 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:56:07,000 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:07,000 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:56:07,000 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:07,001 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:56:07,003 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:07,003 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:56:07,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:07,005 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:07,014 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:07,014 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:56:07,015 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:56:07,016 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:56:07,018 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:56:07,033 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:56:07,034 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:07,034 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:56:07,035 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:07,035 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:07,039 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:07,039 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:56:07,039 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:56:07,040 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:56:07,045 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:56:07,045 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:56:07,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:56:07,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:56:07,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:56:07,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:56:07,047 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:56:07,047 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:56:07,049 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:56:07,049 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:56:07,050 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:56:07,050 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:56:07,050 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:56:07,058 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:56:07,058 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:56:07,059 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:56:07,060 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:56:07,060 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:56:07,062 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:07,063 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:56:07,063 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:56:07,063 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:56:07,064 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:56:07,065 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:56:07,065 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:56:07,065 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:56:07,070 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:56:07,071 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:56:07,071 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:56:07,071 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:56:07,072 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:56:07,073 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:56:07,073 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:56:07,073 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:56:07,098 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-16 00:56:18,416 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-16 00:56:18,417 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:18,417 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-16 00:56:18,418 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:18,418 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:18,427 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:18,427 INFO sqlalchemy.engine.base.Engine Thread-4 : (20,)
2020-06-16 00:56:18,427 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:56:18,428 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:56:18,430 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-16 00:56:18,445 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-16 00:56:18,446 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:18,446 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-16 00:56:18,447 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:18,447 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:18,451 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:18,451 INFO sqlalchemy.engine.base.Engine Thread-5 : (20,)
2020-06-16 00:56:18,451 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:56:18,451 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:56:18,456 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:56:18,456 INFO sqlalchemy.engine.base.Engine Thread-5 : (20,)
2020-06-16 00:56:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:56:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:56:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:56:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:56:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:56:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:56:18,459 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:56:18,459 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:56:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:56:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:56:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:56:18,464 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:56:18,464 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:56:18,465 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:56:18,465 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:56:18,465 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:56:18,468 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:18,468 INFO sqlalchemy.engine.base.Engine Thread-5 : (20,)
2020-06-16 00:56:18,468 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:56:18,468 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:56:18,469 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:56:18,469 INFO sqlalchemy.engine.base.Engine Thread-5 : (1,)
2020-06-16 00:56:18,470 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_group_members',)
2020-06-16 00:56:18,470 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('1',)
2020-06-16 00:56:18,476 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:56:18,476 INFO sqlalchemy.engine.base.Engine Thread-5 : ('1',)
2020-06-16 00:56:18,476 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:56:18,476 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:56:18,478 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:56:18,478 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-16 00:56:18,478 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:56:18,478 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (5,)
2020-06-16 00:56:18,479 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-16 00:56:21,516 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-16 00:56:21,517 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:21,517 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-16 00:56:21,518 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:21,518 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:21,526 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:21,526 INFO sqlalchemy.engine.base.Engine Thread-6 : (23,)
2020-06-16 00:56:21,527 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:56:21,528 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:56:21,529 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-16 00:56:21,545 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-16 00:56:21,546 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:21,546 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-16 00:56:21,547 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:21,547 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:21,550 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:21,550 INFO sqlalchemy.engine.base.Engine Thread-7 : (23,)
2020-06-16 00:56:21,551 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:56:21,551 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-16 00:56:21,558 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:56:21,558 INFO sqlalchemy.engine.base.Engine Thread-7 : (23,)
2020-06-16 00:56:21,558 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:56:21,560 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:56:21,560 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:56:21,560 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:56:21,560 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:56:21,561 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:56:21,563 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:56:21,564 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:56:21,564 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:56:21,565 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:56:21,565 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:56:21,568 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:21,568 INFO sqlalchemy.engine.base.Engine Thread-7 : (23,)
2020-06-16 00:56:21,568 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:56:21,568 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes')
2020-06-16 00:56:21,569 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:56:21,569 INFO sqlalchemy.engine.base.Engine Thread-7 : (2,)
2020-06-16 00:56:21,570 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_group_members',)
2020-06-16 00:56:21,570 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row ('1,2',)
2020-06-16 00:56:21,576 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 00:56:21,576 INFO sqlalchemy.engine.base.Engine Thread-7 : ('1', '2')
2020-06-16 00:56:21,576 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:56:21,576 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:56:21,576 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate')
2020-06-16 00:56:21,578 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:56:21,578 INFO sqlalchemy.engine.base.Engine Thread-7 : (2, 1)
2020-06-16 00:56:21,578 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:56:21,578 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2,)
2020-06-16 00:56:21,579 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-16 00:56:57,426 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:56:57,426 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:57,427 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:56:57,428 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:56:57,429 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:56:57,429 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:57,429 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:56:57,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:56:57,430 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:56:57,430 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:57,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:56:57,431 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:56:57,431 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:56:57,431 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:57,432 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:56:57,432 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:56:57,433 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:56:57,433 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:57,433 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:56:57,433 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:57,434 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:56:57,434 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:56:57,435 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:56:57,438 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:57,438 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:56:57,438 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:57,439 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:57,450 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:57,450 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:56:57,451 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:56:57,452 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:56:57,454 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:56:57,469 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:56:57,470 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:56:57,470 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:56:57,471 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:56:57,471 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:56:57,475 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:57,475 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:56:57,476 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:56:57,476 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:56:57,483 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:56:57,483 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:56:57,484 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:56:57,484 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:56:57,484 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:56:57,485 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:56:57,485 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:56:57,485 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:56:57,488 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:56:57,488 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:56:57,489 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:56:57,489 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:56:57,489 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:56:57,498 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:56:57,498 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:56:57,499 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:56:57,500 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:56:57,500 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:56:57,502 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:56:57,503 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:56:57,503 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:56:57,503 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:56:57,504 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:56:57,505 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:56:57,505 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:56:57,505 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:56:57,511 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:56:57,511 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:56:57,511 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:56:57,512 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:56:57,513 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:56:57,513 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:56:57,513 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:56:57,514 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:56:57,539 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-16 00:57:00,570 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-16 00:57:00,572 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:00,572 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-16 00:57:00,573 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:00,573 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:00,582 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:00,582 INFO sqlalchemy.engine.base.Engine Thread-4 : (22,)
2020-06-16 00:57:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:57:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:57:00,586 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-16 00:57:00,600 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-16 00:57:00,601 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:00,601 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-16 00:57:00,601 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:00,602 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:00,605 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:00,605 INFO sqlalchemy.engine.base.Engine Thread-5 : (22,)
2020-06-16 00:57:00,606 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:57:00,606 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (22, 'Zone 5 BAU', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 test', 131)
2020-06-16 00:57:00,610 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:57:00,610 INFO sqlalchemy.engine.base.Engine Thread-5 : (22,)
2020-06-16 00:57:00,611 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:57:00,613 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:57:00,613 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:57:00,613 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:57:00,614 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:00,614 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:00,617 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:57:00,617 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:57:00,618 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:57:00,618 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:00,618 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:00,621 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:00,621 INFO sqlalchemy.engine.base.Engine Thread-5 : (22,)
2020-06-16 00:57:00,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:57:00,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes')
2020-06-16 00:57:00,623 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:57:00,623 INFO sqlalchemy.engine.base.Engine Thread-5 : (2,)
2020-06-16 00:57:00,623 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_group_members',)
2020-06-16 00:57:00,623 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('1,2',)
2020-06-16 00:57:00,629 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 00:57:00,629 INFO sqlalchemy.engine.base.Engine Thread-5 : ('1', '2')
2020-06-16 00:57:00,629 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:57:00,630 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:57:00,630 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate')
2020-06-16 00:57:00,631 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:57:00,631 INFO sqlalchemy.engine.base.Engine Thread-5 : (2, 1)
2020-06-16 00:57:00,631 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:57:00,631 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2,)
2020-06-16 00:57:00,633 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-16 00:57:02,757 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-16 00:57:02,759 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:02,759 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-16 00:57:02,759 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:02,760 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:02,768 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:02,768 INFO sqlalchemy.engine.base.Engine Thread-6 : (23,)
2020-06-16 00:57:02,768 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:57:02,769 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:57:02,770 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-16 00:57:02,783 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-16 00:57:02,784 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:02,784 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-16 00:57:02,785 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:02,785 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:02,788 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:02,789 INFO sqlalchemy.engine.base.Engine Thread-7 : (23,)
2020-06-16 00:57:02,789 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:57:02,789 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-16 00:57:02,795 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:57:02,795 INFO sqlalchemy.engine.base.Engine Thread-7 : (23,)
2020-06-16 00:57:02,795 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:57:02,797 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:57:02,797 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:57:02,798 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:57:02,798 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:02,798 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:02,801 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:57:02,801 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:57:02,802 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:57:02,802 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:02,802 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:02,805 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:02,805 INFO sqlalchemy.engine.base.Engine Thread-7 : (23,)
2020-06-16 00:57:02,805 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:57:02,805 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes')
2020-06-16 00:57:02,806 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:57:02,806 INFO sqlalchemy.engine.base.Engine Thread-7 : (2,)
2020-06-16 00:57:02,807 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_group_members',)
2020-06-16 00:57:02,807 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row ('1,2',)
2020-06-16 00:57:02,812 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 00:57:02,812 INFO sqlalchemy.engine.base.Engine Thread-7 : ('1', '2')
2020-06-16 00:57:02,812 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:57:02,813 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:57:02,813 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate')
2020-06-16 00:57:02,814 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:57:02,814 INFO sqlalchemy.engine.base.Engine Thread-7 : (2, 1)
2020-06-16 00:57:02,814 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:57:02,815 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2,)
2020-06-16 00:57:02,816 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-16 00:57:05,823 INFO sqlalchemy.engine.base.Engine Thread-8 : BEGIN (implicit)
2020-06-16 00:57:05,825 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:57:05,826 INFO sqlalchemy.engine.base.Engine Thread-8 : ('DATE', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:57:05,827 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:57:05,828 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (9, datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:57:05,828 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (10, datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:57:05,828 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (18, datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-16 00:57:05,833 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:57:05,833 INFO sqlalchemy.engine.base.Engine Thread-8 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:57:05,834 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:57:05,838 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:57:05,838 INFO sqlalchemy.engine.base.Engine Thread-8 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-06-16 00:57:05,839 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:57:05,839 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (9, datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Bob', 'testing', 'Made Up Fortigate', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:57:05,840 INFO sqlalchemy.engine.base.Engine Thread-8 : ROLLBACK
2020-06-16 00:57:05,864 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-06-16 00:57:05,868 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:05,871 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-06-16 00:57:05,871 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-06-16 00:57:05,873 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:05,873 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:05,873 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-06-16 00:57:05,873 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-06-16 00:57:05,874 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:05,877 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:05,888 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-06-16 00:57:05,888 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:05,889 INFO sqlalchemy.engine.base.Engine Thread-9 : (9, 1)
2020-06-16 00:57:05,889 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-16 00:57:05,878 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:05,890 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:05,891 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-16 00:57:05,891 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:05,893 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:57:05,890 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:05,909 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:05,891 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:05,915 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:05,936 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:05,925 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:05,915 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-06-16 00:57:05,939 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:05,966 INFO sqlalchemy.engine.base.Engine Thread-10 : (10, 1)
2020-06-16 00:57:05,955 INFO sqlalchemy.engine.base.Engine Thread-11 : (18, 1)
2020-06-16 00:57:05,968 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:05,964 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:57:05,968 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:05,979 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:57:05,980 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-06-16 00:57:05,969 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:05,981 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-06-16 00:57:05,974 INFO sqlalchemy.engine.base.Engine Thread-12 : (9, 1)
2020-06-16 00:57:05,983 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:57:05,985 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:05,986 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-16 00:57:07,031 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-16 00:57:07,032 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:07,032 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-16 00:57:07,033 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:07,033 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:07,043 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:07,043 INFO sqlalchemy.engine.base.Engine Thread-13 : (18,)
2020-06-16 00:57:07,044 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:57:07,045 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:57:07,046 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-16 00:57:07,062 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-16 00:57:07,063 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:07,063 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 00:57:07,064 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:07,064 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:07,068 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:07,068 INFO sqlalchemy.engine.base.Engine Thread-14 : (18,)
2020-06-16 00:57:07,069 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:57:07,069 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (18, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 131)
2020-06-16 00:57:07,073 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:57:07,073 INFO sqlalchemy.engine.base.Engine Thread-14 : (18,)
2020-06-16 00:57:07,074 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:57:07,075 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:57:07,075 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-06-16 00:57:07,076 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:57:07,076 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:07,076 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:07,080 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:57:07,080 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-06-16 00:57:07,081 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:57:07,081 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:07,081 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:07,084 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:07,084 INFO sqlalchemy.engine.base.Engine Thread-14 : (18,)
2020-06-16 00:57:07,085 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:57:07,085 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:57:07,086 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:57:07,086 INFO sqlalchemy.engine.base.Engine Thread-14 : (1,)
2020-06-16 00:57:07,087 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_group_members',)
2020-06-16 00:57:07,087 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row ('1',)
2020-06-16 00:57:07,093 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:57:07,093 INFO sqlalchemy.engine.base.Engine Thread-14 : ('1',)
2020-06-16 00:57:07,093 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:57:07,094 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:57:07,095 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:57:07,095 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 00:57:07,095 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:57:07,095 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (5,)
2020-06-16 00:57:07,096 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-16 00:57:09,557 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-16 00:57:09,559 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 00:57:09,559 INFO sqlalchemy.engine.base.Engine Thread-15 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:57:09,561 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 00:57:09,561 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 00:57:09,561 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 00:57:09,561 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 0, 5)
2020-06-16 00:57:09,561 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 00:57:09,561 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:57:09,561 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 00:57:09,566 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 00:57:09,566 INFO sqlalchemy.engine.base.Engine Thread-15 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:57:09,567 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:57:09,567 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 00:57:09,572 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 00:57:09,572 INFO sqlalchemy.engine.base.Engine Thread-15 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 00:57:09,573 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 00:57:09,573 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 00:57:09,574 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-16 00:57:09,598 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-16 00:57:09,599 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,599 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-16 00:57:09,602 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-16 00:57:09,603 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,603 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-16 00:57:09,604 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,604 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,608 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,608 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,607 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-16 00:57:09,616 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-06-16 00:57:09,627 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,629 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,634 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,640 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-06-16 00:57:09,640 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-16 00:57:09,640 INFO sqlalchemy.engine.base.Engine Thread-19 : (1, 1)
2020-06-16 00:57:09,641 INFO sqlalchemy.engine.base.Engine Thread-16 : (15, 1)
2020-06-16 00:57:09,644 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,641 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-06-16 00:57:09,645 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,645 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-06-16 00:57:09,644 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,643 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,645 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,642 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,658 INFO sqlalchemy.engine.base.Engine Thread-17 : (19, 1)
2020-06-16 00:57:09,646 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,659 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,658 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,664 INFO sqlalchemy.engine.base.Engine Thread-19 : (21, 1)
2020-06-16 00:57:09,658 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,646 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:09,657 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-06-16 00:57:09,670 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:09,681 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,681 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:09,684 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:57:09,685 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:57:09,686 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,689 INFO sqlalchemy.engine.base.Engine Thread-18 : (20, 1)
2020-06-16 00:57:09,687 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 00:57:09,689 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-16 00:57:09,686 INFO sqlalchemy.engine.base.Engine Thread-21 : (23, 1)
2020-06-16 00:57:09,690 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,690 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:09,694 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 0, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:09,692 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-16 00:57:09,692 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,691 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-06-16 00:57:09,695 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-16 00:57:09,703 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:09,710 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,714 INFO sqlalchemy.engine.base.Engine Thread-20 : (22, 1)
2020-06-16 00:57:09,713 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:09,711 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-06-16 00:57:09,716 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,716 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 00:57:09,720 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:09,717 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-06-16 00:57:09,719 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-06-16 00:57:09,717 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-06-16 00:57:09,722 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-06-16 00:57:09,723 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:09,724 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-06-16 00:57:09,723 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,724 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,750 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,750 INFO sqlalchemy.engine.base.Engine Thread-22 : (31, 1)
2020-06-16 00:57:09,751 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:09,751 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:57:09,752 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:09,754 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:09,771 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-06-16 00:57:09,780 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 00:57:09,780 INFO sqlalchemy.engine.base.Engine Thread-23 : (30, 1)
2020-06-16 00:57:09,782 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 00:57:09,785 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:09,786 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-06-16 00:57:10,481 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-06-16 00:57:10,482 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:10,482 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-06-16 00:57:10,482 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:10,483 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:10,524 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:10,524 INFO sqlalchemy.engine.base.Engine Thread-24 : (20,)
2020-06-16 00:57:10,525 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:57:10,526 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:57:10,527 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-06-16 00:57:10,543 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-06-16 00:57:10,544 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:10,544 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-06-16 00:57:10,545 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:10,545 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:10,549 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:10,549 INFO sqlalchemy.engine.base.Engine Thread-25 : (20,)
2020-06-16 00:57:10,550 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:57:10,550 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:57:10,554 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:57:10,554 INFO sqlalchemy.engine.base.Engine Thread-25 : (20,)
2020-06-16 00:57:10,555 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:57:10,555 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:57:10,555 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:57:10,555 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:57:10,555 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:57:10,555 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:57:10,557 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:57:10,557 INFO sqlalchemy.engine.base.Engine Thread-25 : ()
2020-06-16 00:57:10,558 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:57:10,558 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:10,558 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:10,561 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:57:10,561 INFO sqlalchemy.engine.base.Engine Thread-25 : ()
2020-06-16 00:57:10,562 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:57:10,563 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:10,563 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:10,565 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:10,566 INFO sqlalchemy.engine.base.Engine Thread-25 : (20,)
2020-06-16 00:57:10,566 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:57:10,566 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:57:10,568 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:57:10,568 INFO sqlalchemy.engine.base.Engine Thread-25 : (1,)
2020-06-16 00:57:10,568 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('complexgroups_1_group_members',)
2020-06-16 00:57:10,568 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row ('1',)
2020-06-16 00:57:10,574 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:57:10,574 INFO sqlalchemy.engine.base.Engine Thread-25 : ('1',)
2020-06-16 00:57:10,574 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:57:10,574 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:57:10,576 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:57:10,576 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-06-16 00:57:10,576 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:57:10,576 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (5,)
2020-06-16 00:57:10,578 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-06-16 00:57:33,986 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-16 00:57:33,987 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:57:33,988 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:57:33,988 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-16 00:57:33,989 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-16 00:57:33,989 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:57:33,989 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-16 00:57:33,989 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-16 00:57:33,990 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-16 00:57:33,990 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:57:33,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-16 00:57:33,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-16 00:57:33,990 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-16 00:57:33,991 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:57:33,991 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-16 00:57:33,991 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-16 00:57:33,992 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-16 00:57:33,992 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:57:33,992 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-16 00:57:33,993 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:57:33,993 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-16 00:57:33,993 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-16 00:57:33,994 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-16 00:57:33,996 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:33,996 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-16 00:57:33,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:33,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:34,008 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:34,008 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-16 00:57:34,009 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:57:34,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:57:34,012 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-16 00:57:34,027 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-16 00:57:34,028 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:34,028 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:57:34,028 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:34,029 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:34,033 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:34,033 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:57:34,033 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:57:34,034 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:57:34,041 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:57:34,041 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:57:34,041 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:57:34,042 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:57:34,042 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:57:34,042 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:57:34,042 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:57:34,042 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:57:34,045 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:57:34,045 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:57:34,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:57:34,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:34,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:34,055 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:57:34,055 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-16 00:57:34,056 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:57:34,057 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:34,057 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:34,060 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:34,060 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-16 00:57:34,060 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:57:34,061 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:57:34,062 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:57:34,062 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-16 00:57:34,062 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-16 00:57:34,063 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-16 00:57:34,069 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:57:34,069 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-16 00:57:34,070 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:57:34,070 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:57:34,071 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:57:34,071 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-16 00:57:34,072 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:57:34,072 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-16 00:57:34,097 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-16 00:57:36,566 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-16 00:57:36,567 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:36,567 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-16 00:57:36,568 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:36,568 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:36,576 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:36,576 INFO sqlalchemy.engine.base.Engine Thread-4 : (23,)
2020-06-16 00:57:36,577 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:57:36,578 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:57:36,579 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-16 00:57:36,594 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-16 00:57:36,596 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:36,596 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-16 00:57:36,596 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:36,597 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:36,600 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:36,600 INFO sqlalchemy.engine.base.Engine Thread-5 : (23,)
2020-06-16 00:57:36,601 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:57:36,601 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-16 00:57:36,606 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:57:36,606 INFO sqlalchemy.engine.base.Engine Thread-5 : (23,)
2020-06-16 00:57:36,607 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:57:36,608 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:57:36,608 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:57:36,609 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:57:36,609 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:36,609 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:36,612 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:57:36,612 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-16 00:57:36,613 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:57:36,613 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:36,614 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:36,616 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:36,616 INFO sqlalchemy.engine.base.Engine Thread-5 : (23,)
2020-06-16 00:57:36,617 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:57:36,617 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes')
2020-06-16 00:57:36,618 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:57:36,618 INFO sqlalchemy.engine.base.Engine Thread-5 : (2,)
2020-06-16 00:57:36,618 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_group_members',)
2020-06-16 00:57:36,618 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('1,2',)
2020-06-16 00:57:36,623 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 00:57:36,623 INFO sqlalchemy.engine.base.Engine Thread-5 : ('1', '2')
2020-06-16 00:57:36,624 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:57:36,624 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:57:36,624 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate')
2020-06-16 00:57:36,625 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:57:36,625 INFO sqlalchemy.engine.base.Engine Thread-5 : (2, 1)
2020-06-16 00:57:36,626 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:57:36,626 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2,)
2020-06-16 00:57:36,627 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-16 00:57:39,470 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-16 00:57:39,471 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:39,471 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-16 00:57:39,472 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:39,472 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:39,481 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:39,481 INFO sqlalchemy.engine.base.Engine Thread-6 : (20,)
2020-06-16 00:57:39,481 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 00:57:39,482 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 00:57:39,484 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-16 00:57:39,497 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-16 00:57:39,498 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 00:57:39,499 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-16 00:57:39,499 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 00:57:39,499 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 00:57:39,503 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:39,503 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-16 00:57:39,503 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 00:57:39,504 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 00:57:39,510 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 00:57:39,510 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-16 00:57:39,510 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 00:57:39,510 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 00:57:39,510 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 00:57:39,510 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 00:57:39,511 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 00:57:39,511 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 00:57:39,512 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 00:57:39,512 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:57:39,513 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 00:57:39,513 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 00:57:39,513 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 00:57:39,516 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 00:57:39,516 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-16 00:57:39,517 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 00:57:39,517 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 00:57:39,517 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 00:57:39,520 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 00:57:39,520 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-16 00:57:39,520 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 00:57:39,520 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes')
2020-06-16 00:57:39,521 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 00:57:39,521 INFO sqlalchemy.engine.base.Engine Thread-7 : (1,)
2020-06-16 00:57:39,522 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_group_members',)
2020-06-16 00:57:39,522 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row ('1',)
2020-06-16 00:57:39,527 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 00:57:39,527 INFO sqlalchemy.engine.base.Engine Thread-7 : ('1',)
2020-06-16 00:57:39,528 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 00:57:39,528 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint')
2020-06-16 00:57:39,529 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 00:57:39,529 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-16 00:57:39,529 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_max_slots',)
2020-06-16 00:57:39,530 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (5,)
2020-06-16 00:57:39,531 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-16 01:01:21,742 INFO sqlalchemy.engine.base.Engine Thread-8 : BEGIN (implicit)
2020-06-16 01:01:21,743 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:01:21,744 INFO sqlalchemy.engine.base.Engine Thread-8 : (1, 1)
2020-06-16 01:01:21,745 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:01:21,745 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:01:21,754 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:21,754 INFO sqlalchemy.engine.base.Engine Thread-8 : (15,)
2020-06-16 01:01:21,755 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:01:21,756 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:01:21,779 INFO sqlalchemy.engine.base.Engine Thread-8 : ROLLBACK
2020-06-16 01:01:24,455 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-06-16 01:01:24,456 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:01:24,456 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-06-16 01:01:24,457 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:01:24,457 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:01:24,466 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:24,466 INFO sqlalchemy.engine.base.Engine Thread-9 : (20,)
2020-06-16 01:01:24,467 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:01:24,468 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:01:24,470 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-06-16 01:01:24,485 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-06-16 01:01:24,486 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:01:24,486 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-06-16 01:01:24,487 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:01:24,487 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:01:24,491 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:24,491 INFO sqlalchemy.engine.base.Engine Thread-10 : (20,)
2020-06-16 01:01:24,492 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:01:24,492 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 01:01:24,497 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:01:24,497 INFO sqlalchemy.engine.base.Engine Thread-10 : (20,)
2020-06-16 01:01:24,497 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:01:24,498 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:01:24,498 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:01:24,498 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:01:24,498 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:01:24,498 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 01:01:24,500 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:01:24,500 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-06-16 01:01:24,501 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:01:24,501 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:01:24,501 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:01:24,504 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:01:24,504 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-06-16 01:01:24,505 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:01:24,522 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:01:24,522 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:01:24,524 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:24,524 INFO sqlalchemy.engine.base.Engine Thread-10 : (20,)
2020-06-16 01:01:24,525 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:01:24,525 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:01:24,526 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:01:24,526 INFO sqlalchemy.engine.base.Engine Thread-10 : (1,)
2020-06-16 01:01:24,527 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('complexgroups_1_group_members',)
2020-06-16 01:01:24,527 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row ('1',)
2020-06-16 01:01:24,533 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:01:24,533 INFO sqlalchemy.engine.base.Engine Thread-10 : ('1',)
2020-06-16 01:01:24,533 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:01:24,534 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:01:24,535 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:01:24,535 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-06-16 01:01:24,535 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:01:24,536 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (5,)
2020-06-16 01:01:24,553 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-06-16 01:01:30,940 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-06-16 01:01:30,941 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:01:30,941 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-06-16 01:01:30,942 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:01:30,942 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:01:30,951 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:30,951 INFO sqlalchemy.engine.base.Engine Thread-11 : (23,)
2020-06-16 01:01:30,952 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:01:30,953 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:01:30,954 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-06-16 01:01:30,968 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-16 01:01:30,970 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:01:30,970 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-16 01:01:30,970 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:01:30,971 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:01:30,974 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:30,974 INFO sqlalchemy.engine.base.Engine Thread-12 : (23,)
2020-06-16 01:01:30,975 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:01:30,975 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-16 01:01:30,979 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:01:30,979 INFO sqlalchemy.engine.base.Engine Thread-12 : (23,)
2020-06-16 01:01:30,979 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:01:30,981 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:01:30,981 INFO sqlalchemy.engine.base.Engine Thread-12 : ()
2020-06-16 01:01:30,982 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:01:30,982 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:01:30,982 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:01:30,985 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:01:30,985 INFO sqlalchemy.engine.base.Engine Thread-12 : ()
2020-06-16 01:01:30,986 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:01:30,986 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:01:30,986 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:01:30,989 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:30,989 INFO sqlalchemy.engine.base.Engine Thread-12 : (23,)
2020-06-16 01:01:30,990 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:01:30,990 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Zone 5 Complexes')
2020-06-16 01:01:30,991 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:01:30,991 INFO sqlalchemy.engine.base.Engine Thread-12 : (2,)
2020-06-16 01:01:30,991 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_1_group_members',)
2020-06-16 01:01:30,992 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row ('1,2',)
2020-06-16 01:01:30,997 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 01:01:30,997 INFO sqlalchemy.engine.base.Engine Thread-12 : ('1', '2')
2020-06-16 01:01:30,998 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:01:30,998 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:01:30,998 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Made Up Fortigate')
2020-06-16 01:01:30,999 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:01:30,999 INFO sqlalchemy.engine.base.Engine Thread-12 : (2, 1)
2020-06-16 01:01:31,000 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:01:31,000 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2,)
2020-06-16 01:01:31,001 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-16 01:01:45,451 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-16 01:01:45,452 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:01:45,452 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-16 01:01:45,453 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:01:45,453 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:01:45,463 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:45,464 INFO sqlalchemy.engine.base.Engine Thread-13 : (20,)
2020-06-16 01:01:45,464 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:01:45,465 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:01:45,466 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-16 01:01:45,479 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-16 01:01:45,480 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:01:45,480 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 01:01:45,480 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:01:45,481 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:01:45,484 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:45,484 INFO sqlalchemy.engine.base.Engine Thread-14 : (20,)
2020-06-16 01:01:45,485 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:01:45,485 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 01:01:45,489 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:01:45,489 INFO sqlalchemy.engine.base.Engine Thread-14 : (20,)
2020-06-16 01:01:45,489 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:01:45,489 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:01:45,489 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:01:45,490 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:01:45,490 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:01:45,490 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 01:01:45,491 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:01:45,492 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-06-16 01:01:45,492 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:01:45,492 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:01:45,492 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:01:45,495 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:01:45,495 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-06-16 01:01:45,496 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:01:45,497 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:01:45,497 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:01:45,499 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:01:45,499 INFO sqlalchemy.engine.base.Engine Thread-14 : (20,)
2020-06-16 01:01:45,500 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:01:45,500 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:01:45,501 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:01:45,501 INFO sqlalchemy.engine.base.Engine Thread-14 : (1,)
2020-06-16 01:01:45,501 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_group_members',)
2020-06-16 01:01:45,501 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row ('1',)
2020-06-16 01:01:45,506 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:01:45,507 INFO sqlalchemy.engine.base.Engine Thread-14 : ('1',)
2020-06-16 01:01:45,507 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:01:45,507 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:01:45,508 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:01:45,508 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-16 01:01:45,509 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:01:45,509 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (5,)
2020-06-16 01:01:45,510 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-16 01:03:14,231 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-16 01:03:14,232 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:14,232 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-16 01:03:14,233 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:14,234 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:14,242 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:03:14,242 INFO sqlalchemy.engine.base.Engine Thread-15 : (20,)
2020-06-16 01:03:14,243 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:03:14,243 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:03:14,245 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-16 01:03:14,259 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-16 01:03:14,260 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:14,260 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-16 01:03:14,260 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:14,260 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:14,264 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:03:14,264 INFO sqlalchemy.engine.base.Engine Thread-16 : (20,)
2020-06-16 01:03:14,265 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:03:14,265 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 01:03:14,269 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:03:14,269 INFO sqlalchemy.engine.base.Engine Thread-16 : (20,)
2020-06-16 01:03:14,269 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:03:14,269 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:03:14,270 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:03:14,270 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:03:14,270 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:03:14,270 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (36, 20, 'Test Booking', '123456', 'philip', None)
2020-06-16 01:03:14,272 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:03:14,272 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-06-16 01:03:14,272 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:03:14,272 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:03:14,272 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:03:14,275 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:03:14,275 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-06-16 01:03:14,276 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:03:14,277 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:14,277 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:03:14,279 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:03:14,280 INFO sqlalchemy.engine.base.Engine Thread-16 : (20,)
2020-06-16 01:03:14,280 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:03:14,280 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:03:14,281 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:03:14,281 INFO sqlalchemy.engine.base.Engine Thread-16 : (1,)
2020-06-16 01:03:14,281 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexgroups_1_group_members',)
2020-06-16 01:03:14,282 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row ('1',)
2020-06-16 01:03:14,287 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:03:14,287 INFO sqlalchemy.engine.base.Engine Thread-16 : ('1',)
2020-06-16 01:03:14,287 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:03:14,287 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:03:14,289 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:03:14,289 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-16 01:03:14,289 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:03:14,289 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (5,)
2020-06-16 01:03:14,306 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-16 01:03:41,575 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-16 01:03:41,576 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:41,577 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-16 01:03:41,577 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:41,577 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:41,580 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:03:41,580 INFO sqlalchemy.engine.base.Engine Thread-17 : (132,)
2020-06-16 01:03:41,581 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:03:41,581 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 01:03:41,581 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 01:03:41,581 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 01:03:41,581 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 01:03:41,606 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-16 01:03:41,606 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 6, 16, 1, 3, 41, 582104), datetime.datetime(2020, 6, 30, 1, 3, 41, 582104), datetime.datetime(2020, 6, 16, 1, 3, 41, 582104), datetime.datetime(2020, 6, 30, 1, 3, 41, 582104), datetime.datetime(2020, 6, 16, 1, 3, 41, 582104), datetime.datetime(2020, 6, 30, 1, 3, 41, 582104))
2020-06-16 01:03:41,607 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:03:41,609 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,610 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,610 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,610 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,610 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,619 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-16 01:03:41,619 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', datetime.datetime(2020, 6, 16, 1, 3, 41, 582104), datetime.datetime(2020, 6, 30, 1, 3, 41, 582104), datetime.datetime(2020, 6, 16, 1, 3, 41, 582104), datetime.datetime(2020, 6, 30, 1, 3, 41, 582104), datetime.datetime(2020, 6, 16, 1, 3, 41, 582104), datetime.datetime(2020, 6, 30, 1, 3, 41, 582104))
2020-06-16 01:03:41,620 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:03:41,621 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,621 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,621 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:41,706 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:41,706 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 01:03:41,707 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:41,707 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:41,710 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:41,710 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-16 01:03:41,711 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:41,711 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:41,713 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-16 01:03:42,003 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-16 01:03:42,004 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:42,004 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-16 01:03:42,005 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:42,005 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:42,016 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-16 01:03:42,084 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-16 01:03:42,085 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:42,085 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-16 01:03:42,089 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:42,089 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:42,090 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-16 01:03:42,093 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-16 01:03:42,095 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-16 01:03:42,097 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:42,098 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-16 01:03:42,096 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:42,100 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-16 01:03:42,101 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:42,101 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:42,102 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-16 01:03:42,102 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:42,103 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-16 01:03:42,104 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:42,105 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:42,106 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-16 01:03:42,106 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-16 01:03:42,107 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:42,108 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:42,109 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-16 01:03:45,491 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-16 01:03:45,493 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-16 01:03:45,493 INFO sqlalchemy.engine.base.Engine Thread-32 : (36, 1)
2020-06-16 01:03:45,494 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-16 01:03:45,495 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50))
2020-06-16 01:03:45,500 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:03:45,500 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-06-16 01:03:45,501 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:03:45,501 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:45,501 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:03:45,503 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:03:45,503 INFO sqlalchemy.engine.base.Engine Thread-32 : (97,)
2020-06-16 01:03:45,504 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:03:45,504 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-16 01:03:45,504 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-16 01:03:45,506 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 01:03:45,506 INFO sqlalchemy.engine.base.Engine Thread-32 : (20, 1)
2020-06-16 01:03:45,507 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 01:03:45,507 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 01:03:45,510 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-16 01:03:45,510 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-16 01:03:45,511 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:03:45,511 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:45,513 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 01:03:45,513 INFO sqlalchemy.engine.base.Engine Thread-32 : (20, 1)
2020-06-16 01:03:45,514 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 01:03:45,514 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 01:03:45,517 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:45,517 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-16 01:03:45,518 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,518 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,576 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:45,576 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-16 01:03:45,577 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,577 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,582 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:45,583 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-16 01:03:45,583 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,584 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,586 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:45,586 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-16 01:03:45,587 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,587 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,588 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-16 01:03:45,855 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-16 01:03:45,856 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:45,857 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-06-16 01:03:45,859 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-16 01:03:45,860 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,861 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:45,861 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,863 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-16 01:03:45,866 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-16 01:03:45,869 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-16 01:03:45,871 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:45,872 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,872 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-16 01:03:45,872 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,873 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-16 01:03:45,874 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-16 01:03:45,874 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,876 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,876 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:45,878 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-16 01:03:45,878 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-16 01:03:45,879 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,880 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,881 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-16 01:03:45,904 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-16 01:03:45,906 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:45,906 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-16 01:03:45,906 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:45,906 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:45,907 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-16 01:03:49,173 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-16 01:03:49,175 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-16 01:03:49,175 INFO sqlalchemy.engine.base.Engine Thread-47 : (36, 1)
2020-06-16 01:03:49,175 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-16 01:03:49,176 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (36, 20, 'Test Booking', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test test', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 16, 0, 32, 50))
2020-06-16 01:03:49,182 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:03:49,182 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-06-16 01:03:49,183 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:03:49,183 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:49,183 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:03:49,185 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:03:49,185 INFO sqlalchemy.engine.base.Engine Thread-47 : (97,)
2020-06-16 01:03:49,185 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:03:49,185 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-16 01:03:49,185 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-16 01:03:49,187 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 01:03:49,187 INFO sqlalchemy.engine.base.Engine Thread-47 : (20, 1)
2020-06-16 01:03:49,187 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 01:03:49,187 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 01:03:49,189 INFO sqlalchemy.engine.base.Engine Thread-47 : DELETE FROM bookings WHERE bookings.id = %s
2020-06-16 01:03:49,189 INFO sqlalchemy.engine.base.Engine Thread-47 : (36,)
2020-06-16 01:03:49,189 INFO sqlalchemy.engine.base.Engine Thread-47 : COMMIT
2020-06-16 01:03:49,230 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-16 01:03:49,231 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:49,231 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-16 01:03:49,232 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,232 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,234 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:03:49,234 INFO sqlalchemy.engine.base.Engine Thread-48 : (132,)
2020-06-16 01:03:49,235 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:03:49,235 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 01:03:49,235 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 01:03:49,235 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 01:03:49,235 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 01:03:49,258 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-16 01:03:49,258 INFO sqlalchemy.engine.base.Engine Thread-48 : (datetime.datetime(2020, 6, 16, 1, 3, 49, 235849), datetime.datetime(2020, 6, 30, 1, 3, 49, 235849), datetime.datetime(2020, 6, 16, 1, 3, 49, 235849), datetime.datetime(2020, 6, 30, 1, 3, 49, 235849), datetime.datetime(2020, 6, 16, 1, 3, 49, 235849), datetime.datetime(2020, 6, 30, 1, 3, 49, 235849))
2020-06-16 01:03:49,259 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:03:49,261 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:49,261 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:49,261 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:49,261 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:49,269 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-16 01:03:49,269 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', datetime.datetime(2020, 6, 16, 1, 3, 49, 235849), datetime.datetime(2020, 6, 30, 1, 3, 49, 235849), datetime.datetime(2020, 6, 16, 1, 3, 49, 235849), datetime.datetime(2020, 6, 30, 1, 3, 49, 235849), datetime.datetime(2020, 6, 16, 1, 3, 49, 235849), datetime.datetime(2020, 6, 30, 1, 3, 49, 235849))
2020-06-16 01:03:49,270 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:03:49,271 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:49,271 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:49,275 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:49,275 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-16 01:03:49,276 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,276 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,279 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:49,279 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-16 01:03:49,279 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,280 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,282 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-16 01:03:49,519 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-16 01:03:49,520 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:49,520 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-16 01:03:49,521 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,521 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,522 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-16 01:03:49,593 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-16 01:03:49,594 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:49,596 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-16 01:03:49,596 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-16 01:03:49,598 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:49,599 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-16 01:03:49,599 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,599 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,600 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-16 01:03:49,601 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,601 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,602 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-16 01:03:49,606 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-16 01:03:49,607 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:49,607 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-16 01:03:49,608 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,608 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,609 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-16 01:03:49,612 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-16 01:03:49,613 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:49,613 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-16 01:03:49,614 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:49,614 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:49,616 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-16 01:03:52,256 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-16 01:03:52,258 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:03:52,258 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-06-16 01:03:52,259 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:03:52,260 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:52,260 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:03:52,261 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:03:52,261 INFO sqlalchemy.engine.base.Engine Thread-63 : (100,)
2020-06-16 01:03:52,262 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:03:52,262 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 01:03:52,262 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 01:03:52,262 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 01:03:52,262 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 01:03:52,262 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 01:03:52,264 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:52,264 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-16 01:03:52,265 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:52,265 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:52,275 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:03:52,275 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-16 01:03:52,276 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:52,276 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:52,278 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-16 01:03:52,542 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-16 01:03:52,543 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:52,546 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-16 01:03:52,546 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-16 01:03:52,547 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:52,547 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:52,552 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:52,550 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-16 01:03:52,550 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-16 01:03:52,555 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:52,555 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-16 01:03:52,555 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:52,553 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-16 01:03:52,556 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-16 01:03:52,557 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:52,559 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-16 01:03:52,558 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:52,557 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:52,560 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-16 01:03:52,561 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:52,562 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-16 01:03:52,563 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:52,563 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:52,564 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-16 01:03:52,595 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-16 01:03:52,596 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:52,596 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-16 01:03:52,597 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:52,597 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:52,598 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-16 01:03:53,263 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-16 01:03:53,265 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 01:03:53,265 INFO sqlalchemy.engine.base.Engine Thread-78 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:03:53,267 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 01:03:53,267 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 01:03:53,267 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 01:03:53,267 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 01:03:53,268 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 01:03:53,268 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:03:53,268 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:03:53,272 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 01:03:53,272 INFO sqlalchemy.engine.base.Engine Thread-78 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:03:53,273 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:03:53,273 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 01:03:53,278 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 01:03:53,278 INFO sqlalchemy.engine.base.Engine Thread-78 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:03:53,279 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:03:53,279 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 01:03:53,280 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-16 01:03:53,305 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-06-16 01:03:53,307 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 01:03:53,307 INFO sqlalchemy.engine.base.Engine Thread-79 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:03:53,309 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 01:03:53,309 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 01:03:53,309 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 01:03:53,309 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (20, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 01:03:53,309 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 01:03:53,309 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:03:53,309 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:03:53,314 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 01:03:53,314 INFO sqlalchemy.engine.base.Engine Thread-79 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:03:53,315 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:03:53,315 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 01:03:53,319 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 01:03:53,319 INFO sqlalchemy.engine.base.Engine Thread-79 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:03:53,320 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:03:53,320 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 01:03:53,321 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-06-16 01:03:53,348 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-16 01:03:53,350 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-06-16 01:03:53,351 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,354 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-06-16 01:03:53,354 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,355 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-06-16 01:03:53,353 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-06-16 01:03:53,359 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,359 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-06-16 01:03:53,358 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,355 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,357 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-06-16 01:03:53,375 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,425 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,418 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-06-16 01:03:53,419 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,425 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,437 INFO sqlalchemy.engine.base.Engine Thread-81 : (15, 1)
2020-06-16 01:03:53,435 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,436 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,437 INFO sqlalchemy.engine.base.Engine Thread-83 : (1, 1)
2020-06-16 01:03:53,413 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,437 INFO sqlalchemy.engine.base.Engine Thread-82 : (20, 1)
2020-06-16 01:03:53,437 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-06-16 01:03:53,439 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,438 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,438 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:03:53,438 INFO sqlalchemy.engine.base.Engine Thread-80 : (19, 1)
2020-06-16 01:03:53,440 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-06-16 01:03:53,437 INFO sqlalchemy.engine.base.Engine Thread-84 : (1, 1)
2020-06-16 01:03:53,440 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,440 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:03:53,449 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:03:53,448 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,448 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,441 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 01:03:53,450 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:03:53,455 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,467 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,476 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-06-16 01:03:53,476 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,478 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 01:03:53,502 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-16 01:03:53,478 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-06-16 01:03:53,489 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,479 INFO sqlalchemy.engine.base.Engine Thread-83 : (21, 1)
2020-06-16 01:03:53,501 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,507 INFO sqlalchemy.engine.base.Engine Thread-84 : (23, 1)
2020-06-16 01:03:53,503 INFO sqlalchemy.engine.base.Engine Thread-85 : (22, 1)
2020-06-16 01:03:53,508 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:03:53,506 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-06-16 01:03:53,509 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 01:03:53,509 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:03:53,512 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:03:53,510 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,512 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:03:53,513 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-06-16 01:03:53,514 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-06-16 01:03:53,514 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-06-16 01:03:53,515 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:03:53,518 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-06-16 01:03:53,520 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-06-16 01:03:53,520 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,522 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,521 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:53,527 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-16 01:03:53,538 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:53,539 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:53,566 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,568 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 01:03:53,569 INFO sqlalchemy.engine.base.Engine Thread-87 : (30, 1)
2020-06-16 01:03:53,569 INFO sqlalchemy.engine.base.Engine Thread-86 : (31, 1)
2020-06-16 01:03:53,570 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:03:53,571 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:03:53,573 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:53,574 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:53,576 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-06-16 01:03:53,577 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-06-16 01:03:55,273 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-16 01:03:55,274 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:55,274 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-16 01:03:55,275 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:55,276 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:55,285 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:03:55,285 INFO sqlalchemy.engine.base.Engine Thread-88 : (20,)
2020-06-16 01:03:55,285 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:03:55,286 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:03:55,287 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-16 01:03:55,301 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-16 01:03:55,302 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:03:55,302 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-16 01:03:55,303 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:03:55,303 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:03:55,309 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:03:55,309 INFO sqlalchemy.engine.base.Engine Thread-89 : (20,)
2020-06-16 01:03:55,310 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:03:55,310 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 01:03:55,314 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:03:55,314 INFO sqlalchemy.engine.base.Engine Thread-89 : (20,)
2020-06-16 01:03:55,315 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:03:55,315 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:03:55,315 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:03:55,315 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:03:55,315 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:03:55,317 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:03:55,317 INFO sqlalchemy.engine.base.Engine Thread-89 : ()
2020-06-16 01:03:55,318 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:03:55,318 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:03:55,318 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:03:55,321 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:03:55,321 INFO sqlalchemy.engine.base.Engine Thread-89 : ()
2020-06-16 01:03:55,322 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:03:55,323 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:03:55,323 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:03:55,325 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:03:55,326 INFO sqlalchemy.engine.base.Engine Thread-89 : (20,)
2020-06-16 01:03:55,326 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:03:55,326 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:03:55,327 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:03:55,327 INFO sqlalchemy.engine.base.Engine Thread-89 : (1,)
2020-06-16 01:03:55,328 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_1_group_members',)
2020-06-16 01:03:55,328 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row ('1',)
2020-06-16 01:03:55,333 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:03:55,333 INFO sqlalchemy.engine.base.Engine Thread-89 : ('1',)
2020-06-16 01:03:55,334 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:03:55,334 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:03:55,335 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:03:55,335 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-16 01:03:55,335 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:03:55,336 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (5,)
2020-06-16 01:03:55,337 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-16 01:04:44,509 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-16 01:04:44,511 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:04:44,511 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-16 01:04:44,512 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:04:44,512 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:04:44,521 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:04:44,521 INFO sqlalchemy.engine.base.Engine Thread-90 : (20,)
2020-06-16 01:04:44,521 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:04:44,522 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:04:44,523 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-16 01:04:44,539 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-16 01:04:44,541 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:04:44,541 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-16 01:04:44,541 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:04:44,542 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:04:44,546 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:04:44,546 INFO sqlalchemy.engine.base.Engine Thread-91 : (20,)
2020-06-16 01:04:44,546 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:04:44,546 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 01:04:44,551 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:04:44,551 INFO sqlalchemy.engine.base.Engine Thread-91 : (20,)
2020-06-16 01:04:44,552 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:04:44,552 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:04:44,552 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:04:44,552 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:04:44,552 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:04:44,554 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:04:44,554 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-06-16 01:04:44,555 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:04:44,555 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:04:44,555 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:04:44,559 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:04:44,559 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-06-16 01:04:44,560 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:04:44,560 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:04:44,560 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:04:44,563 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:04:44,563 INFO sqlalchemy.engine.base.Engine Thread-91 : (20,)
2020-06-16 01:04:44,563 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:04:44,564 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:04:44,565 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:04:44,565 INFO sqlalchemy.engine.base.Engine Thread-91 : (1,)
2020-06-16 01:04:44,565 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_1_group_members',)
2020-06-16 01:04:44,565 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row ('1',)
2020-06-16 01:04:44,571 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:04:44,571 INFO sqlalchemy.engine.base.Engine Thread-91 : ('1',)
2020-06-16 01:04:44,571 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:04:44,572 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:04:44,573 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:04:44,573 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-16 01:04:44,574 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:04:44,574 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (5,)
2020-06-16 01:04:44,591 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-16 01:04:50,526 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-16 01:04:50,527 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:04:50,527 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-16 01:04:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:04:50,529 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:04:50,536 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:04:50,536 INFO sqlalchemy.engine.base.Engine Thread-92 : (20,)
2020-06-16 01:04:50,537 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:04:50,538 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:04:50,539 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-16 01:04:50,555 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-16 01:04:50,555 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:04:50,556 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-16 01:04:50,556 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:04:50,556 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:04:50,560 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:04:50,560 INFO sqlalchemy.engine.base.Engine Thread-93 : (20,)
2020-06-16 01:04:50,561 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:04:50,561 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 01:04:50,565 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:04:50,565 INFO sqlalchemy.engine.base.Engine Thread-93 : (20,)
2020-06-16 01:04:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:04:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:04:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:04:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:04:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:04:50,567 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:04:50,567 INFO sqlalchemy.engine.base.Engine Thread-93 : ()
2020-06-16 01:04:50,568 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:04:50,568 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:04:50,568 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:04:50,571 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:04:50,571 INFO sqlalchemy.engine.base.Engine Thread-93 : ()
2020-06-16 01:04:50,572 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:04:50,573 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:04:50,573 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:04:50,575 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:04:50,575 INFO sqlalchemy.engine.base.Engine Thread-93 : (20,)
2020-06-16 01:04:50,576 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:04:50,576 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:04:50,577 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:04:50,577 INFO sqlalchemy.engine.base.Engine Thread-93 : (1,)
2020-06-16 01:04:50,577 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_1_group_members',)
2020-06-16 01:04:50,577 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row ('1',)
2020-06-16 01:04:50,583 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:04:50,583 INFO sqlalchemy.engine.base.Engine Thread-93 : ('1',)
2020-06-16 01:04:50,583 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:04:50,583 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:04:50,585 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:04:50,585 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-16 01:04:50,585 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:04:50,585 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (5,)
2020-06-16 01:04:50,587 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-16 01:05:07,304 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-16 01:05:07,306 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:07,306 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-06-16 01:05:07,307 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:07,307 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:07,315 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:05:07,316 INFO sqlalchemy.engine.base.Engine Thread-94 : (20,)
2020-06-16 01:05:07,316 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:05:07,317 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:05:07,318 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-16 01:05:07,340 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-16 01:05:07,341 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:07,341 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-16 01:05:07,341 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:07,342 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:07,348 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:05:07,348 INFO sqlalchemy.engine.base.Engine Thread-95 : (20,)
2020-06-16 01:05:07,349 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:05:07,349 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'test', 131)
2020-06-16 01:05:07,352 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:05:07,353 INFO sqlalchemy.engine.base.Engine Thread-95 : (20,)
2020-06-16 01:05:07,353 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:05:07,353 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:05:07,353 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:05:07,353 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:05:07,353 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:05:07,355 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:05:07,355 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-06-16 01:05:07,356 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:05:07,356 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:05:07,356 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:05:07,359 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:05:07,359 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-06-16 01:05:07,360 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:05:07,360 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:05:07,360 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:05:07,363 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:05:07,363 INFO sqlalchemy.engine.base.Engine Thread-95 : (20,)
2020-06-16 01:05:07,364 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:05:07,364 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:05:07,365 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:05:07,365 INFO sqlalchemy.engine.base.Engine Thread-95 : (1,)
2020-06-16 01:05:07,365 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_1_group_members',)
2020-06-16 01:05:07,365 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row ('1',)
2020-06-16 01:05:07,370 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:05:07,370 INFO sqlalchemy.engine.base.Engine Thread-95 : ('1',)
2020-06-16 01:05:07,371 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:05:07,371 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:05:07,372 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:05:07,372 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-16 01:05:07,372 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:05:07,373 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (5,)
2020-06-16 01:05:07,374 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-16 01:05:23,429 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-16 01:05:23,430 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:23,430 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-16 01:05:23,430 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,431 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,433 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:23,433 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-06-16 01:05:23,433 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,433 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,435 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:05:23,435 INFO sqlalchemy.engine.base.Engine Thread-96 : (132,)
2020-06-16 01:05:23,436 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:23,436 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 01:05:23,436 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 01:05:23,436 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 01:05:23,436 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 01:05:23,445 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 01:05:23,445 INFO sqlalchemy.engine.base.Engine Thread-96 : (datetime.datetime(2020, 6, 16, 1, 5, 23, 437227), datetime.datetime(2020, 6, 30, 1, 5, 23, 437227), datetime.datetime(2020, 6, 16, 1, 5, 23, 437227), datetime.datetime(2020, 6, 30, 1, 5, 23, 437227), datetime.datetime(2020, 6, 16, 1, 5, 23, 437227), datetime.datetime(2020, 6, 30, 1, 5, 23, 437227))
2020-06-16 01:05:23,446 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 01:05:23,446 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 01:05:23,446 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-16 01:05:23,463 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:23,464 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-06-16 01:05:23,464 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,464 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,466 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-16 01:05:23,728 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-16 01:05:23,731 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-16 01:05:23,735 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:23,735 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-16 01:05:23,733 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:23,735 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-16 01:05:23,736 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,736 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,737 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,740 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,740 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-16 01:05:23,744 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:23,744 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-16 01:05:23,743 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-16 01:05:23,741 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-16 01:05:23,742 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-06-16 01:05:23,746 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:23,746 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-06-16 01:05:23,747 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,748 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,749 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-16 01:05:23,747 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,750 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,751 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-06-16 01:05:23,784 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-16 01:05:23,785 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:23,785 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-16 01:05:23,786 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:23,786 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:23,787 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-16 01:05:26,203 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-06-16 01:05:26,204 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:26,204 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-06-16 01:05:26,205 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,205 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,207 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:26,207 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-06-16 01:05:26,208 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,208 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,209 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 01:05:26,209 INFO sqlalchemy.engine.base.Engine Thread-111 : ('20', 1)
2020-06-16 01:05:26,210 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 01:05:26,210 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 01:05:26,213 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:05:26,213 INFO sqlalchemy.engine.base.Engine Thread-111 : (82,)
2020-06-16 01:05:26,213 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:26,214 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:05:26,214 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 01:05:26,214 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 01:05:26,215 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 01:05:26,215 INFO sqlalchemy.engine.base.Engine Thread-111 : (1,)
2020-06-16 01:05:26,216 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:26,216 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 01:05:26,216 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 01:05:26,217 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 01:05:26,217 INFO sqlalchemy.engine.base.Engine Thread-111 : ()
2020-06-16 01:05:26,218 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:05:26,218 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:05:26,218 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:05:26,220 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 01:05:26,220 INFO sqlalchemy.engine.base.Engine Thread-111 : (127, 0)
2020-06-16 01:05:26,220 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:26,220 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 01:05:26,220 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 01:05:26,220 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 01:05:26,221 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 01:05:26,222 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:05:26,222 INFO sqlalchemy.engine.base.Engine Thread-111 : (105,)
2020-06-16 01:05:26,222 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:26,223 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 01:05:26,223 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 01:05:26,257 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:26,257 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-06-16 01:05:26,258 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,258 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,261 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-06-16 01:05:26,525 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-16 01:05:26,526 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:26,527 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-16 01:05:26,527 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,527 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,529 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-16 01:05:26,577 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-16 01:05:26,579 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:26,582 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-16 01:05:26,589 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:26,586 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-16 01:05:26,588 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-16 01:05:26,585 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-16 01:05:26,589 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-16 01:05:26,592 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,592 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:26,593 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-16 01:05:26,593 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,590 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:26,594 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-16 01:05:26,594 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,594 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,595 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-16 01:05:26,596 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,597 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,597 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-16 01:05:26,598 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-16 01:05:26,596 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:26,600 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:26,602 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-16 01:05:51,935 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-06-16 01:05:51,936 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:51,936 INFO sqlalchemy.engine.base.Engine Thread-126 : (1, 1)
2020-06-16 01:05:51,936 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:51,937 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:51,939 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:51,939 INFO sqlalchemy.engine.base.Engine Thread-126 : ('philip', 1, 1)
2020-06-16 01:05:51,940 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:51,940 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:51,941 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-16 01:05:51,941 INFO sqlalchemy.engine.base.Engine Thread-126 : ('20', 1)
2020-06-16 01:05:51,942 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-16 01:05:51,942 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 17, 23, 45), 'GBR,IND', 131, 1, 107)
2020-06-16 01:05:51,945 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:05:51,945 INFO sqlalchemy.engine.base.Engine Thread-126 : (82,)
2020-06-16 01:05:51,945 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:51,946 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:05:51,946 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-16 01:05:51,946 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-16 01:05:51,947 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-16 01:05:51,947 INFO sqlalchemy.engine.base.Engine Thread-126 : (1,)
2020-06-16 01:05:51,947 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:51,948 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-16 01:05:51,948 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-16 01:05:51,949 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-16 01:05:51,949 INFO sqlalchemy.engine.base.Engine Thread-126 : ()
2020-06-16 01:05:51,949 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:05:51,950 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:05:51,950 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:05:51,952 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-16 01:05:51,952 INFO sqlalchemy.engine.base.Engine Thread-126 : (127, 0)
2020-06-16 01:05:51,952 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:51,952 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-16 01:05:51,952 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-16 01:05:51,953 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-16 01:05:51,953 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-16 01:05:51,954 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:05:51,954 INFO sqlalchemy.engine.base.Engine Thread-126 : (105,)
2020-06-16 01:05:51,955 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:51,955 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-16 01:05:51,955 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-16 01:05:51,959 INFO sqlalchemy.engine.base.Engine Thread-126 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-06-16 01:05:51,959 INFO sqlalchemy.engine.base.Engine Thread-126 : ('20', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 20)
2020-06-16 01:05:51,960 INFO sqlalchemy.engine.base.Engine Thread-126 : COMMIT
2020-06-16 01:05:52,025 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-06-16 01:05:52,025 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:52,026 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-06-16 01:05:52,026 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,026 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,028 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:52,029 INFO sqlalchemy.engine.base.Engine Thread-127 : ('philip', 1, 1)
2020-06-16 01:05:52,029 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,029 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,031 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:05:52,031 INFO sqlalchemy.engine.base.Engine Thread-127 : (132,)
2020-06-16 01:05:52,032 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:52,032 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-16 01:05:52,032 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-16 01:05:52,032 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-16 01:05:52,032 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-16 01:05:52,041 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-16 01:05:52,041 INFO sqlalchemy.engine.base.Engine Thread-127 : (datetime.datetime(2020, 6, 16, 1, 5, 52, 33152), datetime.datetime(2020, 6, 30, 1, 5, 52, 33152), datetime.datetime(2020, 6, 16, 1, 5, 52, 33152), datetime.datetime(2020, 6, 30, 1, 5, 52, 33152), datetime.datetime(2020, 6, 16, 1, 5, 52, 33152), datetime.datetime(2020, 6, 30, 1, 5, 52, 33152))
2020-06-16 01:05:52,042 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-16 01:05:52,042 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-16 01:05:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-16 01:05:52,047 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:52,047 INFO sqlalchemy.engine.base.Engine Thread-127 : ('philip', 1, 1)
2020-06-16 01:05:52,048 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,048 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,051 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-06-16 01:05:52,314 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-16 01:05:52,315 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:52,315 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-16 01:05:52,316 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,316 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,317 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-16 01:05:52,388 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-06-16 01:05:52,390 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:52,390 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-06-16 01:05:52,393 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-06-16 01:05:52,393 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,394 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:52,400 INFO sqlalchemy.engine.base.Engine Thread-139 : (1, 1)
2020-06-16 01:05:52,397 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-06-16 01:05:52,400 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,401 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:52,400 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-06-16 01:05:52,402 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-06-16 01:05:52,403 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,404 INFO sqlalchemy.engine.base.Engine Thread-140 : (1, 1)
2020-06-16 01:05:52,405 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:52,407 INFO sqlalchemy.engine.base.Engine Thread-141 : (1, 1)
2020-06-16 01:05:52,405 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,408 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-06-16 01:05:52,407 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,409 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:52,409 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,410 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:52,411 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-06-16 01:05:52,412 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-06-16 01:05:54,732 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-06-16 01:05:54,734 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:05:54,734 INFO sqlalchemy.engine.base.Engine Thread-142 : ()
2020-06-16 01:05:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:05:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:05:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:05:54,737 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-16 01:05:54,737 INFO sqlalchemy.engine.base.Engine Thread-142 : (100,)
2020-06-16 01:05:54,738 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-16 01:05:54,738 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-16 01:05:54,738 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-16 01:05:54,738 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-16 01:05:54,738 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-16 01:05:54,738 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-16 01:05:54,740 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:54,740 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-06-16 01:05:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:54,745 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-16 01:05:54,745 INFO sqlalchemy.engine.base.Engine Thread-142 : ('philip', 1, 1)
2020-06-16 01:05:54,746 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:54,746 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:54,747 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-06-16 01:05:55,009 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-06-16 01:05:55,011 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,011 INFO sqlalchemy.engine.base.Engine Thread-153 : (1, 1)
2020-06-16 01:05:55,012 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-06-16 01:05:55,013 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,013 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-06-16 01:05:55,014 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,014 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,015 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,017 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-06-16 01:05:55,020 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,019 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-06-16 01:05:55,020 INFO sqlalchemy.engine.base.Engine Thread-154 : (1, 1)
2020-06-16 01:05:55,018 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,023 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-06-16 01:05:55,024 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-06-16 01:05:55,025 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,027 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,028 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-06-16 01:05:55,026 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,029 INFO sqlalchemy.engine.base.Engine Thread-155 : (1, 1)
2020-06-16 01:05:55,029 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,030 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,030 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-06-16 01:05:55,063 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-06-16 01:05:55,064 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,064 INFO sqlalchemy.engine.base.Engine Thread-156 : (1, 1)
2020-06-16 01:05:55,065 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,065 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,066 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-06-16 01:05:55,669 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-06-16 01:05:55,670 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 01:05:55,671 INFO sqlalchemy.engine.base.Engine Thread-157 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:05:55,672 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 01:05:55,672 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 01:05:55,672 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 01:05:55,672 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 01:05:55,673 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 01:05:55,673 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:05:55,673 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:05:55,677 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 01:05:55,677 INFO sqlalchemy.engine.base.Engine Thread-157 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:05:55,678 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:05:55,678 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 01:05:55,682 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 01:05:55,682 INFO sqlalchemy.engine.base.Engine Thread-157 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:05:55,683 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:05:55,683 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 01:05:55,684 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-06-16 01:05:55,713 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-16 01:05:55,715 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-16 01:05:55,715 INFO sqlalchemy.engine.base.Engine Thread-158 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:05:55,716 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-16 01:05:55,717 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-16 01:05:55,717 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-16 01:05:55,717 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-16 01:05:55,717 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-16 01:05:55,717 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:05:55,717 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-16 01:05:55,722 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-16 01:05:55,722 INFO sqlalchemy.engine.base.Engine Thread-158 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:05:55,723 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:05:55,723 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-16 01:05:55,729 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-16 01:05:55,729 INFO sqlalchemy.engine.base.Engine Thread-158 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-16 01:05:55,730 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-16 01:05:55,730 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-16 01:05:55,731 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-16 01:05:55,765 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-06-16 01:05:55,766 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,768 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-06-16 01:05:55,771 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-06-16 01:05:55,771 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-06-16 01:05:55,772 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,782 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-06-16 01:05:55,775 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-06-16 01:05:55,779 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-06-16 01:05:55,781 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-06-16 01:05:55,786 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,786 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-06-16 01:05:55,784 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,784 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,787 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,787 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,776 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,783 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,785 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,811 INFO sqlalchemy.engine.base.Engine Thread-163 : (1, 1)
2020-06-16 01:05:55,805 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,811 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,811 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-06-16 01:05:55,811 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-06-16 01:05:55,812 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,804 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,825 INFO sqlalchemy.engine.base.Engine Thread-159 : (20, 1)
2020-06-16 01:05:55,812 INFO sqlalchemy.engine.base.Engine Thread-161 : (19, 1)
2020-06-16 01:05:55,813 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,813 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,828 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,826 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,827 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:05:55,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,828 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:05:55,812 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,838 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,839 INFO sqlalchemy.engine.base.Engine Thread-164 : (23, 1)
2020-06-16 01:05:55,840 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:05:55,850 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,851 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 01:05:55,851 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,852 INFO sqlalchemy.engine.base.Engine Thread-162 : (21, 1)
2020-06-16 01:05:55,853 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-06-16 01:05:55,853 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:05:55,853 INFO sqlalchemy.engine.base.Engine Thread-160 : (15, 1)
2020-06-16 01:05:55,854 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-06-16 01:05:55,864 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,866 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:05:55,867 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:05:55,868 INFO sqlalchemy.engine.base.Engine Thread-163 : (22, 1)
2020-06-16 01:05:55,869 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-06-16 01:05:55,869 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:05:55,870 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 01:05:55,872 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-16 01:05:55,875 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-06-16 01:05:55,874 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-06-16 01:05:55,873 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-16 01:05:55,876 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:05:55,877 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-06-16 01:05:55,887 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-06-16 01:05:55,888 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,889 INFO sqlalchemy.engine.base.Engine Thread-165 : (1, 1)
2020-06-16 01:05:55,891 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-06-16 01:05:55,892 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:55,892 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-06-16 01:05:55,893 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,893 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,898 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:55,904 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:55,928 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,934 INFO sqlalchemy.engine.base.Engine Thread-165 : (31, 1)
2020-06-16 01:05:55,940 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:05:55,941 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-16 01:05:55,942 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:05:55,943 INFO sqlalchemy.engine.base.Engine Thread-166 : (30, 1)
2020-06-16 01:05:55,944 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-06-16 01:05:55,944 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-16 01:05:55,947 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:05:55,948 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-06-16 01:05:59,150 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-06-16 01:05:59,151 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:59,151 INFO sqlalchemy.engine.base.Engine Thread-167 : (1, 1)
2020-06-16 01:05:59,151 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:59,152 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:59,159 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:05:59,160 INFO sqlalchemy.engine.base.Engine Thread-167 : (20,)
2020-06-16 01:05:59,160 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:05:59,161 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:05:59,162 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-06-16 01:05:59,175 INFO sqlalchemy.engine.base.Engine Thread-168 : BEGIN (implicit)
2020-06-16 01:05:59,176 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:05:59,176 INFO sqlalchemy.engine.base.Engine Thread-168 : (1, 1)
2020-06-16 01:05:59,176 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:05:59,177 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:05:59,180 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:05:59,180 INFO sqlalchemy.engine.base.Engine Thread-168 : (20,)
2020-06-16 01:05:59,181 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:05:59,181 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'test', 131)
2020-06-16 01:05:59,185 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:05:59,185 INFO sqlalchemy.engine.base.Engine Thread-168 : (20,)
2020-06-16 01:05:59,185 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:05:59,186 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:05:59,186 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:05:59,186 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:05:59,186 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:05:59,188 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:05:59,188 INFO sqlalchemy.engine.base.Engine Thread-168 : ()
2020-06-16 01:05:59,188 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:05:59,188 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:05:59,189 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:05:59,192 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:05:59,192 INFO sqlalchemy.engine.base.Engine Thread-168 : ()
2020-06-16 01:05:59,193 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:05:59,193 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:05:59,193 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:05:59,195 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:05:59,196 INFO sqlalchemy.engine.base.Engine Thread-168 : (20,)
2020-06-16 01:05:59,196 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:05:59,196 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:05:59,197 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:05:59,197 INFO sqlalchemy.engine.base.Engine Thread-168 : (1,)
2020-06-16 01:05:59,198 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexgroups_1_group_members',)
2020-06-16 01:05:59,198 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row ('1',)
2020-06-16 01:05:59,203 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:05:59,203 INFO sqlalchemy.engine.base.Engine Thread-168 : ('1',)
2020-06-16 01:05:59,203 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:05:59,204 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:05:59,205 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:05:59,205 INFO sqlalchemy.engine.base.Engine Thread-168 : (1, 1)
2020-06-16 01:05:59,205 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:05:59,205 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (5,)
2020-06-16 01:05:59,206 INFO sqlalchemy.engine.base.Engine Thread-168 : ROLLBACK
2020-06-16 01:06:14,668 INFO sqlalchemy.engine.base.Engine Thread-169 : BEGIN (implicit)
2020-06-16 01:06:14,669 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:14,669 INFO sqlalchemy.engine.base.Engine Thread-169 : (1, 1)
2020-06-16 01:06:14,670 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:14,671 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:14,679 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:14,679 INFO sqlalchemy.engine.base.Engine Thread-169 : (20,)
2020-06-16 01:06:14,680 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:06:14,680 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:06:14,682 INFO sqlalchemy.engine.base.Engine Thread-169 : ROLLBACK
2020-06-16 01:06:14,694 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-06-16 01:06:14,695 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:14,695 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-06-16 01:06:14,696 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:14,696 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:14,699 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:14,699 INFO sqlalchemy.engine.base.Engine Thread-170 : (20,)
2020-06-16 01:06:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:06:14,700 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'test', 131)
2020-06-16 01:06:14,704 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:06:14,704 INFO sqlalchemy.engine.base.Engine Thread-170 : (20,)
2020-06-16 01:06:14,705 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:06:14,705 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:06:14,705 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:06:14,705 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:06:14,705 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:06:14,707 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:06:14,707 INFO sqlalchemy.engine.base.Engine Thread-170 : ()
2020-06-16 01:06:14,708 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:06:14,708 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:06:14,708 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:06:14,711 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:06:14,711 INFO sqlalchemy.engine.base.Engine Thread-170 : ()
2020-06-16 01:06:14,712 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:06:14,713 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:06:14,713 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:06:14,715 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:14,715 INFO sqlalchemy.engine.base.Engine Thread-170 : (20,)
2020-06-16 01:06:14,716 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:06:14,716 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:06:14,717 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:06:14,717 INFO sqlalchemy.engine.base.Engine Thread-170 : (1,)
2020-06-16 01:06:14,717 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('complexgroups_1_group_members',)
2020-06-16 01:06:14,717 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row ('1',)
2020-06-16 01:06:14,725 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:06:14,725 INFO sqlalchemy.engine.base.Engine Thread-170 : ('1',)
2020-06-16 01:06:14,726 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:06:14,726 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:06:14,727 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:06:14,727 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-06-16 01:06:14,727 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:06:14,727 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (5,)
2020-06-16 01:06:14,744 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-06-16 01:06:22,848 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-06-16 01:06:22,849 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:22,849 INFO sqlalchemy.engine.base.Engine Thread-171 : (1, 1)
2020-06-16 01:06:22,850 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:22,850 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:22,860 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:22,860 INFO sqlalchemy.engine.base.Engine Thread-171 : (23,)
2020-06-16 01:06:22,861 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:06:22,861 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:06:22,863 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-06-16 01:06:22,878 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-06-16 01:06:22,879 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:22,880 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-06-16 01:06:22,880 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:22,880 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:22,884 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:22,884 INFO sqlalchemy.engine.base.Engine Thread-172 : (23,)
2020-06-16 01:06:22,885 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:06:22,885 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131)
2020-06-16 01:06:22,890 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:06:22,890 INFO sqlalchemy.engine.base.Engine Thread-172 : (23,)
2020-06-16 01:06:22,890 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:06:22,892 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:06:22,893 INFO sqlalchemy.engine.base.Engine Thread-172 : ()
2020-06-16 01:06:22,893 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:06:22,893 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:06:22,894 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:06:22,897 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:06:22,897 INFO sqlalchemy.engine.base.Engine Thread-172 : ()
2020-06-16 01:06:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:06:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:06:22,899 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:06:22,901 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:22,902 INFO sqlalchemy.engine.base.Engine Thread-172 : (23,)
2020-06-16 01:06:22,902 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:06:22,902 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (2, 'Zone 5 Complexes')
2020-06-16 01:06:22,903 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:06:22,904 INFO sqlalchemy.engine.base.Engine Thread-172 : (2,)
2020-06-16 01:06:22,904 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('complexgroups_1_group_members',)
2020-06-16 01:06:22,904 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row ('1,2',)
2020-06-16 01:06:22,910 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 01:06:22,910 INFO sqlalchemy.engine.base.Engine Thread-172 : ('1', '2')
2020-06-16 01:06:22,910 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:06:22,910 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:06:22,911 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (2, 'Made Up Fortigate')
2020-06-16 01:06:22,912 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:06:22,912 INFO sqlalchemy.engine.base.Engine Thread-172 : (2, 1)
2020-06-16 01:06:22,912 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:06:22,912 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (2,)
2020-06-16 01:06:22,914 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-06-16 01:06:29,252 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-06-16 01:06:29,253 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:29,253 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-06-16 01:06:29,253 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:29,254 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:29,263 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:29,263 INFO sqlalchemy.engine.base.Engine Thread-173 : (22,)
2020-06-16 01:06:29,263 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:06:29,264 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:06:29,265 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-06-16 01:06:29,282 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-06-16 01:06:29,283 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:29,284 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-06-16 01:06:29,284 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:29,284 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:29,288 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:29,288 INFO sqlalchemy.engine.base.Engine Thread-174 : (22,)
2020-06-16 01:06:29,289 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:06:29,289 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (22, 'Zone 5 BAU', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 test', 131)
2020-06-16 01:06:29,294 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:06:29,294 INFO sqlalchemy.engine.base.Engine Thread-174 : (22,)
2020-06-16 01:06:29,295 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:06:29,297 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:06:29,297 INFO sqlalchemy.engine.base.Engine Thread-174 : ()
2020-06-16 01:06:29,297 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:06:29,298 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:06:29,298 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:06:29,301 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:06:29,301 INFO sqlalchemy.engine.base.Engine Thread-174 : ()
2020-06-16 01:06:29,302 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:06:29,303 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:06:29,303 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:06:29,305 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:29,306 INFO sqlalchemy.engine.base.Engine Thread-174 : (22,)
2020-06-16 01:06:29,306 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:06:29,306 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (2, 'Zone 5 Complexes')
2020-06-16 01:06:29,307 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:06:29,307 INFO sqlalchemy.engine.base.Engine Thread-174 : (2,)
2020-06-16 01:06:29,308 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('complexgroups_1_group_members',)
2020-06-16 01:06:29,308 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row ('1,2',)
2020-06-16 01:06:29,313 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 01:06:29,313 INFO sqlalchemy.engine.base.Engine Thread-174 : ('1', '2')
2020-06-16 01:06:29,314 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:06:29,314 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:06:29,314 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (2, 'Made Up Fortigate')
2020-06-16 01:06:29,315 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:06:29,315 INFO sqlalchemy.engine.base.Engine Thread-174 : (2, 1)
2020-06-16 01:06:29,316 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:06:29,316 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (2,)
2020-06-16 01:06:29,317 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-06-16 01:06:45,705 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-06-16 01:06:45,706 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:45,706 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-06-16 01:06:45,707 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:45,707 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:45,719 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:45,719 INFO sqlalchemy.engine.base.Engine Thread-175 : (22,)
2020-06-16 01:06:45,720 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:06:45,721 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:06:45,722 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-06-16 01:06:45,738 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-06-16 01:06:45,739 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:45,739 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-06-16 01:06:45,740 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:45,740 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:45,744 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:45,744 INFO sqlalchemy.engine.base.Engine Thread-176 : (22,)
2020-06-16 01:06:45,744 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:06:45,745 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (22, 'Zone 5 BAU', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 test', 131)
2020-06-16 01:06:45,748 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:06:45,749 INFO sqlalchemy.engine.base.Engine Thread-176 : (22,)
2020-06-16 01:06:45,749 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:06:45,751 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:06:45,751 INFO sqlalchemy.engine.base.Engine Thread-176 : ()
2020-06-16 01:06:45,751 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:06:45,751 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:06:45,751 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:06:45,754 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:06:45,754 INFO sqlalchemy.engine.base.Engine Thread-176 : ()
2020-06-16 01:06:45,755 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:06:45,756 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:06:45,756 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:06:45,758 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:45,759 INFO sqlalchemy.engine.base.Engine Thread-176 : (22,)
2020-06-16 01:06:45,759 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:06:45,759 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (2, 'Zone 5 Complexes')
2020-06-16 01:06:45,760 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:06:45,760 INFO sqlalchemy.engine.base.Engine Thread-176 : (2,)
2020-06-16 01:06:45,760 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('complexgroups_1_group_members',)
2020-06-16 01:06:45,761 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row ('1,2',)
2020-06-16 01:06:45,768 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 01:06:45,768 INFO sqlalchemy.engine.base.Engine Thread-176 : ('1', '2')
2020-06-16 01:06:45,769 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:06:45,769 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:06:45,769 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (2, 'Made Up Fortigate')
2020-06-16 01:06:45,770 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:06:45,770 INFO sqlalchemy.engine.base.Engine Thread-176 : (2, 1)
2020-06-16 01:06:45,771 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:06:45,771 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (2,)
2020-06-16 01:06:45,787 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-06-16 01:06:48,709 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-06-16 01:06:48,710 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:48,710 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-06-16 01:06:48,710 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:48,711 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:48,719 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:48,719 INFO sqlalchemy.engine.base.Engine Thread-177 : (22,)
2020-06-16 01:06:48,719 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:06:48,720 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:06:48,721 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-06-16 01:06:48,736 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-06-16 01:06:48,737 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:48,737 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-06-16 01:06:48,738 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:48,738 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:48,742 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:48,742 INFO sqlalchemy.engine.base.Engine Thread-178 : (22,)
2020-06-16 01:06:48,742 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:06:48,743 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (22, 'Zone 5 BAU', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 test', 131)
2020-06-16 01:06:48,746 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:06:48,746 INFO sqlalchemy.engine.base.Engine Thread-178 : (22,)
2020-06-16 01:06:48,747 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:06:48,749 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:06:48,749 INFO sqlalchemy.engine.base.Engine Thread-178 : ()
2020-06-16 01:06:48,749 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:06:48,750 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:06:48,750 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:06:48,752 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:06:48,752 INFO sqlalchemy.engine.base.Engine Thread-178 : ()
2020-06-16 01:06:48,753 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:06:48,754 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:06:48,754 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:06:48,757 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:48,757 INFO sqlalchemy.engine.base.Engine Thread-178 : (22,)
2020-06-16 01:06:48,757 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:06:48,757 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Zone 5 Complexes')
2020-06-16 01:06:48,758 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:06:48,758 INFO sqlalchemy.engine.base.Engine Thread-178 : (2,)
2020-06-16 01:06:48,759 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexgroups_1_group_members',)
2020-06-16 01:06:48,759 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row ('1,2',)
2020-06-16 01:06:48,764 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-16 01:06:48,764 INFO sqlalchemy.engine.base.Engine Thread-178 : ('1', '2')
2020-06-16 01:06:48,764 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:06:48,765 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:06:48,765 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Made Up Fortigate')
2020-06-16 01:06:48,766 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:06:48,766 INFO sqlalchemy.engine.base.Engine Thread-178 : (2, 1)
2020-06-16 01:06:48,766 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:06:48,766 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2,)
2020-06-16 01:06:48,768 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-06-16 01:06:57,245 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-06-16 01:06:57,246 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:57,246 INFO sqlalchemy.engine.base.Engine Thread-179 : (1, 1)
2020-06-16 01:06:57,246 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:57,247 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:57,254 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:57,254 INFO sqlalchemy.engine.base.Engine Thread-179 : (20,)
2020-06-16 01:06:57,255 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-16 01:06:57,256 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-16 01:06:57,257 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-06-16 01:06:57,269 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-06-16 01:06:57,270 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-16 01:06:57,270 INFO sqlalchemy.engine.base.Engine Thread-180 : (1, 1)
2020-06-16 01:06:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-16 01:06:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-16 01:06:57,275 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:57,275 INFO sqlalchemy.engine.base.Engine Thread-180 : (20,)
2020-06-16 01:06:57,275 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-16 01:06:57,275 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'test', 131)
2020-06-16 01:06:57,279 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-16 01:06:57,279 INFO sqlalchemy.engine.base.Engine Thread-180 : (20,)
2020-06-16 01:06:57,280 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-16 01:06:57,280 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-16 01:06:57,280 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-16 01:06:57,280 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-16 01:06:57,280 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-16 01:06:57,282 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-16 01:06:57,282 INFO sqlalchemy.engine.base.Engine Thread-180 : ()
2020-06-16 01:06:57,283 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-16 01:06:57,283 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-16 01:06:57,283 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-16 01:06:57,286 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-16 01:06:57,286 INFO sqlalchemy.engine.base.Engine Thread-180 : ()
2020-06-16 01:06:57,287 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-16 01:06:57,287 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-16 01:06:57,288 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-16 01:06:57,290 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-16 01:06:57,290 INFO sqlalchemy.engine.base.Engine Thread-180 : (20,)
2020-06-16 01:06:57,291 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-16 01:06:57,291 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'Zone 2 Complexes')
2020-06-16 01:06:57,292 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-16 01:06:57,292 INFO sqlalchemy.engine.base.Engine Thread-180 : (1,)
2020-06-16 01:06:57,292 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('complexgroups_1_group_members',)
2020-06-16 01:06:57,292 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row ('1',)
2020-06-16 01:06:57,297 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-16 01:06:57,298 INFO sqlalchemy.engine.base.Engine Thread-180 : ('1',)
2020-06-16 01:06:57,298 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-16 01:06:57,298 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'Made Up CheckPoint')
2020-06-16 01:06:57,299 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-16 01:06:57,299 INFO sqlalchemy.engine.base.Engine Thread-180 : (1, 1)
2020-06-16 01:06:57,300 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('complexgroups_1_max_slots',)
2020-06-16 01:06:57,300 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (5,)
2020-06-16 01:06:57,301 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
