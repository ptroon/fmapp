2020-06-18 09:09:38,867 INFO sqlalchemy.engine.base.Engine Thread-292 : BEGIN (implicit)
2020-06-18 09:09:38,873 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:09:38,873 INFO sqlalchemy.engine.base.Engine Thread-292 : (1, 1)
2020-06-18 09:09:38,874 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:38,874 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:38,877 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 09:09:38,877 INFO sqlalchemy.engine.base.Engine Thread-292 : ('philip', 1, 1)
2020-06-18 09:09:38,878 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:38,878 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:38,881 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 09:09:38,882 INFO sqlalchemy.engine.base.Engine Thread-292 : (116,)
2020-06-18 09:09:38,882 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:09:38,883 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-18 09:09:38,883 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-18 09:09:38,883 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-18 09:09:38,883 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-18 09:09:38,884 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-18 09:09:38,884 INFO sqlalchemy.engine.base.Engine Thread-292 : ('OPERATIONS_EMAILS', 1)
2020-06-18 09:09:38,885 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:09:38,885 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-18 09:09:38,887 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-18 09:09:38,887 INFO sqlalchemy.engine.base.Engine Thread-292 : ('117', 1)
2020-06-18 09:09:38,887 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:09:38,888 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-06-18 09:09:38,893 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 09:09:38,893 INFO sqlalchemy.engine.base.Engine Thread-292 : ('philip', 1, 1)
2020-06-18 09:09:38,893 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:38,894 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:38,896 INFO sqlalchemy.engine.base.Engine Thread-292 : ROLLBACK
2020-06-18 09:09:39,136 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-06-18 09:09:39,137 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:09:39,137 INFO sqlalchemy.engine.base.Engine Thread-316 : (1, 1)
2020-06-18 09:09:39,138 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:39,138 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:39,139 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-06-18 09:09:39,219 INFO sqlalchemy.engine.base.Engine Thread-317 : BEGIN (implicit)
2020-06-18 09:09:39,220 INFO sqlalchemy.engine.base.Engine Thread-317 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:09:39,220 INFO sqlalchemy.engine.base.Engine Thread-317 : (1, 1)
2020-06-18 09:09:39,221 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:39,222 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:39,223 INFO sqlalchemy.engine.base.Engine Thread-317 : ROLLBACK
2020-06-18 09:09:39,229 INFO sqlalchemy.engine.base.Engine Thread-319 : BEGIN (implicit)
2020-06-18 09:09:39,231 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:09:39,231 INFO sqlalchemy.engine.base.Engine Thread-319 : (1, 1)
2020-06-18 09:09:39,234 INFO sqlalchemy.engine.base.Engine Thread-320 : BEGIN (implicit)
2020-06-18 09:09:39,235 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:09:39,236 INFO sqlalchemy.engine.base.Engine Thread-320 : (1, 1)
2020-06-18 09:09:39,236 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:39,237 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:39,238 INFO sqlalchemy.engine.base.Engine Thread-319 : ROLLBACK
2020-06-18 09:09:39,240 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-06-18 09:09:39,241 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:09:39,241 INFO sqlalchemy.engine.base.Engine Thread-318 : (1, 1)
2020-06-18 09:09:39,242 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:39,242 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:09:39,242 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:39,243 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:09:39,244 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-06-18 09:09:39,245 INFO sqlalchemy.engine.base.Engine Thread-320 : ROLLBACK
2020-06-18 09:11:14,503 INFO sqlalchemy.engine.base.Engine Thread-321 : BEGIN (implicit)
2020-06-18 09:11:14,504 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:14,504 INFO sqlalchemy.engine.base.Engine Thread-321 : (1, 1)
2020-06-18 09:11:14,506 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,506 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,509 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 09:11:14,509 INFO sqlalchemy.engine.base.Engine Thread-321 : ('philip', 1, 1)
2020-06-18 09:11:14,510 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,510 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,512 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 09:11:14,513 INFO sqlalchemy.engine.base.Engine Thread-321 : (116,)
2020-06-18 09:11:14,513 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:11:14,514 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-18 09:11:14,514 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-18 09:11:14,514 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-18 09:11:14,514 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-18 09:11:14,515 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-18 09:11:14,515 INFO sqlalchemy.engine.base.Engine Thread-321 : ('OPERATIONS_EMAILS', 1)
2020-06-18 09:11:14,516 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:11:14,516 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-18 09:11:14,518 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-18 09:11:14,518 INFO sqlalchemy.engine.base.Engine Thread-321 : ('119', 1)
2020-06-18 09:11:14,518 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:11:14,524 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 09:11:14,524 INFO sqlalchemy.engine.base.Engine Thread-321 : ('philip', 1, 1)
2020-06-18 09:11:14,524 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,525 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,527 INFO sqlalchemy.engine.base.Engine Thread-321 : ROLLBACK
2020-06-18 09:11:14,778 INFO sqlalchemy.engine.base.Engine Thread-331 : BEGIN (implicit)
2020-06-18 09:11:14,779 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:14,779 INFO sqlalchemy.engine.base.Engine Thread-331 : (1, 1)
2020-06-18 09:11:14,780 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,781 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,782 INFO sqlalchemy.engine.base.Engine Thread-331 : ROLLBACK
2020-06-18 09:11:14,877 INFO sqlalchemy.engine.base.Engine Thread-332 : BEGIN (implicit)
2020-06-18 09:11:14,878 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:14,880 INFO sqlalchemy.engine.base.Engine Thread-332 : (1, 1)
2020-06-18 09:11:14,880 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,881 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,883 INFO sqlalchemy.engine.base.Engine Thread-333 : BEGIN (implicit)
2020-06-18 09:11:14,884 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:14,884 INFO sqlalchemy.engine.base.Engine Thread-333 : (1, 1)
2020-06-18 09:11:14,886 INFO sqlalchemy.engine.base.Engine Thread-332 : ROLLBACK
2020-06-18 09:11:14,888 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,892 INFO sqlalchemy.engine.base.Engine Thread-335 : BEGIN (implicit)
2020-06-18 09:11:14,893 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,897 INFO sqlalchemy.engine.base.Engine Thread-333 : ROLLBACK
2020-06-18 09:11:14,896 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:14,895 INFO sqlalchemy.engine.base.Engine Thread-334 : BEGIN (implicit)
2020-06-18 09:11:14,898 INFO sqlalchemy.engine.base.Engine Thread-335 : (1, 1)
2020-06-18 09:11:14,899 INFO sqlalchemy.engine.base.Engine Thread-334 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:14,900 INFO sqlalchemy.engine.base.Engine Thread-334 : (1, 1)
2020-06-18 09:11:14,900 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,901 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:14,901 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,901 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:14,903 INFO sqlalchemy.engine.base.Engine Thread-334 : ROLLBACK
2020-06-18 09:11:14,904 INFO sqlalchemy.engine.base.Engine Thread-335 : ROLLBACK
2020-06-18 09:11:17,423 INFO sqlalchemy.engine.base.Engine Thread-336 : BEGIN (implicit)
2020-06-18 09:11:17,424 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:17,424 INFO sqlalchemy.engine.base.Engine Thread-336 : (1, 1)
2020-06-18 09:11:17,425 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,425 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,427 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 09:11:17,427 INFO sqlalchemy.engine.base.Engine Thread-336 : ('philip', 1, 1)
2020-06-18 09:11:17,428 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,428 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,430 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 09:11:17,430 INFO sqlalchemy.engine.base.Engine Thread-336 : (116,)
2020-06-18 09:11:17,431 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:11:17,431 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-18 09:11:17,431 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-18 09:11:17,431 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-18 09:11:17,431 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-18 09:11:17,432 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-18 09:11:17,432 INFO sqlalchemy.engine.base.Engine Thread-336 : ('OPERATIONS_EMAILS', 1)
2020-06-18 09:11:17,433 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:11:17,433 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-18 09:11:17,434 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-18 09:11:17,434 INFO sqlalchemy.engine.base.Engine Thread-336 : ('137', 1)
2020-06-18 09:11:17,435 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 09:11:17,439 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 09:11:17,439 INFO sqlalchemy.engine.base.Engine Thread-336 : ('philip', 1, 1)
2020-06-18 09:11:17,440 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,440 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,441 INFO sqlalchemy.engine.base.Engine Thread-336 : ROLLBACK
2020-06-18 09:11:17,686 INFO sqlalchemy.engine.base.Engine Thread-346 : BEGIN (implicit)
2020-06-18 09:11:17,688 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:17,688 INFO sqlalchemy.engine.base.Engine Thread-346 : (1, 1)
2020-06-18 09:11:17,689 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,689 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,690 INFO sqlalchemy.engine.base.Engine Thread-346 : ROLLBACK
2020-06-18 09:11:17,752 INFO sqlalchemy.engine.base.Engine Thread-348 : BEGIN (implicit)
2020-06-18 09:11:17,754 INFO sqlalchemy.engine.base.Engine Thread-347 : BEGIN (implicit)
2020-06-18 09:11:17,756 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:17,765 INFO sqlalchemy.engine.base.Engine Thread-348 : (1, 1)
2020-06-18 09:11:17,757 INFO sqlalchemy.engine.base.Engine Thread-347 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:17,765 INFO sqlalchemy.engine.base.Engine Thread-347 : (1, 1)
2020-06-18 09:11:17,759 INFO sqlalchemy.engine.base.Engine Thread-349 : BEGIN (implicit)
2020-06-18 09:11:17,762 INFO sqlalchemy.engine.base.Engine Thread-350 : BEGIN (implicit)
2020-06-18 09:11:17,767 INFO sqlalchemy.engine.base.Engine Thread-349 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:17,770 INFO sqlalchemy.engine.base.Engine Thread-349 : (1, 1)
2020-06-18 09:11:17,767 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,769 INFO sqlalchemy.engine.base.Engine Thread-350 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 09:11:17,771 INFO sqlalchemy.engine.base.Engine Thread-350 : (1, 1)
2020-06-18 09:11:17,770 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,771 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,773 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,772 INFO sqlalchemy.engine.base.Engine Thread-348 : ROLLBACK
2020-06-18 09:11:17,767 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,775 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,774 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 09:11:17,776 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 09:11:17,776 INFO sqlalchemy.engine.base.Engine Thread-347 : ROLLBACK
2020-06-18 09:11:17,777 INFO sqlalchemy.engine.base.Engine Thread-350 : ROLLBACK
2020-06-18 09:11:17,774 INFO sqlalchemy.engine.base.Engine Thread-349 : ROLLBACK
2020-06-18 14:22:31,562 INFO sqlalchemy.engine.base.Engine Thread-355 : BEGIN (implicit)
2020-06-18 14:22:31,569 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 14:22:31,569 INFO sqlalchemy.engine.base.Engine Thread-355 : ()
2020-06-18 14:22:31,570 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 14:22:31,571 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 14:22:31,571 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 14:22:31,572 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 14:22:31,573 INFO sqlalchemy.engine.base.Engine Thread-355 : (100,)
2020-06-18 14:22:31,573 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:22:31,573 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 14:22:31,574 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 14:22:31,574 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 14:22:31,574 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 14:22:31,574 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 14:22:31,576 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:31,576 INFO sqlalchemy.engine.base.Engine Thread-355 : (1, 1)
2020-06-18 14:22:31,577 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:31,577 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:31,588 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:31,588 INFO sqlalchemy.engine.base.Engine Thread-355 : ('philip', 1, 1)
2020-06-18 14:22:31,588 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:31,589 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:31,590 INFO sqlalchemy.engine.base.Engine Thread-355 : ROLLBACK
2020-06-18 14:22:31,858 INFO sqlalchemy.engine.base.Engine Thread-365 : BEGIN (implicit)
2020-06-18 14:22:31,859 INFO sqlalchemy.engine.base.Engine Thread-365 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:31,860 INFO sqlalchemy.engine.base.Engine Thread-365 : (1, 1)
2020-06-18 14:22:31,860 DEBUG sqlalchemy.engine.base.Engine Thread-365 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:31,860 DEBUG sqlalchemy.engine.base.Engine Thread-365 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:31,861 INFO sqlalchemy.engine.base.Engine Thread-365 : ROLLBACK
2020-06-18 14:22:31,961 INFO sqlalchemy.engine.base.Engine Thread-366 : BEGIN (implicit)
2020-06-18 14:22:31,962 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:31,963 INFO sqlalchemy.engine.base.Engine Thread-366 : (1, 1)
2020-06-18 14:22:31,966 INFO sqlalchemy.engine.base.Engine Thread-368 : BEGIN (implicit)
2020-06-18 14:22:31,967 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:31,966 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:31,972 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:31,973 INFO sqlalchemy.engine.base.Engine Thread-366 : ROLLBACK
2020-06-18 14:22:31,971 INFO sqlalchemy.engine.base.Engine Thread-368 : (1, 1)
2020-06-18 14:22:31,971 INFO sqlalchemy.engine.base.Engine Thread-367 : BEGIN (implicit)
2020-06-18 14:22:31,970 INFO sqlalchemy.engine.base.Engine Thread-369 : BEGIN (implicit)
2020-06-18 14:22:31,974 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:31,975 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:31,977 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:31,977 INFO sqlalchemy.engine.base.Engine Thread-367 : (1, 1)
2020-06-18 14:22:31,977 INFO sqlalchemy.engine.base.Engine Thread-369 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:31,978 INFO sqlalchemy.engine.base.Engine Thread-369 : (1, 1)
2020-06-18 14:22:31,978 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:31,978 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:31,979 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:31,980 INFO sqlalchemy.engine.base.Engine Thread-367 : ROLLBACK
2020-06-18 14:22:31,980 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:31,982 INFO sqlalchemy.engine.base.Engine Thread-369 : ROLLBACK
2020-06-18 14:22:31,981 INFO sqlalchemy.engine.base.Engine Thread-368 : ROLLBACK
2020-06-18 14:22:32,836 INFO sqlalchemy.engine.base.Engine Thread-370 : BEGIN (implicit)
2020-06-18 14:22:32,839 INFO sqlalchemy.engine.base.Engine Thread-370 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 14:22:32,839 INFO sqlalchemy.engine.base.Engine Thread-370 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 14:22:32,841 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 14:22:32,842 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 14:22:32,848 INFO sqlalchemy.engine.base.Engine Thread-370 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 14:22:32,848 INFO sqlalchemy.engine.base.Engine Thread-370 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 14:22:32,850 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 14:22:32,850 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 14:22:32,855 INFO sqlalchemy.engine.base.Engine Thread-370 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 14:22:32,855 INFO sqlalchemy.engine.base.Engine Thread-370 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 14:22:32,856 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 14:22:32,856 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 14:22:32,858 INFO sqlalchemy.engine.base.Engine Thread-370 : ROLLBACK
2020-06-18 14:22:32,885 INFO sqlalchemy.engine.base.Engine Thread-371 : BEGIN (implicit)
2020-06-18 14:22:32,887 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 14:22:32,888 INFO sqlalchemy.engine.base.Engine Thread-371 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 14:22:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 14:22:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 14:22:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 14:22:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 14:22:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 14:22:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 14:22:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 14:22:32,891 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 14:22:32,891 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 14:22:32,891 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 14:22:32,895 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 14:22:32,895 INFO sqlalchemy.engine.base.Engine Thread-371 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 14:22:32,896 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 14:22:32,896 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 14:22:32,901 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 14:22:32,901 INFO sqlalchemy.engine.base.Engine Thread-371 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 14:22:32,902 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 14:22:32,902 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 14:22:32,903 INFO sqlalchemy.engine.base.Engine Thread-371 : ROLLBACK
2020-06-18 14:22:32,933 INFO sqlalchemy.engine.base.Engine Thread-372 : BEGIN (implicit)
2020-06-18 14:22:32,935 INFO sqlalchemy.engine.base.Engine Thread-372 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:32,935 INFO sqlalchemy.engine.base.Engine Thread-372 : (1, 1)
2020-06-18 14:22:32,937 INFO sqlalchemy.engine.base.Engine Thread-373 : BEGIN (implicit)
2020-06-18 14:22:32,940 INFO sqlalchemy.engine.base.Engine Thread-374 : BEGIN (implicit)
2020-06-18 14:22:32,941 INFO sqlalchemy.engine.base.Engine Thread-373 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:32,942 INFO sqlalchemy.engine.base.Engine Thread-373 : (1, 1)
2020-06-18 14:22:32,942 INFO sqlalchemy.engine.base.Engine Thread-374 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:32,943 INFO sqlalchemy.engine.base.Engine Thread-374 : (1, 1)
2020-06-18 14:22:32,941 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:32,943 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:32,949 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:32,949 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:32,946 INFO sqlalchemy.engine.base.Engine Thread-375 : BEGIN (implicit)
2020-06-18 14:22:32,961 INFO sqlalchemy.engine.base.Engine Thread-375 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:32,961 INFO sqlalchemy.engine.base.Engine Thread-375 : (1, 1)
2020-06-18 14:22:32,970 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:32,976 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:32,976 INFO sqlalchemy.engine.base.Engine Thread-376 : BEGIN (implicit)
2020-06-18 14:22:32,975 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:32,979 INFO sqlalchemy.engine.base.Engine Thread-372 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:32,992 INFO sqlalchemy.engine.base.Engine Thread-372 : (19, 1)
2020-06-18 14:22:32,981 INFO sqlalchemy.engine.base.Engine Thread-373 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:32,993 INFO sqlalchemy.engine.base.Engine Thread-373 : (15, 1)
2020-06-18 14:22:32,992 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:32,993 INFO sqlalchemy.engine.base.Engine Thread-376 : (1, 1)
2020-06-18 14:22:32,992 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:32,987 INFO sqlalchemy.engine.base.Engine Thread-377 : BEGIN (implicit)
2020-06-18 14:22:32,991 INFO sqlalchemy.engine.base.Engine Thread-374 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:32,999 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:33,042 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:33,005 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,006 INFO sqlalchemy.engine.base.Engine Thread-374 : (21, 1)
2020-06-18 14:22:33,006 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:33,049 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 14:22:33,051 INFO sqlalchemy.engine.base.Engine Thread-375 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,069 INFO sqlalchemy.engine.base.Engine Thread-375 : (20, 1)
2020-06-18 14:22:33,056 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,057 INFO sqlalchemy.engine.base.Engine Thread-377 : (1, 1)
2020-06-18 14:22:33,057 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,056 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,075 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 14:22:33,079 INFO sqlalchemy.engine.base.Engine Thread-373 : ROLLBACK
2020-06-18 14:22:33,080 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,082 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 14:22:33,082 INFO sqlalchemy.engine.base.Engine Thread-376 : (22, 1)
2020-06-18 14:22:33,082 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:33,083 INFO sqlalchemy.engine.base.Engine Thread-372 : ROLLBACK
2020-06-18 14:22:33,084 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 14:22:33,086 INFO sqlalchemy.engine.base.Engine Thread-374 : ROLLBACK
2020-06-18 14:22:33,087 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:33,088 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,090 INFO sqlalchemy.engine.base.Engine Thread-375 : ROLLBACK
2020-06-18 14:22:33,101 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,109 INFO sqlalchemy.engine.base.Engine Thread-377 : (23, 1)
2020-06-18 14:22:33,106 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 14:22:33,108 INFO sqlalchemy.engine.base.Engine Thread-379 : BEGIN (implicit)
2020-06-18 14:22:33,104 INFO sqlalchemy.engine.base.Engine Thread-378 : BEGIN (implicit)
2020-06-18 14:22:33,111 INFO sqlalchemy.engine.base.Engine Thread-376 : ROLLBACK
2020-06-18 14:22:33,111 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,112 INFO sqlalchemy.engine.base.Engine Thread-379 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:33,118 INFO sqlalchemy.engine.base.Engine Thread-379 : (1, 1)
2020-06-18 14:22:33,116 INFO sqlalchemy.engine.base.Engine Thread-380 : BEGIN (implicit)
2020-06-18 14:22:33,119 INFO sqlalchemy.engine.base.Engine Thread-380 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:33,113 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:33,120 INFO sqlalchemy.engine.base.Engine Thread-380 : (1, 1)
2020-06-18 14:22:33,118 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 14:22:33,120 DEBUG sqlalchemy.engine.base.Engine Thread-379 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:33,123 INFO sqlalchemy.engine.base.Engine Thread-381 : BEGIN (implicit)
2020-06-18 14:22:33,123 INFO sqlalchemy.engine.base.Engine Thread-378 : (1, 1)
2020-06-18 14:22:33,124 INFO sqlalchemy.engine.base.Engine Thread-377 : ROLLBACK
2020-06-18 14:22:33,124 DEBUG sqlalchemy.engine.base.Engine Thread-379 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:33,125 DEBUG sqlalchemy.engine.base.Engine Thread-380 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:33,137 DEBUG sqlalchemy.engine.base.Engine Thread-380 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:33,126 INFO sqlalchemy.engine.base.Engine Thread-381 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:33,144 INFO sqlalchemy.engine.base.Engine Thread-379 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,152 INFO sqlalchemy.engine.base.Engine Thread-379 : (56, 1)
2020-06-18 14:22:33,144 INFO sqlalchemy.engine.base.Engine Thread-381 : (1, 1)
2020-06-18 14:22:33,147 INFO sqlalchemy.engine.base.Engine Thread-382 : BEGIN (implicit)
2020-06-18 14:22:33,152 INFO sqlalchemy.engine.base.Engine Thread-380 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,144 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:33,153 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:33,155 INFO sqlalchemy.engine.base.Engine Thread-382 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:33,155 INFO sqlalchemy.engine.base.Engine Thread-380 : (57, 1)
2020-06-18 14:22:33,155 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:33,156 DEBUG sqlalchemy.engine.base.Engine Thread-379 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,156 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:33,156 INFO sqlalchemy.engine.base.Engine Thread-382 : (1, 1)
2020-06-18 14:22:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-379 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 14:22:33,195 INFO sqlalchemy.engine.base.Engine Thread-379 : ROLLBACK
2020-06-18 14:22:33,181 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,196 INFO sqlalchemy.engine.base.Engine Thread-378 : (27, 1)
2020-06-18 14:22:33,194 INFO sqlalchemy.engine.base.Engine Thread-381 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,195 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:33,196 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:33,173 DEBUG sqlalchemy.engine.base.Engine Thread-380 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,196 INFO sqlalchemy.engine.base.Engine Thread-381 : (31, 1)
2020-06-18 14:22:33,203 DEBUG sqlalchemy.engine.base.Engine Thread-380 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 14:22:33,203 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:33,211 INFO sqlalchemy.engine.base.Engine Thread-380 : ROLLBACK
2020-06-18 14:22:33,218 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 14:22:33,226 INFO sqlalchemy.engine.base.Engine Thread-382 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 14:22:33,227 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 14:22:33,230 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 14:22:33,231 INFO sqlalchemy.engine.base.Engine Thread-382 : (30, 1)
2020-06-18 14:22:33,232 INFO sqlalchemy.engine.base.Engine Thread-378 : ROLLBACK
2020-06-18 14:22:33,233 INFO sqlalchemy.engine.base.Engine Thread-381 : ROLLBACK
2020-06-18 14:22:33,235 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 14:22:33,237 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 14:22:33,238 INFO sqlalchemy.engine.base.Engine Thread-382 : ROLLBACK
2020-06-18 14:22:34,711 INFO sqlalchemy.engine.base.Engine Thread-383 : BEGIN (implicit)
2020-06-18 14:22:34,712 INFO sqlalchemy.engine.base.Engine Thread-383 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:34,712 INFO sqlalchemy.engine.base.Engine Thread-383 : (1, 1)
2020-06-18 14:22:34,713 DEBUG sqlalchemy.engine.base.Engine Thread-383 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:34,713 DEBUG sqlalchemy.engine.base.Engine Thread-383 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:34,721 INFO sqlalchemy.engine.base.Engine Thread-383 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-18 14:22:34,721 INFO sqlalchemy.engine.base.Engine Thread-383 : (57,)
2020-06-18 14:22:34,722 DEBUG sqlalchemy.engine.base.Engine Thread-383 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-18 14:22:34,723 DEBUG sqlalchemy.engine.base.Engine Thread-383 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-18 14:22:34,724 INFO sqlalchemy.engine.base.Engine Thread-383 : ROLLBACK
2020-06-18 14:22:34,738 INFO sqlalchemy.engine.base.Engine Thread-384 : BEGIN (implicit)
2020-06-18 14:22:34,739 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:34,739 INFO sqlalchemy.engine.base.Engine Thread-384 : (1, 1)
2020-06-18 14:22:34,739 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:34,740 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:34,744 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-18 14:22:34,744 INFO sqlalchemy.engine.base.Engine Thread-384 : (57,)
2020-06-18 14:22:34,744 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-18 14:22:34,745 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131)
2020-06-18 14:22:34,748 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-18 14:22:34,748 INFO sqlalchemy.engine.base.Engine Thread-384 : (57,)
2020-06-18 14:22:34,749 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-18 14:22:34,751 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-18 14:22:34,751 INFO sqlalchemy.engine.base.Engine Thread-384 : ()
2020-06-18 14:22:34,752 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-18 14:22:34,752 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 14:22:34,752 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 14:22:34,757 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 14:22:34,757 INFO sqlalchemy.engine.base.Engine Thread-384 : ()
2020-06-18 14:22:34,758 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 14:22:34,759 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 14:22:34,759 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 14:22:34,761 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-18 14:22:34,761 INFO sqlalchemy.engine.base.Engine Thread-384 : (57,)
2020-06-18 14:22:34,762 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-18 14:22:34,762 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (1, 'Zone 2 Complexes')
2020-06-18 14:22:34,763 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-18 14:22:34,763 INFO sqlalchemy.engine.base.Engine Thread-384 : (1,)
2020-06-18 14:22:34,763 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('complexgroups_1_group_members',)
2020-06-18 14:22:34,764 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row ('1',)
2020-06-18 14:22:34,769 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-18 14:22:34,769 INFO sqlalchemy.engine.base.Engine Thread-384 : ('1',)
2020-06-18 14:22:34,769 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-18 14:22:34,770 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (1, 'Made Up CheckPoint')
2020-06-18 14:22:34,771 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-18 14:22:34,771 INFO sqlalchemy.engine.base.Engine Thread-384 : (1, 1)
2020-06-18 14:22:34,771 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('complexgroups_1_max_slots',)
2020-06-18 14:22:34,771 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (5,)
2020-06-18 14:22:34,789 INFO sqlalchemy.engine.base.Engine Thread-384 : ROLLBACK
2020-06-18 14:22:39,560 INFO sqlalchemy.engine.base.Engine Thread-385 : BEGIN (implicit)
2020-06-18 14:22:39,561 INFO sqlalchemy.engine.base.Engine Thread-385 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:39,561 INFO sqlalchemy.engine.base.Engine Thread-385 : (1, 1)
2020-06-18 14:22:39,562 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,562 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,564 INFO sqlalchemy.engine.base.Engine Thread-385 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:39,564 INFO sqlalchemy.engine.base.Engine Thread-385 : ('philip', 1, 1)
2020-06-18 14:22:39,565 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,565 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,567 INFO sqlalchemy.engine.base.Engine Thread-385 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 14:22:39,567 INFO sqlalchemy.engine.base.Engine Thread-385 : (132,)
2020-06-18 14:22:39,567 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:22:39,568 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 14:22:39,568 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 14:22:39,568 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 14:22:39,568 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 14:22:39,576 INFO sqlalchemy.engine.base.Engine Thread-385 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-18 14:22:39,577 INFO sqlalchemy.engine.base.Engine Thread-385 : (datetime.datetime(2020, 6, 18, 14, 22, 39, 568575), datetime.datetime(2020, 7, 2, 14, 22, 39, 568575), datetime.datetime(2020, 6, 18, 14, 22, 39, 568575), datetime.datetime(2020, 7, 2, 14, 22, 39, 568575), datetime.datetime(2020, 6, 18, 14, 22, 39, 568575), datetime.datetime(2020, 7, 2, 14, 22, 39, 568575))
2020-06-18 14:22:39,577 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-18 14:22:39,577 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-18 14:22:39,578 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (27, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-18 14:22:39,578 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-18 14:22:39,582 INFO sqlalchemy.engine.base.Engine Thread-385 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:39,582 INFO sqlalchemy.engine.base.Engine Thread-385 : ('philip', 1, 1)
2020-06-18 14:22:39,583 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,583 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,585 INFO sqlalchemy.engine.base.Engine Thread-385 : ROLLBACK
2020-06-18 14:22:39,862 INFO sqlalchemy.engine.base.Engine Thread-396 : BEGIN (implicit)
2020-06-18 14:22:39,863 INFO sqlalchemy.engine.base.Engine Thread-396 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:39,863 INFO sqlalchemy.engine.base.Engine Thread-396 : (1, 1)
2020-06-18 14:22:39,866 INFO sqlalchemy.engine.base.Engine Thread-397 : BEGIN (implicit)
2020-06-18 14:22:39,867 INFO sqlalchemy.engine.base.Engine Thread-397 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:39,867 INFO sqlalchemy.engine.base.Engine Thread-397 : (1, 1)
2020-06-18 14:22:39,867 DEBUG sqlalchemy.engine.base.Engine Thread-396 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,868 DEBUG sqlalchemy.engine.base.Engine Thread-396 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,869 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,871 INFO sqlalchemy.engine.base.Engine Thread-398 : BEGIN (implicit)
2020-06-18 14:22:39,872 INFO sqlalchemy.engine.base.Engine Thread-396 : ROLLBACK
2020-06-18 14:22:39,873 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,875 INFO sqlalchemy.engine.base.Engine Thread-398 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:39,879 INFO sqlalchemy.engine.base.Engine Thread-398 : (1, 1)
2020-06-18 14:22:39,878 INFO sqlalchemy.engine.base.Engine Thread-397 : ROLLBACK
2020-06-18 14:22:39,877 INFO sqlalchemy.engine.base.Engine Thread-399 : BEGIN (implicit)
2020-06-18 14:22:39,881 INFO sqlalchemy.engine.base.Engine Thread-399 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:39,882 INFO sqlalchemy.engine.base.Engine Thread-399 : (1, 1)
2020-06-18 14:22:39,880 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,882 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,883 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,883 INFO sqlalchemy.engine.base.Engine Thread-398 : ROLLBACK
2020-06-18 14:22:39,884 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,885 INFO sqlalchemy.engine.base.Engine Thread-399 : ROLLBACK
2020-06-18 14:22:39,910 INFO sqlalchemy.engine.base.Engine Thread-400 : BEGIN (implicit)
2020-06-18 14:22:39,910 INFO sqlalchemy.engine.base.Engine Thread-400 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:39,911 INFO sqlalchemy.engine.base.Engine Thread-400 : (1, 1)
2020-06-18 14:22:39,911 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:39,911 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:39,912 INFO sqlalchemy.engine.base.Engine Thread-400 : ROLLBACK
2020-06-18 14:22:44,793 INFO sqlalchemy.engine.base.Engine Thread-401 : BEGIN (implicit)
2020-06-18 14:22:44,794 INFO sqlalchemy.engine.base.Engine Thread-401 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:44,794 INFO sqlalchemy.engine.base.Engine Thread-401 : (1, 1)
2020-06-18 14:22:44,795 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:44,795 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:44,798 INFO sqlalchemy.engine.base.Engine Thread-401 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.id
2020-06-18 14:22:44,798 INFO sqlalchemy.engine.base.Engine Thread-401 : (138,)
2020-06-18 14:22:44,799 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:22:44,799 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Row (139, 'Copy to date', '1', 138, 0, 0, 0)
2020-06-18 14:22:44,799 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Row (140, 'Repeat weekly until date', '7', 138, 0, 0, 0)
2020-06-18 14:22:44,799 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Row (141, 'Repeat fortnightly until date', '14', 138, 0, 0, 0)
2020-06-18 14:22:44,799 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Row (142, 'Repeat monthly until date', '28', 138, 0, 0, 0)
2020-06-18 14:22:44,810 INFO sqlalchemy.engine.base.Engine Thread-401 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 14:22:44,810 INFO sqlalchemy.engine.base.Engine Thread-401 : (27, 1)
2020-06-18 14:22:44,811 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 14:22:44,812 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 14:22:44,829 INFO sqlalchemy.engine.base.Engine Thread-401 : ROLLBACK
2020-06-18 14:22:48,720 INFO sqlalchemy.engine.base.Engine Thread-403 : BEGIN (implicit)
2020-06-18 14:22:48,721 INFO sqlalchemy.engine.base.Engine Thread-403 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:48,721 INFO sqlalchemy.engine.base.Engine Thread-403 : (1, 1)
2020-06-18 14:22:48,722 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:48,722 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:48,725 INFO sqlalchemy.engine.base.Engine Thread-403 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.id
2020-06-18 14:22:48,725 INFO sqlalchemy.engine.base.Engine Thread-403 : (138,)
2020-06-18 14:22:48,725 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:22:48,726 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Row (139, 'Copy to date', '1', 138, 0, 0, 0)
2020-06-18 14:22:48,726 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Row (140, 'Repeat weekly until date', '7', 138, 0, 0, 0)
2020-06-18 14:22:48,726 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Row (141, 'Repeat fortnightly until date', '14', 138, 0, 0, 0)
2020-06-18 14:22:48,726 DEBUG sqlalchemy.engine.base.Engine Thread-403 : Row (142, 'Repeat monthly until date', '28', 138, 0, 0, 0)
2020-06-18 14:22:48,728 INFO sqlalchemy.engine.base.Engine Thread-403 : ROLLBACK
2020-06-18 14:22:48,784 INFO sqlalchemy.engine.base.Engine Thread-404 : BEGIN (implicit)
2020-06-18 14:22:48,785 INFO sqlalchemy.engine.base.Engine Thread-404 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:48,785 INFO sqlalchemy.engine.base.Engine Thread-404 : (1, 1)
2020-06-18 14:22:48,786 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:48,786 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:48,788 INFO sqlalchemy.engine.base.Engine Thread-404 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:48,788 INFO sqlalchemy.engine.base.Engine Thread-404 : ('philip', 1, 1)
2020-06-18 14:22:48,789 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:48,789 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:48,791 INFO sqlalchemy.engine.base.Engine Thread-404 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 14:22:48,792 INFO sqlalchemy.engine.base.Engine Thread-404 : (132,)
2020-06-18 14:22:48,792 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:22:48,792 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 14:22:48,792 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 14:22:48,793 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 14:22:48,793 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 14:22:48,802 INFO sqlalchemy.engine.base.Engine Thread-404 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS hap, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-18 14:22:48,802 INFO sqlalchemy.engine.base.Engine Thread-404 : (datetime.datetime(2020, 6, 18, 14, 22, 48, 793457), datetime.datetime(2020, 7, 2, 14, 22, 48, 793457), datetime.datetime(2020, 6, 18, 14, 22, 48, 793457), datetime.datetime(2020, 7, 2, 14, 22, 48, 793457), datetime.datetime(2020, 6, 18, 14, 22, 48, 793457), datetime.datetime(2020, 7, 2, 14, 22, 48, 793457))
2020-06-18 14:22:48,803 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'hap', 'type')
2020-06-18 14:22:48,803 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-18 14:22:48,803 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (27, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-18 14:22:48,804 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-18 14:22:48,808 INFO sqlalchemy.engine.base.Engine Thread-404 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:48,808 INFO sqlalchemy.engine.base.Engine Thread-404 : ('philip', 1, 1)
2020-06-18 14:22:48,809 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:48,809 DEBUG sqlalchemy.engine.base.Engine Thread-404 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:48,813 INFO sqlalchemy.engine.base.Engine Thread-404 : ROLLBACK
2020-06-18 14:22:49,060 INFO sqlalchemy.engine.base.Engine Thread-415 : BEGIN (implicit)
2020-06-18 14:22:49,061 INFO sqlalchemy.engine.base.Engine Thread-415 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:49,061 INFO sqlalchemy.engine.base.Engine Thread-415 : (1, 1)
2020-06-18 14:22:49,063 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:49,066 INFO sqlalchemy.engine.base.Engine Thread-414 : BEGIN (implicit)
2020-06-18 14:22:49,066 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:49,069 INFO sqlalchemy.engine.base.Engine Thread-417 : BEGIN (implicit)
2020-06-18 14:22:49,070 INFO sqlalchemy.engine.base.Engine Thread-414 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:49,072 INFO sqlalchemy.engine.base.Engine Thread-416 : BEGIN (implicit)
2020-06-18 14:22:49,073 INFO sqlalchemy.engine.base.Engine Thread-415 : ROLLBACK
2020-06-18 14:22:49,074 INFO sqlalchemy.engine.base.Engine Thread-417 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:49,074 INFO sqlalchemy.engine.base.Engine Thread-414 : (1, 1)
2020-06-18 14:22:49,075 INFO sqlalchemy.engine.base.Engine Thread-416 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:49,076 INFO sqlalchemy.engine.base.Engine Thread-416 : (1, 1)
2020-06-18 14:22:49,075 INFO sqlalchemy.engine.base.Engine Thread-417 : (1, 1)
2020-06-18 14:22:49,077 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:49,078 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:49,078 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:49,079 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:49,077 DEBUG sqlalchemy.engine.base.Engine Thread-416 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:49,081 DEBUG sqlalchemy.engine.base.Engine Thread-416 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:49,081 INFO sqlalchemy.engine.base.Engine Thread-417 : ROLLBACK
2020-06-18 14:22:49,082 INFO sqlalchemy.engine.base.Engine Thread-416 : ROLLBACK
2020-06-18 14:22:49,080 INFO sqlalchemy.engine.base.Engine Thread-414 : ROLLBACK
2020-06-18 14:22:49,115 INFO sqlalchemy.engine.base.Engine Thread-418 : BEGIN (implicit)
2020-06-18 14:22:49,116 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:49,116 INFO sqlalchemy.engine.base.Engine Thread-418 : (1, 1)
2020-06-18 14:22:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:49,118 INFO sqlalchemy.engine.base.Engine Thread-418 : ROLLBACK
2020-06-18 14:22:55,605 INFO sqlalchemy.engine.base.Engine Thread-419 : BEGIN (implicit)
2020-06-18 14:22:55,606 INFO sqlalchemy.engine.base.Engine Thread-419 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:55,606 INFO sqlalchemy.engine.base.Engine Thread-419 : (1, 1)
2020-06-18 14:22:55,607 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,607 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,610 INFO sqlalchemy.engine.base.Engine Thread-419 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:55,610 INFO sqlalchemy.engine.base.Engine Thread-419 : ('philip', 1, 1)
2020-06-18 14:22:55,611 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,611 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,629 INFO sqlalchemy.engine.base.Engine Thread-419 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:55,629 INFO sqlalchemy.engine.base.Engine Thread-419 : ('philip', 1, 1)
2020-06-18 14:22:55,630 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,630 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,634 INFO sqlalchemy.engine.base.Engine Thread-419 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-06-18 14:22:55,634 INFO sqlalchemy.engine.base.Engine Thread-419 : ()
2020-06-18 14:22:55,636 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:22:55,637 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 14:22:55,637 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 5, 44), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-18 14:22:55,637 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 2, 19, 22, 4, 17), datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-18 14:22:55,637 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 14:22:55,637 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-18 14:22:55,638 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$41XEQQvsPccxpZK8uj5N5.UBj2dNm32U4GfQCKrEdZHf5oMdTOh/K', 'philiptroon@test.com', 6, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 2, 19, 21, 24, 9), 'philip', 1, 6, 'New User (No Login)', 0, '', datetime.datetime(2020, 2, 4, 12, 44, 31), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-18 14:22:55,638 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (10, 'frank1', 'Frank', 'Black', 'me', '$2b$12$/9Y.UwjuJnNTVm1L./S5T.WBgJsFJh92p/U7PL2ccjivBbjjQWWTa', 'frank@somewhere.com', 6, 70, datetime.datetime(2020, 2, 17, 15, 40, 35), None, datetime.datetime(2020, 2, 17, 15, 40, 35), None, 1, 6, 'New User (No Login)', 0, '', datetime.datetime(2020, 2, 4, 12, 44, 31), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 14:22:55,638 DEBUG sqlalchemy.engine.base.Engine Thread-419 : Row (12, 'abc', 'abc', 'def', 'test', '$2b$12$BFex0pth98GP7FJPuxn8J.B8Yeq1OgCsglyABp1P/7Xe4YfJYFKP2', 'philiptroon@test.com', 1, 70, datetime.datetime(2020, 2, 19, 21, 18, 10), None, datetime.datetime(2020, 2, 19, 21, 18, 10), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 14:22:55,640 INFO sqlalchemy.engine.base.Engine Thread-419 : ROLLBACK
2020-06-18 14:22:55,901 INFO sqlalchemy.engine.base.Engine Thread-429 : BEGIN (implicit)
2020-06-18 14:22:55,902 INFO sqlalchemy.engine.base.Engine Thread-429 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:55,902 INFO sqlalchemy.engine.base.Engine Thread-429 : (1, 1)
2020-06-18 14:22:55,903 DEBUG sqlalchemy.engine.base.Engine Thread-429 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,903 DEBUG sqlalchemy.engine.base.Engine Thread-429 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,904 INFO sqlalchemy.engine.base.Engine Thread-429 : ROLLBACK
2020-06-18 14:22:55,961 INFO sqlalchemy.engine.base.Engine Thread-430 : BEGIN (implicit)
2020-06-18 14:22:55,962 INFO sqlalchemy.engine.base.Engine Thread-430 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:55,965 INFO sqlalchemy.engine.base.Engine Thread-431 : BEGIN (implicit)
2020-06-18 14:22:55,965 INFO sqlalchemy.engine.base.Engine Thread-430 : (1, 1)
2020-06-18 14:22:55,968 INFO sqlalchemy.engine.base.Engine Thread-432 : BEGIN (implicit)
2020-06-18 14:22:55,971 INFO sqlalchemy.engine.base.Engine Thread-433 : BEGIN (implicit)
2020-06-18 14:22:55,972 INFO sqlalchemy.engine.base.Engine Thread-431 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:55,974 INFO sqlalchemy.engine.base.Engine Thread-432 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:55,975 DEBUG sqlalchemy.engine.base.Engine Thread-430 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,976 INFO sqlalchemy.engine.base.Engine Thread-433 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:55,976 INFO sqlalchemy.engine.base.Engine Thread-431 : (1, 1)
2020-06-18 14:22:55,976 INFO sqlalchemy.engine.base.Engine Thread-432 : (1, 1)
2020-06-18 14:22:55,976 DEBUG sqlalchemy.engine.base.Engine Thread-430 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,979 INFO sqlalchemy.engine.base.Engine Thread-430 : ROLLBACK
2020-06-18 14:22:55,977 DEBUG sqlalchemy.engine.base.Engine Thread-431 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,978 DEBUG sqlalchemy.engine.base.Engine Thread-432 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,977 INFO sqlalchemy.engine.base.Engine Thread-433 : (1, 1)
2020-06-18 14:22:55,980 DEBUG sqlalchemy.engine.base.Engine Thread-431 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,981 DEBUG sqlalchemy.engine.base.Engine Thread-432 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,983 INFO sqlalchemy.engine.base.Engine Thread-431 : ROLLBACK
2020-06-18 14:22:55,984 INFO sqlalchemy.engine.base.Engine Thread-432 : ROLLBACK
2020-06-18 14:22:55,985 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:55,985 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:55,986 INFO sqlalchemy.engine.base.Engine Thread-433 : ROLLBACK
2020-06-18 14:22:59,134 INFO sqlalchemy.engine.base.Engine Thread-434 : BEGIN (implicit)
2020-06-18 14:22:59,135 INFO sqlalchemy.engine.base.Engine Thread-434 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:59,135 INFO sqlalchemy.engine.base.Engine Thread-434 : (1, 1)
2020-06-18 14:22:59,136 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,136 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,139 INFO sqlalchemy.engine.base.Engine Thread-434 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:59,139 INFO sqlalchemy.engine.base.Engine Thread-434 : ('philip', 1, 1)
2020-06-18 14:22:59,140 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,140 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,142 INFO sqlalchemy.engine.base.Engine Thread-434 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 14:22:59,142 INFO sqlalchemy.engine.base.Engine Thread-434 : (116,)
2020-06-18 14:22:59,143 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:22:59,143 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-18 14:22:59,143 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-18 14:22:59,143 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-18 14:22:59,143 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-18 14:22:59,147 INFO sqlalchemy.engine.base.Engine Thread-434 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:22:59,147 INFO sqlalchemy.engine.base.Engine Thread-434 : ('philip', 1, 1)
2020-06-18 14:22:59,148 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,148 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,150 INFO sqlalchemy.engine.base.Engine Thread-434 : ROLLBACK
2020-06-18 14:22:59,393 INFO sqlalchemy.engine.base.Engine Thread-444 : BEGIN (implicit)
2020-06-18 14:22:59,396 INFO sqlalchemy.engine.base.Engine Thread-444 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:59,396 INFO sqlalchemy.engine.base.Engine Thread-444 : (1, 1)
2020-06-18 14:22:59,401 INFO sqlalchemy.engine.base.Engine Thread-445 : BEGIN (implicit)
2020-06-18 14:22:59,402 INFO sqlalchemy.engine.base.Engine Thread-445 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:59,402 INFO sqlalchemy.engine.base.Engine Thread-445 : (1, 1)
2020-06-18 14:22:59,402 DEBUG sqlalchemy.engine.base.Engine Thread-444 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,403 DEBUG sqlalchemy.engine.base.Engine Thread-445 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,403 DEBUG sqlalchemy.engine.base.Engine Thread-444 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,404 DEBUG sqlalchemy.engine.base.Engine Thread-445 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,407 INFO sqlalchemy.engine.base.Engine Thread-446 : BEGIN (implicit)
2020-06-18 14:22:59,413 INFO sqlalchemy.engine.base.Engine Thread-446 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:59,413 INFO sqlalchemy.engine.base.Engine Thread-446 : (1, 1)
2020-06-18 14:22:59,412 INFO sqlalchemy.engine.base.Engine Thread-445 : ROLLBACK
2020-06-18 14:22:59,408 INFO sqlalchemy.engine.base.Engine Thread-444 : ROLLBACK
2020-06-18 14:22:59,411 INFO sqlalchemy.engine.base.Engine Thread-447 : BEGIN (implicit)
2020-06-18 14:22:59,414 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,417 INFO sqlalchemy.engine.base.Engine Thread-447 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:59,418 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,418 INFO sqlalchemy.engine.base.Engine Thread-447 : (1, 1)
2020-06-18 14:22:59,419 INFO sqlalchemy.engine.base.Engine Thread-446 : ROLLBACK
2020-06-18 14:22:59,420 DEBUG sqlalchemy.engine.base.Engine Thread-447 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,420 DEBUG sqlalchemy.engine.base.Engine Thread-447 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,421 INFO sqlalchemy.engine.base.Engine Thread-447 : ROLLBACK
2020-06-18 14:22:59,443 INFO sqlalchemy.engine.base.Engine Thread-448 : BEGIN (implicit)
2020-06-18 14:22:59,444 INFO sqlalchemy.engine.base.Engine Thread-448 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:22:59,444 INFO sqlalchemy.engine.base.Engine Thread-448 : (1, 1)
2020-06-18 14:22:59,445 DEBUG sqlalchemy.engine.base.Engine Thread-448 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:22:59,445 DEBUG sqlalchemy.engine.base.Engine Thread-448 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:22:59,446 INFO sqlalchemy.engine.base.Engine Thread-448 : ROLLBACK
2020-06-18 14:23:01,491 INFO sqlalchemy.engine.base.Engine Thread-449 : BEGIN (implicit)
2020-06-18 14:23:01,492 INFO sqlalchemy.engine.base.Engine Thread-449 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:23:01,492 INFO sqlalchemy.engine.base.Engine Thread-449 : (1, 1)
2020-06-18 14:23:01,493 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,494 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,496 INFO sqlalchemy.engine.base.Engine Thread-449 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 14:23:01,496 INFO sqlalchemy.engine.base.Engine Thread-449 : (132,)
2020-06-18 14:23:01,497 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 14:23:01,497 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 14:23:01,497 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 14:23:01,497 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 14:23:01,497 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 14:23:01,522 INFO sqlalchemy.engine.base.Engine Thread-449 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 14:23:01,522 INFO sqlalchemy.engine.base.Engine Thread-449 : (datetime.datetime(2020, 6, 17, 14, 23, 1, 498123), datetime.datetime(2020, 7, 1, 14, 23, 1, 498123), datetime.datetime(2020, 6, 17, 14, 23, 1, 498123), datetime.datetime(2020, 7, 1, 14, 23, 1, 498123), datetime.datetime(2020, 6, 17, 14, 23, 1, 498123), datetime.datetime(2020, 7, 1, 14, 23, 1, 498123))
2020-06-18 14:23:01,523 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 14:23:01,531 INFO sqlalchemy.engine.base.Engine Thread-449 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 14:23:01,531 INFO sqlalchemy.engine.base.Engine Thread-449 : ('philip', datetime.datetime(2020, 6, 17, 14, 23, 1, 498123), datetime.datetime(2020, 7, 1, 14, 23, 1, 498123), datetime.datetime(2020, 6, 17, 14, 23, 1, 498123), datetime.datetime(2020, 7, 1, 14, 23, 1, 498123), datetime.datetime(2020, 6, 17, 14, 23, 1, 498123), datetime.datetime(2020, 7, 1, 14, 23, 1, 498123))
2020-06-18 14:23:01,532 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 14:23:01,565 INFO sqlalchemy.engine.base.Engine Thread-449 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:23:01,565 INFO sqlalchemy.engine.base.Engine Thread-449 : ('philip', 1, 1)
2020-06-18 14:23:01,566 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,566 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,570 INFO sqlalchemy.engine.base.Engine Thread-449 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 14:23:01,570 INFO sqlalchemy.engine.base.Engine Thread-449 : ('philip', 1, 1)
2020-06-18 14:23:01,570 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,571 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,571 INFO sqlalchemy.engine.base.Engine Thread-449 : ROLLBACK
2020-06-18 14:23:01,828 INFO sqlalchemy.engine.base.Engine Thread-459 : BEGIN (implicit)
2020-06-18 14:23:01,829 INFO sqlalchemy.engine.base.Engine Thread-459 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:23:01,829 INFO sqlalchemy.engine.base.Engine Thread-459 : (1, 1)
2020-06-18 14:23:01,831 DEBUG sqlalchemy.engine.base.Engine Thread-459 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,833 INFO sqlalchemy.engine.base.Engine Thread-460 : BEGIN (implicit)
2020-06-18 14:23:01,836 INFO sqlalchemy.engine.base.Engine Thread-461 : BEGIN (implicit)
2020-06-18 14:23:01,837 DEBUG sqlalchemy.engine.base.Engine Thread-459 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,840 INFO sqlalchemy.engine.base.Engine Thread-460 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:23:01,844 INFO sqlalchemy.engine.base.Engine Thread-460 : (1, 1)
2020-06-18 14:23:01,843 INFO sqlalchemy.engine.base.Engine Thread-461 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:23:01,844 INFO sqlalchemy.engine.base.Engine Thread-459 : ROLLBACK
2020-06-18 14:23:01,842 INFO sqlalchemy.engine.base.Engine Thread-462 : BEGIN (implicit)
2020-06-18 14:23:01,845 INFO sqlalchemy.engine.base.Engine Thread-461 : (1, 1)
2020-06-18 14:23:01,845 DEBUG sqlalchemy.engine.base.Engine Thread-460 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,848 INFO sqlalchemy.engine.base.Engine Thread-462 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:23:01,849 DEBUG sqlalchemy.engine.base.Engine Thread-460 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,849 DEBUG sqlalchemy.engine.base.Engine Thread-461 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,851 DEBUG sqlalchemy.engine.base.Engine Thread-461 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,851 INFO sqlalchemy.engine.base.Engine Thread-460 : ROLLBACK
2020-06-18 14:23:01,849 INFO sqlalchemy.engine.base.Engine Thread-462 : (1, 1)
2020-06-18 14:23:01,852 INFO sqlalchemy.engine.base.Engine Thread-461 : ROLLBACK
2020-06-18 14:23:01,854 DEBUG sqlalchemy.engine.base.Engine Thread-462 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,855 DEBUG sqlalchemy.engine.base.Engine Thread-462 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,856 INFO sqlalchemy.engine.base.Engine Thread-462 : ROLLBACK
2020-06-18 14:23:01,892 INFO sqlalchemy.engine.base.Engine Thread-463 : BEGIN (implicit)
2020-06-18 14:23:01,893 INFO sqlalchemy.engine.base.Engine Thread-463 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 14:23:01,893 INFO sqlalchemy.engine.base.Engine Thread-463 : (1, 1)
2020-06-18 14:23:01,894 DEBUG sqlalchemy.engine.base.Engine Thread-463 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 14:23:01,894 DEBUG sqlalchemy.engine.base.Engine Thread-463 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 14:23:01,896 INFO sqlalchemy.engine.base.Engine Thread-463 : ROLLBACK
2020-06-18 17:29:50,510 INFO sqlalchemy.engine.base.Engine Thread-5 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-18 17:29:50,510 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 17:29:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('Variable_name', 'Value')
2020-06-18 17:29:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('sql_mode', '')
2020-06-18 17:29:50,513 INFO sqlalchemy.engine.base.Engine Thread-5 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-18 17:29:50,513 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 17:29:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('Variable_name', 'Value')
2020-06-18 17:29:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('lower_case_table_names', '0')
2020-06-18 17:29:50,514 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT DATABASE()
2020-06-18 17:29:50,514 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 17:29:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('DATABASE()',)
2020-06-18 17:29:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('fmapp',)
2020-06-18 17:29:50,515 INFO sqlalchemy.engine.base.Engine Thread-5 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-18 17:29:50,515 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 17:29:50,516 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-18 17:29:50,516 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-18 17:29:50,517 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-18 17:29:50,517 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 17:29:50,517 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-18 17:29:50,517 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 17:29:50,519 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-18 17:29:50,520 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 17:29:50,520 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-18 17:29:50,523 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 17:29:50,524 INFO sqlalchemy.engine.base.Engine Thread-5 : ('DATE', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-18 17:29:50,527 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 17:29:50,527 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (11, datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (12, datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (13, datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 17:29:50,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 17:29:50,529 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (58, datetime.datetime(2020, 7, 15, 2, 0), datetime.datetime(2020, 7, 15, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 17:29:50,529 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (59, datetime.datetime(2020, 7, 22, 2, 0), datetime.datetime(2020, 7, 22, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 17:29:50,529 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (60, datetime.datetime(2020, 7, 29, 2, 0), datetime.datetime(2020, 7, 29, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 17:29:50,535 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 17:29:50,535 INFO sqlalchemy.engine.base.Engine Thread-5 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-18 17:29:50,536 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 17:29:50,537 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 17:29:50,542 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 17:29:50,542 INFO sqlalchemy.engine.base.Engine Thread-5 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-18 17:29:50,543 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 17:29:50,543 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 17:29:50,544 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-18 17:29:50,619 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-18 17:29:50,622 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 17:29:50,622 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-18 17:29:50,623 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 17:29:50,624 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 17:29:50,625 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-18 18:36:04,997 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-18 18:36:04,997 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 18:36:04,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-18 18:36:04,999 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-18 18:36:05,000 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-18 18:36:05,000 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 18:36:05,000 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-18 18:36:05,001 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-18 18:36:05,001 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-18 18:36:05,001 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 18:36:05,001 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-18 18:36:05,002 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-18 18:36:05,002 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-18 18:36:05,002 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 18:36:05,003 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-18 18:36:05,003 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-18 18:36:05,004 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-18 18:36:05,004 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 18:36:05,005 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-18 18:36:05,005 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 18:36:05,006 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-18 18:36:05,006 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 18:36:05,006 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-18 18:36:05,009 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:05,009 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-18 18:36:05,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:05,011 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 18:36:05,016 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-18 18:36:05,216 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-18 18:36:05,218 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-06-18 18:36:05,218 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-06-18 18:36:05,218 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-06-18 18:36:05,219 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-06-18 18:36:05,219 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'New User (No Login)', 0, '', datetime.datetime(2020, 2, 4, 12, 44, 31), 1)
2020-06-18 18:36:05,219 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-06-18 18:36:05,221 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 18:36:05,222 INFO sqlalchemy.engine.base.Engine Thread-4 : (63,)
2020-06-18 18:36:05,222 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:05,223 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 18:36:05,223 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-18 18:36:05,223 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-18 18:36:05,224 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-18 18:36:05,224 INFO sqlalchemy.engine.base.Engine Thread-4 : (124, 1)
2020-06-18 18:36:05,225 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:05,225 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-18 18:36:05,245 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-18 18:36:07,769 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-18 18:36:07,769 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-06-18 18:36:07,769 INFO sqlalchemy.engine.base.Engine Thread-6 : ()
2020-06-18 18:36:07,770 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-06-18 18:36:07,770 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-06-18 18:36:07,771 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (6, 'New User (No Login)', 0, '', datetime.datetime(2020, 2, 4, 12, 44, 31), 1)
2020-06-18 18:36:07,771 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-06-18 18:36:07,772 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 18:36:07,772 INFO sqlalchemy.engine.base.Engine Thread-6 : (63,)
2020-06-18 18:36:07,773 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:07,773 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 18:36:07,773 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-18 18:36:07,773 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-18 18:36:07,774 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-18 18:36:07,775 INFO sqlalchemy.engine.base.Engine Thread-6 : (124, 1)
2020-06-18 18:36:07,775 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:07,775 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-18 18:36:07,777 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-06-18 18:36:07,777 INFO sqlalchemy.engine.base.Engine Thread-6 : ('bob', 1)
2020-06-18 18:36:07,778 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:07,778 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 5, 44), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:07,779 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-06-18 18:36:07,779 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-18 18:36:07,779 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-06-18 18:36:07,780 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-06-18 18:36:08,114 INFO sqlalchemy.engine.base.Engine Thread-6 : UPDATE users SET last_login=%s WHERE users.id = %s
2020-06-18 18:36:08,114 INFO sqlalchemy.engine.base.Engine Thread-6 : (datetime.datetime(2020, 6, 18, 18, 36, 8, 112998), 2)
2020-06-18 18:36:08,116 INFO sqlalchemy.engine.base.Engine Thread-6 : COMMIT
2020-06-18 18:36:08,118 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-18 18:36:08,119 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s
2020-06-18 18:36:08,119 INFO sqlalchemy.engine.base.Engine Thread-6 : (2,)
2020-06-18 18:36:08,119 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,120 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:08,123 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-18 18:36:08,165 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-18 18:36:08,166 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:08,166 INFO sqlalchemy.engine.base.Engine Thread-7 : (2, 1)
2020-06-18 18:36:08,167 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,167 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:08,170 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 18:36:08,170 INFO sqlalchemy.engine.base.Engine Thread-7 : (132,)
2020-06-18 18:36:08,170 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:08,171 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 18:36:08,171 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 18:36:08,171 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 18:36:08,171 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 18:36:08,203 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 18:36:08,203 INFO sqlalchemy.engine.base.Engine Thread-7 : (datetime.datetime(2020, 6, 17, 18, 36, 8, 171679), datetime.datetime(2020, 7, 1, 18, 36, 8, 171679), datetime.datetime(2020, 6, 17, 18, 36, 8, 171679), datetime.datetime(2020, 7, 1, 18, 36, 8, 171679), datetime.datetime(2020, 6, 17, 18, 36, 8, 171679), datetime.datetime(2020, 7, 1, 18, 36, 8, 171679))
2020-06-18 18:36:08,205 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 18:36:08,214 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 18:36:08,215 INFO sqlalchemy.engine.base.Engine Thread-7 : ('bob', datetime.datetime(2020, 6, 17, 18, 36, 8, 171679), datetime.datetime(2020, 7, 1, 18, 36, 8, 171679), datetime.datetime(2020, 6, 17, 18, 36, 8, 171679), datetime.datetime(2020, 7, 1, 18, 36, 8, 171679), datetime.datetime(2020, 6, 17, 18, 36, 8, 171679), datetime.datetime(2020, 7, 1, 18, 36, 8, 171679))
2020-06-18 18:36:08,216 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 18:36:08,313 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 18:36:08,313 INFO sqlalchemy.engine.base.Engine Thread-7 : ('bob', 1, 1)
2020-06-18 18:36:08,314 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,317 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 18:36:08,317 INFO sqlalchemy.engine.base.Engine Thread-7 : ('bob', 1, 1)
2020-06-18 18:36:08,318 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,320 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-18 18:36:08,583 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-18 18:36:08,584 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:08,584 INFO sqlalchemy.engine.base.Engine Thread-17 : (2, 1)
2020-06-18 18:36:08,585 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,585 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:08,586 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-18 18:36:08,688 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-06-18 18:36:08,689 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:08,689 INFO sqlalchemy.engine.base.Engine Thread-19 : (2, 1)
2020-06-18 18:36:08,690 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,691 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:08,692 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-06-18 18:36:08,697 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-06-18 18:36:08,697 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-18 18:36:08,699 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:08,701 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-06-18 18:36:08,703 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:08,702 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:08,705 INFO sqlalchemy.engine.base.Engine Thread-18 : (2, 1)
2020-06-18 18:36:08,704 INFO sqlalchemy.engine.base.Engine Thread-21 : (2, 1)
2020-06-18 18:36:08,702 INFO sqlalchemy.engine.base.Engine Thread-20 : (2, 1)
2020-06-18 18:36:08,706 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,706 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:08,707 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,707 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:08,708 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-18 18:36:08,709 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:08,709 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:08,710 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-06-18 18:36:08,712 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-06-18 18:36:14,251 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-06-18 18:36:14,255 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 18:36:14,255 INFO sqlalchemy.engine.base.Engine Thread-22 : ()
2020-06-18 18:36:14,256 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 18:36:14,257 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 18:36:14,257 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 18:36:14,258 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 18:36:14,259 INFO sqlalchemy.engine.base.Engine Thread-22 : (100,)
2020-06-18 18:36:14,259 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:14,259 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 18:36:14,259 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 18:36:14,259 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 18:36:14,259 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 18:36:14,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 18:36:14,261 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:14,261 INFO sqlalchemy.engine.base.Engine Thread-22 : (2, 1)
2020-06-18 18:36:14,262 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:14,262 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:14,271 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 18:36:14,271 INFO sqlalchemy.engine.base.Engine Thread-22 : ('bob', 1, 1)
2020-06-18 18:36:14,272 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:14,273 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-06-18 18:36:14,530 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-18 18:36:14,531 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:14,531 INFO sqlalchemy.engine.base.Engine Thread-32 : (2, 1)
2020-06-18 18:36:14,531 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:14,532 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:14,533 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-18 18:36:14,617 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-18 18:36:14,619 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:14,619 INFO sqlalchemy.engine.base.Engine Thread-33 : (2, 1)
2020-06-18 18:36:14,622 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-18 18:36:14,623 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:14,627 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-18 18:36:14,627 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:14,627 INFO sqlalchemy.engine.base.Engine Thread-34 : (2, 1)
2020-06-18 18:36:14,631 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:14,633 INFO sqlalchemy.engine.base.Engine Thread-35 : (2, 1)
2020-06-18 18:36:14,632 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:14,632 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-18 18:36:14,633 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:14,636 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:14,635 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:14,637 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:14,637 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-18 18:36:14,634 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-18 18:36:14,636 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:14,638 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-18 18:36:14,640 INFO sqlalchemy.engine.base.Engine Thread-36 : (2, 1)
2020-06-18 18:36:14,641 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:14,641 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:14,643 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-06-18 18:36:15,398 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-06-18 18:36:15,401 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 18:36:15,401 INFO sqlalchemy.engine.base.Engine Thread-37 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 18:36:15,404 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 18:36:15,404 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 18:36:15,404 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 18:36:15,404 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 18:36:15,404 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 18:36:15,405 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 18:36:15,405 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 18:36:15,405 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 18:36:15,405 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 18:36:15,405 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 18:36:15,409 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 18:36:15,409 INFO sqlalchemy.engine.base.Engine Thread-37 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 18:36:15,410 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 18:36:15,411 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 18:36:15,415 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 18:36:15,415 INFO sqlalchemy.engine.base.Engine Thread-37 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 18:36:15,416 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 18:36:15,416 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 18:36:15,417 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-06-18 18:36:15,442 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-06-18 18:36:15,444 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 18:36:15,444 INFO sqlalchemy.engine.base.Engine Thread-38 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 18:36:15,446 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 18:36:15,446 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 18:36:15,446 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 18:36:15,446 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 18:36:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 18:36:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 18:36:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 18:36:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 18:36:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 18:36:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 18:36:15,452 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 18:36:15,452 INFO sqlalchemy.engine.base.Engine Thread-38 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 18:36:15,453 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 18:36:15,453 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 18:36:15,458 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 18:36:15,458 INFO sqlalchemy.engine.base.Engine Thread-38 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 18:36:15,459 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 18:36:15,460 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 18:36:15,461 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-06-18 18:36:15,490 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-06-18 18:36:15,492 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-06-18 18:36:15,494 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,495 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,498 INFO sqlalchemy.engine.base.Engine Thread-40 : (2, 1)
2020-06-18 18:36:15,498 INFO sqlalchemy.engine.base.Engine Thread-39 : (2, 1)
2020-06-18 18:36:15,497 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-06-18 18:36:15,498 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,499 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,504 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,502 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,517 INFO sqlalchemy.engine.base.Engine Thread-41 : (2, 1)
2020-06-18 18:36:15,501 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-18 18:36:15,516 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,503 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,521 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,530 INFO sqlalchemy.engine.base.Engine Thread-42 : (2, 1)
2020-06-18 18:36:15,524 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-18 18:36:15,524 INFO sqlalchemy.engine.base.Engine Thread-40 : (19, 1)
2020-06-18 18:36:15,524 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,540 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,538 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,553 INFO sqlalchemy.engine.base.Engine Thread-39 : (15, 1)
2020-06-18 18:36:15,546 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,546 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,562 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,552 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,574 INFO sqlalchemy.engine.base.Engine Thread-41 : (20, 1)
2020-06-18 18:36:15,554 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,562 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 18:36:15,547 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-18 18:36:15,573 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,577 INFO sqlalchemy.engine.base.Engine Thread-42 : (21, 1)
2020-06-18 18:36:15,539 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,582 INFO sqlalchemy.engine.base.Engine Thread-43 : (2, 1)
2020-06-18 18:36:15,577 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,575 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 18:36:15,576 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,588 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,595 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 18:36:15,607 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-06-18 18:36:15,602 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,605 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-06-18 18:36:15,606 INFO sqlalchemy.engine.base.Engine Thread-44 : (2, 1)
2020-06-18 18:36:15,606 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,600 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-06-18 18:36:15,609 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 18:36:15,621 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,627 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,624 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-18 18:36:15,627 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-18 18:36:15,620 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,633 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-18 18:36:15,635 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,644 INFO sqlalchemy.engine.base.Engine Thread-45 : (2, 1)
2020-06-18 18:36:15,642 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-18 18:36:15,643 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,644 INFO sqlalchemy.engine.base.Engine Thread-43 : (23, 1)
2020-06-18 18:36:15,640 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,646 INFO sqlalchemy.engine.base.Engine Thread-44 : (22, 1)
2020-06-18 18:36:15,645 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,648 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,647 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,660 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 18:36:15,648 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,646 INFO sqlalchemy.engine.base.Engine Thread-46 : (2, 1)
2020-06-18 18:36:15,645 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,668 INFO sqlalchemy.engine.base.Engine Thread-47 : (2, 1)
2020-06-18 18:36:15,664 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-18 18:36:15,666 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,667 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 18:36:15,668 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,663 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-18 18:36:15,671 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,669 INFO sqlalchemy.engine.base.Engine Thread-45 : (27, 1)
2020-06-18 18:36:15,670 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-18 18:36:15,671 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,672 INFO sqlalchemy.engine.base.Engine Thread-48 : (2, 1)
2020-06-18 18:36:15,669 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,683 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,684 INFO sqlalchemy.engine.base.Engine Thread-46 : (56, 1)
2020-06-18 18:36:15,684 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,683 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,695 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 18:36:15,696 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-18 18:36:15,694 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-18 18:36:15,697 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:15,691 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,685 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,699 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,699 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 18:36:15,697 INFO sqlalchemy.engine.base.Engine Thread-49 : (2, 1)
2020-06-18 18:36:15,714 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,721 INFO sqlalchemy.engine.base.Engine Thread-47 : (57, 1)
2020-06-18 18:36:15,721 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-18 18:36:15,721 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:15,730 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:15,729 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,741 INFO sqlalchemy.engine.base.Engine Thread-48 : (31, 1)
2020-06-18 18:36:15,748 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 18:36:15,755 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 18:36:15,759 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 18:36:15,759 INFO sqlalchemy.engine.base.Engine Thread-49 : (30, 1)
2020-06-18 18:36:15,760 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-18 18:36:15,761 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 18:36:15,763 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 18:36:15,764 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-18 18:36:15,765 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 18:36:15,766 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 18:36:15,767 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-18 18:36:16,970 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-18 18:36:16,972 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:16,972 INFO sqlalchemy.engine.base.Engine Thread-50 : (2, 1)
2020-06-18 18:36:16,973 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:16,973 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:16,980 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-18 18:36:16,980 INFO sqlalchemy.engine.base.Engine Thread-50 : (datetime.datetime(2020, 6, 26, 0, 0), datetime.datetime(2020, 6, 26, 23, 59), datetime.datetime(2020, 6, 26, 0, 0), datetime.datetime(2020, 6, 26, 23, 59), datetime.datetime(2020, 6, 26, 0, 0), datetime.datetime(2020, 6, 26, 23, 59))
2020-06-18 18:36:16,981 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-18 18:36:17,001 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-18 18:36:18,450 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-06-18 18:36:18,451 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 18:36:18,451 INFO sqlalchemy.engine.base.Engine Thread-51 : (2, 1)
2020-06-18 18:36:18,452 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:18,452 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 18:36:18,456 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 18:36:18,456 INFO sqlalchemy.engine.base.Engine Thread-51 : ()
2020-06-18 18:36:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 18:36:18,458 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 18:36:18,458 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 18:36:18,459 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 18:36:18,459 INFO sqlalchemy.engine.base.Engine Thread-51 : (100,)
2020-06-18 18:36:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 18:36:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 18:36:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 18:36:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 18:36:18,460 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 18:36:18,467 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-06-18 18:36:20,292 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-06-18 18:36:20,294 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 18:36:20,294 INFO sqlalchemy.engine.base.Engine Thread-52 : ('bob', 1, 1)
2020-06-18 18:36:20,294 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 18:36:20,295 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-06-18 18:36:23,603 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-06-18 18:36:23,606 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-18 18:36:23,606 INFO sqlalchemy.engine.base.Engine Thread-53 : (0, 1)
2020-06-18 18:36:23,606 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-18 18:36:23,612 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 18:36:23,612 INFO sqlalchemy.engine.base.Engine Thread-53 : ()
2020-06-18 18:36:23,613 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 18:36:23,614 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 18:36:23,614 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 18:36:23,615 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 18:36:23,615 INFO sqlalchemy.engine.base.Engine Thread-53 : (97,)
2020-06-18 18:36:23,616 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 18:36:23,616 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-18 18:36:23,616 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-18 18:36:23,618 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 18:36:23,618 INFO sqlalchemy.engine.base.Engine Thread-53 : (0, 1)
2020-06-18 18:36:23,619 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 18:36:23,623 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-18 18:36:23,623 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-06-18 18:36:23,624 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 18:36:23,624 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 18:36:23,625 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 18:36:23,625 INFO sqlalchemy.engine.base.Engine Thread-53 : (0, 1)
2020-06-18 18:36:23,626 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 20:05:30,428 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-18 20:05:30,437 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-18 20:05:30,438 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:30,440 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-18 20:05:30,441 INFO sqlalchemy.engine.base.Engine Thread-60 : (2, 1)
2020-06-18 20:05:30,442 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:30,442 INFO sqlalchemy.engine.base.Engine Thread-61 : (2, 1)
2020-06-18 20:05:30,448 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-18 20:05:30,449 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:30,449 INFO sqlalchemy.engine.base.Engine Thread-62 : (2, 1)
2020-06-18 20:05:30,450 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:30,450 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:30,451 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:30,451 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:30,453 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-18 20:05:30,455 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-18 20:05:30,457 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-18 20:05:30,457 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:30,459 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:30,461 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:30,461 INFO sqlalchemy.engine.base.Engine Thread-63 : (2, 1)
2020-06-18 20:05:30,462 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-18 20:05:30,463 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:30,464 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:30,465 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-18 20:05:30,781 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-18 20:05:30,782 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:30,782 INFO sqlalchemy.engine.base.Engine Thread-64 : (2, 1)
2020-06-18 20:05:30,783 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:30,783 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:30,785 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-18 20:05:31,924 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-18 20:05:31,925 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:31,925 INFO sqlalchemy.engine.base.Engine Thread-65 : (2, 1)
2020-06-18 20:05:31,926 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:31,926 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:31,929 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:05:31,929 INFO sqlalchemy.engine.base.Engine Thread-65 : (132,)
2020-06-18 20:05:31,930 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:05:31,930 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:05:31,930 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:05:31,930 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:05:31,931 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:05:31,956 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:05:31,956 INFO sqlalchemy.engine.base.Engine Thread-65 : (datetime.datetime(2020, 6, 17, 20, 5, 31, 931319), datetime.datetime(2020, 7, 1, 20, 5, 31, 931319), datetime.datetime(2020, 6, 17, 20, 5, 31, 931319), datetime.datetime(2020, 7, 1, 20, 5, 31, 931319), datetime.datetime(2020, 6, 17, 20, 5, 31, 931319), datetime.datetime(2020, 7, 1, 20, 5, 31, 931319))
2020-06-18 20:05:31,957 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:31,966 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:05:31,966 INFO sqlalchemy.engine.base.Engine Thread-65 : ('bob', datetime.datetime(2020, 6, 17, 20, 5, 31, 931319), datetime.datetime(2020, 7, 1, 20, 5, 31, 931319), datetime.datetime(2020, 6, 17, 20, 5, 31, 931319), datetime.datetime(2020, 7, 1, 20, 5, 31, 931319), datetime.datetime(2020, 6, 17, 20, 5, 31, 931319), datetime.datetime(2020, 7, 1, 20, 5, 31, 931319))
2020-06-18 20:05:31,968 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:31,972 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:31,972 INFO sqlalchemy.engine.base.Engine Thread-65 : ('bob', 1, 1)
2020-06-18 20:05:31,973 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:31,978 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:31,978 INFO sqlalchemy.engine.base.Engine Thread-65 : ('bob', 1, 1)
2020-06-18 20:05:31,979 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:31,980 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-18 20:05:32,261 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-18 20:05:32,262 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:32,262 INFO sqlalchemy.engine.base.Engine Thread-75 : (2, 1)
2020-06-18 20:05:32,263 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:32,263 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:32,264 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-18 20:05:32,302 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-18 20:05:32,304 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:32,304 INFO sqlalchemy.engine.base.Engine Thread-76 : (2, 1)
2020-06-18 20:05:32,306 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:32,308 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:32,308 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-18 20:05:32,310 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:32,310 INFO sqlalchemy.engine.base.Engine Thread-77 : (2, 1)
2020-06-18 20:05:32,311 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-18 20:05:32,311 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:32,356 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:32,358 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-18 20:05:32,363 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-18 20:05:32,364 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:32,364 INFO sqlalchemy.engine.base.Engine Thread-78 : (2, 1)
2020-06-18 20:05:32,366 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:32,366 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:32,369 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-06-18 20:05:32,370 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:32,370 INFO sqlalchemy.engine.base.Engine Thread-79 : (2, 1)
2020-06-18 20:05:32,371 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-18 20:05:32,372 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:32,373 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:32,374 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-06-18 20:05:39,123 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-18 20:05:39,124 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:39,124 INFO sqlalchemy.engine.base.Engine Thread-80 : (2, 1)
2020-06-18 20:05:39,124 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,125 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:39,127 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:05:39,127 INFO sqlalchemy.engine.base.Engine Thread-80 : (132,)
2020-06-18 20:05:39,128 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:05:39,128 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:05:39,128 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:05:39,128 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:05:39,128 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:05:39,150 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:05:39,151 INFO sqlalchemy.engine.base.Engine Thread-80 : (datetime.datetime(2019, 6, 20, 20, 5, 39, 129028), datetime.datetime(2021, 6, 17, 20, 5, 39, 129039), datetime.datetime(2019, 6, 20, 20, 5, 39, 129028), datetime.datetime(2021, 6, 17, 20, 5, 39, 129039), datetime.datetime(2019, 6, 20, 20, 5, 39, 129028), datetime.datetime(2021, 6, 17, 20, 5, 39, 129039))
2020-06-18 20:05:39,153 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:39,154 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,155 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,155 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,155 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,155 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,155 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,155 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,155 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,156 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,156 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,156 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,156 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,156 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,156 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,156 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,157 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,157 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,157 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,157 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,165 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:05:39,165 INFO sqlalchemy.engine.base.Engine Thread-80 : ('bob', datetime.datetime(2019, 6, 20, 20, 5, 39, 129028), datetime.datetime(2021, 6, 17, 20, 5, 39, 129039), datetime.datetime(2019, 6, 20, 20, 5, 39, 129028), datetime.datetime(2021, 6, 17, 20, 5, 39, 129039), datetime.datetime(2019, 6, 20, 20, 5, 39, 129028), datetime.datetime(2021, 6, 17, 20, 5, 39, 129039))
2020-06-18 20:05:39,167 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:39,167 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,167 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,169 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:39,174 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:39,174 INFO sqlalchemy.engine.base.Engine Thread-80 : ('bob', 1, 1)
2020-06-18 20:05:39,175 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,177 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:39,178 INFO sqlalchemy.engine.base.Engine Thread-80 : ('bob', 1, 1)
2020-06-18 20:05:39,178 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,181 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-18 20:05:39,432 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-18 20:05:39,433 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:39,433 INFO sqlalchemy.engine.base.Engine Thread-90 : (2, 1)
2020-06-18 20:05:39,434 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,434 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:39,436 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-18 20:05:39,506 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-18 20:05:39,507 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:39,508 INFO sqlalchemy.engine.base.Engine Thread-91 : (2, 1)
2020-06-18 20:05:39,510 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-18 20:05:39,512 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:39,512 INFO sqlalchemy.engine.base.Engine Thread-92 : (2, 1)
2020-06-18 20:05:39,513 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,513 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:39,514 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,515 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-18 20:05:39,517 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-18 20:05:39,520 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-18 20:05:39,527 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:39,524 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:39,527 INFO sqlalchemy.engine.base.Engine Thread-93 : (2, 1)
2020-06-18 20:05:39,527 INFO sqlalchemy.engine.base.Engine Thread-94 : (2, 1)
2020-06-18 20:05:39,523 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:39,528 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-18 20:05:39,529 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,529 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:39,530 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:39,534 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-18 20:05:39,530 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:39,535 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-18 20:05:43,919 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-18 20:05:43,920 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:43,920 INFO sqlalchemy.engine.base.Engine Thread-95 : (2, 1)
2020-06-18 20:05:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:43,923 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:05:43,923 INFO sqlalchemy.engine.base.Engine Thread-95 : (132,)
2020-06-18 20:05:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:05:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:05:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:05:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:05:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:05:43,950 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:05:43,950 INFO sqlalchemy.engine.base.Engine Thread-95 : (datetime.datetime(2020, 6, 17, 20, 5, 43, 925117), datetime.datetime(2020, 7, 1, 20, 5, 43, 925117), datetime.datetime(2020, 6, 17, 20, 5, 43, 925117), datetime.datetime(2020, 7, 1, 20, 5, 43, 925117), datetime.datetime(2020, 6, 17, 20, 5, 43, 925117), datetime.datetime(2020, 7, 1, 20, 5, 43, 925117))
2020-06-18 20:05:43,952 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:43,961 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:05:43,961 INFO sqlalchemy.engine.base.Engine Thread-95 : ('bob', datetime.datetime(2020, 6, 17, 20, 5, 43, 925117), datetime.datetime(2020, 7, 1, 20, 5, 43, 925117), datetime.datetime(2020, 6, 17, 20, 5, 43, 925117), datetime.datetime(2020, 7, 1, 20, 5, 43, 925117), datetime.datetime(2020, 6, 17, 20, 5, 43, 925117), datetime.datetime(2020, 7, 1, 20, 5, 43, 925117))
2020-06-18 20:05:43,963 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:43,967 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:43,967 INFO sqlalchemy.engine.base.Engine Thread-95 : ('bob', 1, 1)
2020-06-18 20:05:43,968 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:43,971 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:43,971 INFO sqlalchemy.engine.base.Engine Thread-95 : ('bob', 1, 1)
2020-06-18 20:05:43,971 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:43,972 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-18 20:05:44,222 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-18 20:05:44,223 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:44,223 INFO sqlalchemy.engine.base.Engine Thread-105 : (2, 1)
2020-06-18 20:05:44,224 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:44,224 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:44,225 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-18 20:05:44,293 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-18 20:05:44,295 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:44,298 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-18 20:05:44,301 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-18 20:05:44,302 INFO sqlalchemy.engine.base.Engine Thread-106 : (2, 1)
2020-06-18 20:05:44,305 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-06-18 20:05:44,306 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:44,307 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:44,310 INFO sqlalchemy.engine.base.Engine Thread-108 : (2, 1)
2020-06-18 20:05:44,309 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:44,310 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:44,309 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:44,310 INFO sqlalchemy.engine.base.Engine Thread-109 : (2, 1)
2020-06-18 20:05:44,309 INFO sqlalchemy.engine.base.Engine Thread-107 : (2, 1)
2020-06-18 20:05:44,311 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:44,313 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:44,312 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:44,314 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-18 20:05:44,312 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-18 20:05:44,314 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:44,315 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:44,314 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:44,317 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-06-18 20:05:44,316 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-18 20:05:46,867 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-18 20:05:46,868 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:46,868 INFO sqlalchemy.engine.base.Engine Thread-110 : (2, 1)
2020-06-18 20:05:46,869 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:46,869 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:46,871 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:05:46,871 INFO sqlalchemy.engine.base.Engine Thread-110 : (132,)
2020-06-18 20:05:46,872 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:05:46,872 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:05:46,872 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:05:46,872 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:05:46,872 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:05:46,896 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:05:46,896 INFO sqlalchemy.engine.base.Engine Thread-110 : (datetime.datetime(2020, 6, 17, 20, 5, 46, 872836), datetime.datetime(2020, 7, 15, 20, 5, 46, 872836), datetime.datetime(2020, 6, 17, 20, 5, 46, 872836), datetime.datetime(2020, 7, 15, 20, 5, 46, 872836), datetime.datetime(2020, 6, 17, 20, 5, 46, 872836), datetime.datetime(2020, 7, 15, 20, 5, 46, 872836))
2020-06-18 20:05:46,897 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:46,906 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:05:46,906 INFO sqlalchemy.engine.base.Engine Thread-110 : ('bob', datetime.datetime(2020, 6, 17, 20, 5, 46, 872836), datetime.datetime(2020, 7, 15, 20, 5, 46, 872836), datetime.datetime(2020, 6, 17, 20, 5, 46, 872836), datetime.datetime(2020, 7, 15, 20, 5, 46, 872836), datetime.datetime(2020, 6, 17, 20, 5, 46, 872836), datetime.datetime(2020, 7, 15, 20, 5, 46, 872836))
2020-06-18 20:05:46,907 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:46,911 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:46,911 INFO sqlalchemy.engine.base.Engine Thread-110 : ('bob', 1, 1)
2020-06-18 20:05:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:46,914 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:46,914 INFO sqlalchemy.engine.base.Engine Thread-110 : ('bob', 1, 1)
2020-06-18 20:05:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:46,916 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-18 20:05:47,174 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-18 20:05:47,175 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:47,175 INFO sqlalchemy.engine.base.Engine Thread-120 : (2, 1)
2020-06-18 20:05:47,176 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:47,177 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:47,178 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-18 20:05:47,239 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-18 20:05:47,240 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:47,242 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-18 20:05:47,242 INFO sqlalchemy.engine.base.Engine Thread-123 : (2, 1)
2020-06-18 20:05:47,243 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:47,243 INFO sqlalchemy.engine.base.Engine Thread-121 : (2, 1)
2020-06-18 20:05:47,245 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:47,245 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:47,246 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-18 20:05:47,249 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-18 20:05:47,250 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-18 20:05:47,254 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:47,254 INFO sqlalchemy.engine.base.Engine Thread-122 : (2, 1)
2020-06-18 20:05:47,251 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:47,254 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:47,255 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-18 20:05:47,252 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:47,256 INFO sqlalchemy.engine.base.Engine Thread-124 : (2, 1)
2020-06-18 20:05:47,257 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:47,257 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:47,257 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:47,258 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:47,259 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-18 20:05:47,260 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-18 20:05:50,784 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-18 20:05:50,785 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:50,785 INFO sqlalchemy.engine.base.Engine Thread-125 : (2, 1)
2020-06-18 20:05:50,786 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:50,786 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:50,788 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:05:50,788 INFO sqlalchemy.engine.base.Engine Thread-125 : (132,)
2020-06-18 20:05:50,789 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:05:50,789 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:05:50,789 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:05:50,789 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:05:50,790 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:05:50,813 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:05:50,813 INFO sqlalchemy.engine.base.Engine Thread-125 : (datetime.datetime(2020, 5, 21, 20, 5, 50, 790358), datetime.datetime(2020, 6, 19, 20, 5, 50, 790358), datetime.datetime(2020, 5, 21, 20, 5, 50, 790358), datetime.datetime(2020, 6, 19, 20, 5, 50, 790358), datetime.datetime(2020, 5, 21, 20, 5, 50, 790358), datetime.datetime(2020, 6, 19, 20, 5, 50, 790358))
2020-06-18 20:05:50,814 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:50,818 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,818 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,818 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,819 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,819 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,819 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,826 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:05:50,826 INFO sqlalchemy.engine.base.Engine Thread-125 : ('bob', datetime.datetime(2020, 5, 21, 20, 5, 50, 790358), datetime.datetime(2020, 6, 19, 20, 5, 50, 790358), datetime.datetime(2020, 5, 21, 20, 5, 50, 790358), datetime.datetime(2020, 6, 19, 20, 5, 50, 790358), datetime.datetime(2020, 5, 21, 20, 5, 50, 790358), datetime.datetime(2020, 6, 19, 20, 5, 50, 790358))
2020-06-18 20:05:50,828 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:50,828 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,829 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,829 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,829 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:50,834 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:50,834 INFO sqlalchemy.engine.base.Engine Thread-125 : ('bob', 1, 1)
2020-06-18 20:05:50,834 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:50,837 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:50,837 INFO sqlalchemy.engine.base.Engine Thread-125 : ('bob', 1, 1)
2020-06-18 20:05:50,838 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:50,839 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-18 20:05:51,105 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-18 20:05:51,106 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-18 20:05:51,108 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:51,110 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:51,111 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-18 20:05:51,112 INFO sqlalchemy.engine.base.Engine Thread-136 : (2, 1)
2020-06-18 20:05:51,112 INFO sqlalchemy.engine.base.Engine Thread-135 : (2, 1)
2020-06-18 20:05:51,114 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:51,117 INFO sqlalchemy.engine.base.Engine Thread-137 : (2, 1)
2020-06-18 20:05:51,118 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:51,117 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:51,118 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:51,120 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-18 20:05:51,119 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:51,121 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:51,117 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-06-18 20:05:51,119 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:51,122 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:51,125 INFO sqlalchemy.engine.base.Engine Thread-138 : (2, 1)
2020-06-18 20:05:51,125 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-18 20:05:51,124 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-18 20:05:51,126 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:51,126 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:51,128 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-06-18 20:05:51,156 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-06-18 20:05:51,157 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:51,157 INFO sqlalchemy.engine.base.Engine Thread-139 : (2, 1)
2020-06-18 20:05:51,157 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:51,158 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:51,159 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-06-18 20:05:52,949 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-06-18 20:05:52,951 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-18 20:05:52,951 INFO sqlalchemy.engine.base.Engine Thread-140 : (31, 1)
2020-06-18 20:05:52,952 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-18 20:05:52,952 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27))
2020-06-18 20:05:52,957 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:05:52,957 INFO sqlalchemy.engine.base.Engine Thread-140 : ()
2020-06-18 20:05:52,958 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:05:52,958 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:52,958 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:05:52,960 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:05:52,960 INFO sqlalchemy.engine.base.Engine Thread-140 : (97,)
2020-06-18 20:05:52,960 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:05:52,961 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-18 20:05:52,961 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-18 20:05:52,962 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 20:05:52,962 INFO sqlalchemy.engine.base.Engine Thread-140 : (0, 1)
2020-06-18 20:05:52,963 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 20:05:52,967 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-18 20:05:52,967 INFO sqlalchemy.engine.base.Engine Thread-140 : (1, 1)
2020-06-18 20:05:52,968 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:05:52,968 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:05:52,970 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 20:05:52,970 INFO sqlalchemy.engine.base.Engine Thread-140 : (0, 1)
2020-06-18 20:05:52,970 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 20:05:52,973 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:52,973 INFO sqlalchemy.engine.base.Engine Thread-140 : (2, 1)
2020-06-18 20:05:52,974 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:52,974 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:53,033 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:53,033 INFO sqlalchemy.engine.base.Engine Thread-140 : ('bob', 1, 1)
2020-06-18 20:05:53,034 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,038 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:53,039 INFO sqlalchemy.engine.base.Engine Thread-140 : ('bob', 1, 1)
2020-06-18 20:05:53,039 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,042 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:53,042 INFO sqlalchemy.engine.base.Engine Thread-140 : ('bob', 1, 1)
2020-06-18 20:05:53,042 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,045 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:53,045 INFO sqlalchemy.engine.base.Engine Thread-140 : ('bob', 1, 1)
2020-06-18 20:05:53,045 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,046 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-06-18 20:05:53,302 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-06-18 20:05:53,303 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:53,303 INFO sqlalchemy.engine.base.Engine Thread-150 : (2, 1)
2020-06-18 20:05:53,304 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,304 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:53,305 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-06-18 20:05:53,358 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-06-18 20:05:53,360 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:53,361 INFO sqlalchemy.engine.base.Engine Thread-151 : (2, 1)
2020-06-18 20:05:53,362 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-06-18 20:05:53,366 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:53,369 INFO sqlalchemy.engine.base.Engine Thread-152 : (2, 1)
2020-06-18 20:05:53,363 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,369 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:53,368 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-06-18 20:05:53,370 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,372 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-06-18 20:05:53,373 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-06-18 20:05:53,374 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:53,374 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:53,375 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:53,376 INFO sqlalchemy.engine.base.Engine Thread-154 : (2, 1)
2020-06-18 20:05:53,375 INFO sqlalchemy.engine.base.Engine Thread-153 : (2, 1)
2020-06-18 20:05:53,379 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,378 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:53,379 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:53,381 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-06-18 20:05:53,380 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:53,377 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-06-18 20:05:53,382 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-06-18 20:05:57,090 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-06-18 20:05:57,091 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:57,092 INFO sqlalchemy.engine.base.Engine Thread-155 : (2, 1)
2020-06-18 20:05:57,092 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,093 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:57,095 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:05:57,095 INFO sqlalchemy.engine.base.Engine Thread-155 : (132,)
2020-06-18 20:05:57,096 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:05:57,096 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:05:57,096 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:05:57,096 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:05:57,096 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:05:57,121 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:05:57,121 INFO sqlalchemy.engine.base.Engine Thread-155 : (datetime.datetime(2020, 6, 17, 20, 5, 57, 96844), datetime.datetime(2020, 7, 1, 20, 5, 57, 96844), datetime.datetime(2020, 6, 17, 20, 5, 57, 96844), datetime.datetime(2020, 7, 1, 20, 5, 57, 96844), datetime.datetime(2020, 6, 17, 20, 5, 57, 96844), datetime.datetime(2020, 7, 1, 20, 5, 57, 96844))
2020-06-18 20:05:57,122 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:57,131 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:05:57,131 INFO sqlalchemy.engine.base.Engine Thread-155 : ('bob', datetime.datetime(2020, 6, 17, 20, 5, 57, 96844), datetime.datetime(2020, 7, 1, 20, 5, 57, 96844), datetime.datetime(2020, 6, 17, 20, 5, 57, 96844), datetime.datetime(2020, 7, 1, 20, 5, 57, 96844), datetime.datetime(2020, 6, 17, 20, 5, 57, 96844), datetime.datetime(2020, 7, 1, 20, 5, 57, 96844))
2020-06-18 20:05:57,133 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:05:57,138 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:57,138 INFO sqlalchemy.engine.base.Engine Thread-155 : ('bob', 1, 1)
2020-06-18 20:05:57,138 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,141 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:05:57,141 INFO sqlalchemy.engine.base.Engine Thread-155 : ('bob', 1, 1)
2020-06-18 20:05:57,142 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,143 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-06-18 20:05:57,351 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-06-18 20:05:57,352 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:57,352 INFO sqlalchemy.engine.base.Engine Thread-165 : (2, 1)
2020-06-18 20:05:57,353 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,353 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:57,354 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-06-18 20:05:57,357 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-06-18 20:05:57,358 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:57,359 INFO sqlalchemy.engine.base.Engine Thread-166 : (2, 1)
2020-06-18 20:05:57,360 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,361 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:57,362 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-06-18 20:05:57,366 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-06-18 20:05:57,367 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:57,367 INFO sqlalchemy.engine.base.Engine Thread-167 : (2, 1)
2020-06-18 20:05:57,368 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,368 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:57,369 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-06-18 20:05:57,383 INFO sqlalchemy.engine.base.Engine Thread-168 : BEGIN (implicit)
2020-06-18 20:05:57,384 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:57,384 INFO sqlalchemy.engine.base.Engine Thread-168 : (2, 1)
2020-06-18 20:05:57,385 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,385 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:57,386 INFO sqlalchemy.engine.base.Engine Thread-168 : ROLLBACK
2020-06-18 20:05:57,422 INFO sqlalchemy.engine.base.Engine Thread-169 : BEGIN (implicit)
2020-06-18 20:05:57,424 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:05:57,424 INFO sqlalchemy.engine.base.Engine Thread-169 : (2, 1)
2020-06-18 20:05:57,424 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:05:57,425 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:05:57,426 INFO sqlalchemy.engine.base.Engine Thread-169 : ROLLBACK
2020-06-18 20:06:00,830 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-06-18 20:06:00,831 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:06:00,832 INFO sqlalchemy.engine.base.Engine Thread-170 : (2, 1)
2020-06-18 20:06:00,832 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:00,832 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:06:00,835 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:06:00,835 INFO sqlalchemy.engine.base.Engine Thread-170 : (132,)
2020-06-18 20:06:00,835 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:06:00,836 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:06:00,836 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:06:00,836 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:06:00,836 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:06:00,862 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:06:00,862 INFO sqlalchemy.engine.base.Engine Thread-170 : (datetime.datetime(2020, 5, 21, 20, 6, 0, 837163), datetime.datetime(2020, 6, 19, 20, 6, 0, 837163), datetime.datetime(2020, 5, 21, 20, 6, 0, 837163), datetime.datetime(2020, 6, 19, 20, 6, 0, 837163), datetime.datetime(2020, 5, 21, 20, 6, 0, 837163), datetime.datetime(2020, 6, 19, 20, 6, 0, 837163))
2020-06-18 20:06:00,864 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:06:00,866 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,866 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,866 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,866 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,867 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,867 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,875 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:06:00,875 INFO sqlalchemy.engine.base.Engine Thread-170 : ('bob', datetime.datetime(2020, 5, 21, 20, 6, 0, 837163), datetime.datetime(2020, 6, 19, 20, 6, 0, 837163), datetime.datetime(2020, 5, 21, 20, 6, 0, 837163), datetime.datetime(2020, 6, 19, 20, 6, 0, 837163), datetime.datetime(2020, 5, 21, 20, 6, 0, 837163), datetime.datetime(2020, 6, 19, 20, 6, 0, 837163))
2020-06-18 20:06:00,877 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:06:00,877 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,878 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,878 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,878 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:06:00,882 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:06:00,883 INFO sqlalchemy.engine.base.Engine Thread-170 : ('bob', 1, 1)
2020-06-18 20:06:00,883 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:00,886 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:06:00,886 INFO sqlalchemy.engine.base.Engine Thread-170 : ('bob', 1, 1)
2020-06-18 20:06:00,887 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:00,888 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-06-18 20:06:01,130 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-06-18 20:06:01,132 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:06:01,132 INFO sqlalchemy.engine.base.Engine Thread-180 : (2, 1)
2020-06-18 20:06:01,134 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:01,134 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:06:01,136 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-06-18 20:06:01,138 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:06:01,138 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-06-18 20:06:01,141 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-06-18 20:06:01,145 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:06:01,144 INFO sqlalchemy.engine.base.Engine Thread-181 : (2, 1)
2020-06-18 20:06:01,146 INFO sqlalchemy.engine.base.Engine Thread-182 : (2, 1)
2020-06-18 20:06:01,144 INFO sqlalchemy.engine.base.Engine Thread-183 : BEGIN (implicit)
2020-06-18 20:06:01,147 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:01,147 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:01,149 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:06:01,149 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:06:01,149 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:06:01,150 INFO sqlalchemy.engine.base.Engine Thread-183 : (2, 1)
2020-06-18 20:06:01,151 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-06-18 20:06:01,152 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:01,152 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:06:01,153 INFO sqlalchemy.engine.base.Engine Thread-183 : ROLLBACK
2020-06-18 20:06:01,154 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-06-18 20:06:01,193 INFO sqlalchemy.engine.base.Engine Thread-184 : BEGIN (implicit)
2020-06-18 20:06:01,194 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:06:01,194 INFO sqlalchemy.engine.base.Engine Thread-184 : (2, 1)
2020-06-18 20:06:01,195 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:06:01,195 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:06:01,196 INFO sqlalchemy.engine.base.Engine Thread-184 : ROLLBACK
2020-06-18 20:08:30,894 INFO sqlalchemy.engine.base.Engine Thread-185 : BEGIN (implicit)
2020-06-18 20:08:30,896 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:08:30,897 INFO sqlalchemy.engine.base.Engine Thread-185 : ()
2020-06-18 20:08:30,898 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:08:30,898 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:08:30,899 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:08:30,900 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:08:30,900 INFO sqlalchemy.engine.base.Engine Thread-185 : (100,)
2020-06-18 20:08:30,901 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:08:30,901 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 20:08:30,901 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 20:08:30,901 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 20:08:30,901 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 20:08:30,901 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 20:08:30,904 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:30,904 INFO sqlalchemy.engine.base.Engine Thread-185 : (2, 1)
2020-06-18 20:08:30,904 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:30,905 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:30,910 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:08:30,910 INFO sqlalchemy.engine.base.Engine Thread-185 : ('bob', 1, 1)
2020-06-18 20:08:30,910 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:30,911 INFO sqlalchemy.engine.base.Engine Thread-185 : ROLLBACK
2020-06-18 20:08:31,171 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-06-18 20:08:31,172 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:31,172 INFO sqlalchemy.engine.base.Engine Thread-195 : (2, 1)
2020-06-18 20:08:31,173 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:31,173 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:31,175 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-06-18 20:08:31,250 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-06-18 20:08:31,253 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:31,253 INFO sqlalchemy.engine.base.Engine Thread-196 : (2, 1)
2020-06-18 20:08:31,255 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-06-18 20:08:31,255 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:31,256 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:31,260 INFO sqlalchemy.engine.base.Engine Thread-197 : (2, 1)
2020-06-18 20:08:31,259 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:31,259 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-06-18 20:08:31,261 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-06-18 20:08:31,262 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:31,264 INFO sqlalchemy.engine.base.Engine Thread-198 : (2, 1)
2020-06-18 20:08:31,264 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:31,265 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:31,266 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-06-18 20:08:31,268 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-06-18 20:08:31,269 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:31,269 INFO sqlalchemy.engine.base.Engine Thread-199 : (2, 1)
2020-06-18 20:08:31,270 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:31,270 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:31,271 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-06-18 20:08:31,272 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:31,273 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:31,274 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-06-18 20:08:32,067 INFO sqlalchemy.engine.base.Engine Thread-200 : BEGIN (implicit)
2020-06-18 20:08:32,069 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 20:08:32,069 INFO sqlalchemy.engine.base.Engine Thread-200 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:08:32,072 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:08:32,073 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:08:32,077 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 20:08:32,077 INFO sqlalchemy.engine.base.Engine Thread-200 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:08:32,078 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:08:32,079 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 20:08:32,083 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 20:08:32,083 INFO sqlalchemy.engine.base.Engine Thread-200 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:08:32,084 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:08:32,084 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 20:08:32,085 INFO sqlalchemy.engine.base.Engine Thread-200 : ROLLBACK
2020-06-18 20:08:32,116 INFO sqlalchemy.engine.base.Engine Thread-201 : BEGIN (implicit)
2020-06-18 20:08:32,117 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 20:08:32,118 INFO sqlalchemy.engine.base.Engine Thread-201 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:08:32,119 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:08:32,120 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:08:32,125 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 20:08:32,125 INFO sqlalchemy.engine.base.Engine Thread-201 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:08:32,126 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:08:32,127 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 20:08:32,133 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 20:08:32,134 INFO sqlalchemy.engine.base.Engine Thread-201 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:08:32,134 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:08:32,135 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 20:08:32,136 INFO sqlalchemy.engine.base.Engine Thread-201 : ROLLBACK
2020-06-18 20:08:32,167 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-06-18 20:08:32,168 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,169 INFO sqlalchemy.engine.base.Engine Thread-202 : (2, 1)
2020-06-18 20:08:32,169 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,170 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,177 INFO sqlalchemy.engine.base.Engine Thread-203 : BEGIN (implicit)
2020-06-18 20:08:32,178 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,178 INFO sqlalchemy.engine.base.Engine Thread-203 : (2, 1)
2020-06-18 20:08:32,179 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,187 INFO sqlalchemy.engine.base.Engine Thread-204 : BEGIN (implicit)
2020-06-18 20:08:32,187 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,189 INFO sqlalchemy.engine.base.Engine Thread-205 : BEGIN (implicit)
2020-06-18 20:08:32,192 INFO sqlalchemy.engine.base.Engine Thread-206 : BEGIN (implicit)
2020-06-18 20:08:32,195 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-06-18 20:08:32,206 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,207 INFO sqlalchemy.engine.base.Engine Thread-207 : (2, 1)
2020-06-18 20:08:32,196 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,207 INFO sqlalchemy.engine.base.Engine Thread-204 : (2, 1)
2020-06-18 20:08:32,204 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,207 INFO sqlalchemy.engine.base.Engine Thread-205 : (2, 1)
2020-06-18 20:08:32,205 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,197 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,208 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,215 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,208 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,214 INFO sqlalchemy.engine.base.Engine Thread-206 : (2, 1)
2020-06-18 20:08:32,214 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,226 INFO sqlalchemy.engine.base.Engine Thread-203 : (19, 1)
2020-06-18 20:08:32,208 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,227 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,226 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,215 INFO sqlalchemy.engine.base.Engine Thread-202 : (15, 1)
2020-06-18 20:08:32,227 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,216 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,237 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,238 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,238 INFO sqlalchemy.engine.base.Engine Thread-207 : (23, 1)
2020-06-18 20:08:32,238 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,244 INFO sqlalchemy.engine.base.Engine Thread-204 : (20, 1)
2020-06-18 20:08:32,244 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,246 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 20:08:32,252 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,268 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 20:08:32,264 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,269 INFO sqlalchemy.engine.base.Engine Thread-206 : (22, 1)
2020-06-18 20:08:32,266 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 20:08:32,267 INFO sqlalchemy.engine.base.Engine Thread-203 : ROLLBACK
2020-06-18 20:08:32,259 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,269 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-06-18 20:08:32,264 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,270 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-06-18 20:08:32,270 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,270 INFO sqlalchemy.engine.base.Engine Thread-205 : (21, 1)
2020-06-18 20:08:32,272 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:08:32,276 INFO sqlalchemy.engine.base.Engine Thread-204 : ROLLBACK
2020-06-18 20:08:32,275 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 20:08:32,278 INFO sqlalchemy.engine.base.Engine Thread-206 : ROLLBACK
2020-06-18 20:08:32,278 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,279 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 20:08:32,280 INFO sqlalchemy.engine.base.Engine Thread-205 : ROLLBACK
2020-06-18 20:08:32,286 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-06-18 20:08:32,287 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,287 INFO sqlalchemy.engine.base.Engine Thread-208 : (2, 1)
2020-06-18 20:08:32,288 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,288 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,299 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,301 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-06-18 20:08:32,302 INFO sqlalchemy.engine.base.Engine Thread-208 : (27, 1)
2020-06-18 20:08:32,304 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-06-18 20:08:32,305 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,308 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-06-18 20:08:32,309 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,311 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-06-18 20:08:32,311 INFO sqlalchemy.engine.base.Engine Thread-209 : (2, 1)
2020-06-18 20:08:32,312 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,313 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,313 INFO sqlalchemy.engine.base.Engine Thread-210 : (2, 1)
2020-06-18 20:08:32,314 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:32,316 INFO sqlalchemy.engine.base.Engine Thread-212 : (2, 1)
2020-06-18 20:08:32,316 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,317 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,316 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,315 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:08:32,316 INFO sqlalchemy.engine.base.Engine Thread-211 : (2, 1)
2020-06-18 20:08:32,328 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,328 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,329 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,330 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-06-18 20:08:32,330 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,330 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:32,364 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:32,341 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,331 INFO sqlalchemy.engine.base.Engine Thread-209 : (56, 1)
2020-06-18 20:08:32,367 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,391 INFO sqlalchemy.engine.base.Engine Thread-212 : (30, 1)
2020-06-18 20:08:32,377 INFO sqlalchemy.engine.base.Engine Thread-210 : (57, 1)
2020-06-18 20:08:32,392 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,391 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:08:32,390 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 20:08:32,395 INFO sqlalchemy.engine.base.Engine Thread-211 : (31, 1)
2020-06-18 20:08:32,395 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:08:32,393 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:08:32,397 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-06-18 20:08:32,397 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-06-18 20:08:32,398 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:08:32,401 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:08:32,401 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-06-18 20:08:32,404 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:08:32,406 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:08:32,407 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-06-18 20:08:35,366 INFO sqlalchemy.engine.base.Engine Thread-213 : BEGIN (implicit)
2020-06-18 20:08:35,367 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:35,367 INFO sqlalchemy.engine.base.Engine Thread-213 : (2, 1)
2020-06-18 20:08:35,368 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:35,368 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:35,372 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-18 20:08:35,373 INFO sqlalchemy.engine.base.Engine Thread-213 : (datetime.datetime(2020, 6, 27, 0, 0), datetime.datetime(2020, 6, 27, 23, 59), datetime.datetime(2020, 6, 27, 0, 0), datetime.datetime(2020, 6, 27, 23, 59), datetime.datetime(2020, 6, 27, 0, 0), datetime.datetime(2020, 6, 27, 23, 59))
2020-06-18 20:08:35,373 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-18 20:08:35,374 INFO sqlalchemy.engine.base.Engine Thread-213 : ROLLBACK
2020-06-18 20:08:37,294 INFO sqlalchemy.engine.base.Engine Thread-214 : BEGIN (implicit)
2020-06-18 20:08:37,295 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:08:37,295 INFO sqlalchemy.engine.base.Engine Thread-214 : (2, 1)
2020-06-18 20:08:37,295 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:37,296 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:08:37,299 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:08:37,299 INFO sqlalchemy.engine.base.Engine Thread-214 : ()
2020-06-18 20:08:37,300 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:08:37,301 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:08:37,301 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:08:37,302 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:08:37,302 INFO sqlalchemy.engine.base.Engine Thread-214 : (100,)
2020-06-18 20:08:37,303 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:08:37,303 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 20:08:37,303 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 20:08:37,303 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 20:08:37,303 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 20:08:37,304 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 20:08:37,305 INFO sqlalchemy.engine.base.Engine Thread-214 : ROLLBACK
2020-06-18 20:08:39,271 INFO sqlalchemy.engine.base.Engine Thread-215 : BEGIN (implicit)
2020-06-18 20:08:39,272 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:08:39,272 INFO sqlalchemy.engine.base.Engine Thread-215 : ('bob', 1, 1)
2020-06-18 20:08:39,273 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:08:39,274 INFO sqlalchemy.engine.base.Engine Thread-215 : ROLLBACK
2020-06-18 20:09:17,938 INFO sqlalchemy.engine.base.Engine Thread-216 : BEGIN (implicit)
2020-06-18 20:09:17,939 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:09:17,939 INFO sqlalchemy.engine.base.Engine Thread-216 : ('bob', 1, 1)
2020-06-18 20:09:17,940 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:09:17,941 INFO sqlalchemy.engine.base.Engine Thread-216 : ROLLBACK
2020-06-18 20:11:42,419 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-18 20:11:42,419 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 20:11:42,420 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-18 20:11:42,421 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-18 20:11:42,421 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-18 20:11:42,421 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 20:11:42,422 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-18 20:11:42,422 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-18 20:11:42,422 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-18 20:11:42,422 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 20:11:42,423 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-18 20:11:42,423 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-18 20:11:42,423 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-18 20:11:42,423 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 20:11:42,424 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-18 20:11:42,424 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-18 20:11:42,425 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-18 20:11:42,425 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 20:11:42,426 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-18 20:11:42,426 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 20:11:42,426 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-18 20:11:42,426 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-18 20:11:42,427 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-18 20:11:42,429 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-06-18 20:11:42,429 INFO sqlalchemy.engine.base.Engine Thread-2 : (101,)
2020-06-18 20:11:42,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-06-18 20:11:42,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-06-18 20:11:42,432 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-18 20:11:47,584 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-18 20:11:47,585 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-06-18 20:11:47,585 INFO sqlalchemy.engine.base.Engine Thread-3 : (108,)
2020-06-18 20:11:47,586 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-06-18 20:11:47,586 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-06-18 20:11:47,587 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-18 20:17:42,761 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-18 20:17:42,764 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:42,764 INFO sqlalchemy.engine.base.Engine Thread-4 : (2, 1)
2020-06-18 20:17:42,766 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:42,767 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:42,777 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-18 20:17:42,777 INFO sqlalchemy.engine.base.Engine Thread-4 : (datetime.datetime(2020, 6, 27, 0, 0), datetime.datetime(2020, 6, 27, 23, 59), datetime.datetime(2020, 6, 27, 0, 0), datetime.datetime(2020, 6, 27, 23, 59), datetime.datetime(2020, 6, 27, 0, 0), datetime.datetime(2020, 6, 27, 23, 59))
2020-06-18 20:17:42,778 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-18 20:17:42,808 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-18 20:17:45,813 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-18 20:17:45,814 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:45,814 INFO sqlalchemy.engine.base.Engine Thread-5 : (2, 1)
2020-06-18 20:17:45,814 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:45,815 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:45,823 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:17:45,823 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:17:45,825 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:17:45,825 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:17:45,825 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:17:45,827 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:17:45,827 INFO sqlalchemy.engine.base.Engine Thread-5 : (100,)
2020-06-18 20:17:45,828 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:17:45,829 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 20:17:45,829 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 20:17:45,829 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 20:17:45,829 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 20:17:45,829 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 20:17:45,835 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-18 20:17:49,765 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-18 20:17:49,768 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-18 20:17:49,768 INFO sqlalchemy.engine.base.Engine Thread-6 : (0, 1)
2020-06-18 20:17:49,768 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-18 20:17:49,774 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:17:49,774 INFO sqlalchemy.engine.base.Engine Thread-6 : ()
2020-06-18 20:17:49,775 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:17:49,776 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:17:49,776 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:17:49,777 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:17:49,777 INFO sqlalchemy.engine.base.Engine Thread-6 : (97,)
2020-06-18 20:17:49,778 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:17:49,778 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-18 20:17:49,778 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-18 20:17:49,780 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 20:17:49,780 INFO sqlalchemy.engine.base.Engine Thread-6 : (0, 1)
2020-06-18 20:17:49,781 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 20:17:49,784 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-18 20:17:49,784 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-18 20:17:49,785 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:17:49,785 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:17:49,787 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 20:17:49,787 INFO sqlalchemy.engine.base.Engine Thread-6 : (0, 1)
2020-06-18 20:17:49,787 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 20:17:52,040 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-18 20:17:52,042 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-18 20:17:52,043 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:52,042 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-18 20:17:52,044 INFO sqlalchemy.engine.base.Engine Thread-12 : (2, 1)
2020-06-18 20:17:52,045 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-18 20:17:52,047 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:52,047 INFO sqlalchemy.engine.base.Engine Thread-13 : (2, 1)
2020-06-18 20:17:52,046 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:52,048 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:52,048 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:52,049 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:52,049 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:52,049 INFO sqlalchemy.engine.base.Engine Thread-14 : (2, 1)
2020-06-18 20:17:52,049 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-18 20:17:52,051 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:52,051 INFO sqlalchemy.engine.base.Engine Thread-15 : (2, 1)
2020-06-18 20:17:52,052 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:52,052 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:52,063 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-18 20:17:52,069 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:52,069 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:52,070 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-18 20:17:52,081 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-18 20:17:52,087 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-18 20:17:52,128 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-18 20:17:52,129 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:52,129 INFO sqlalchemy.engine.base.Engine Thread-16 : (2, 1)
2020-06-18 20:17:52,129 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:52,129 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:52,130 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-18 20:17:54,831 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-18 20:17:54,832 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:54,832 INFO sqlalchemy.engine.base.Engine Thread-17 : (2, 1)
2020-06-18 20:17:54,833 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:54,833 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@test.co.uk', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 18, 36, 8), datetime.datetime(2020, 2, 18, 11, 40, 1), 'philip', 0)
2020-06-18 20:17:54,835 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-18 20:17:54,911 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-06-18 20:17:54,912 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-06-18 20:17:54,912 INFO sqlalchemy.engine.base.Engine Thread-19 : ()
2020-06-18 20:17:54,913 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-06-18 20:17:54,913 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-06-18 20:17:54,913 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (6, 'New User (No Login)', 0, '', datetime.datetime(2020, 2, 4, 12, 44, 31), 1)
2020-06-18 20:17:54,914 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-06-18 20:17:54,915 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:17:54,915 INFO sqlalchemy.engine.base.Engine Thread-19 : (63,)
2020-06-18 20:17:54,916 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:17:54,916 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 20:17:54,916 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-18 20:17:54,916 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-18 20:17:54,917 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-18 20:17:54,917 INFO sqlalchemy.engine.base.Engine Thread-19 : (124, 1)
2020-06-18 20:17:54,918 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:17:54,918 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-18 20:17:54,930 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-06-18 20:17:58,010 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-06-18 20:17:58,011 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-06-18 20:17:58,011 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-06-18 20:17:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-06-18 20:17:58,012 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-06-18 20:17:58,012 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (6, 'New User (No Login)', 0, '', datetime.datetime(2020, 2, 4, 12, 44, 31), 1)
2020-06-18 20:17:58,012 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-06-18 20:17:58,013 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:17:58,013 INFO sqlalchemy.engine.base.Engine Thread-21 : (63,)
2020-06-18 20:17:58,014 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:17:58,014 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-06-18 20:17:58,014 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-06-18 20:17:58,014 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-06-18 20:17:58,016 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-06-18 20:17:58,016 INFO sqlalchemy.engine.base.Engine Thread-21 : (124, 1)
2020-06-18 20:17:58,016 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:17:58,017 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-18 20:17:58,018 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-06-18 20:17:58,019 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1)
2020-06-18 20:17:58,019 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,019 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 14, 19, 29, 32), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,021 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-06-18 20:17:58,021 INFO sqlalchemy.engine.base.Engine Thread-21 : (2, 1)
2020-06-18 20:17:58,021 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-06-18 20:17:58,022 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-06-18 20:17:58,337 INFO sqlalchemy.engine.base.Engine Thread-21 : UPDATE users SET last_login=%s WHERE users.id = %s
2020-06-18 20:17:58,338 INFO sqlalchemy.engine.base.Engine Thread-21 : (datetime.datetime(2020, 6, 18, 20, 17, 58, 336463), 1)
2020-06-18 20:17:58,339 INFO sqlalchemy.engine.base.Engine Thread-21 : COMMIT
2020-06-18 20:17:58,340 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-06-18 20:17:58,341 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s
2020-06-18 20:17:58,341 INFO sqlalchemy.engine.base.Engine Thread-21 : (1,)
2020-06-18 20:17:58,342 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,342 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,345 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-06-18 20:17:58,390 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-06-18 20:17:58,391 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:58,391 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-06-18 20:17:58,392 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,392 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,395 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:17:58,395 INFO sqlalchemy.engine.base.Engine Thread-22 : (132,)
2020-06-18 20:17:58,395 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:17:58,396 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:17:58,396 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:17:58,396 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:17:58,396 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:17:58,426 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:17:58,426 INFO sqlalchemy.engine.base.Engine Thread-22 : (datetime.datetime(2020, 6, 17, 20, 17, 58, 396610), datetime.datetime(2020, 7, 1, 20, 17, 58, 396610), datetime.datetime(2020, 6, 17, 20, 17, 58, 396610), datetime.datetime(2020, 7, 1, 20, 17, 58, 396610), datetime.datetime(2020, 6, 17, 20, 17, 58, 396610), datetime.datetime(2020, 7, 1, 20, 17, 58, 396610))
2020-06-18 20:17:58,428 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:17:58,436 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:17:58,436 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', datetime.datetime(2020, 6, 17, 20, 17, 58, 396610), datetime.datetime(2020, 7, 1, 20, 17, 58, 396610), datetime.datetime(2020, 6, 17, 20, 17, 58, 396610), datetime.datetime(2020, 7, 1, 20, 17, 58, 396610), datetime.datetime(2020, 6, 17, 20, 17, 58, 396610), datetime.datetime(2020, 7, 1, 20, 17, 58, 396610))
2020-06-18 20:17:58,438 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:17:58,530 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:17:58,530 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-06-18 20:17:58,531 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,531 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,534 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:17:58,534 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-06-18 20:17:58,534 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,534 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,536 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-06-18 20:17:58,772 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-18 20:17:58,774 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:58,774 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-18 20:17:58,775 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,775 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,776 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-18 20:17:58,855 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-18 20:17:58,858 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:58,861 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-18 20:17:58,861 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-18 20:17:58,863 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-18 20:17:58,865 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:58,866 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:58,866 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-06-18 20:17:58,867 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-18 20:17:58,868 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,872 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,868 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,873 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,867 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,875 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,871 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-18 20:17:58,878 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:17:58,878 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-18 20:17:58,876 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-18 20:17:58,874 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-18 20:17:58,873 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-18 20:17:58,880 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:17:58,880 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:17:58,881 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-06-18 20:18:02,325 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-06-18 20:18:02,327 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:18:02,327 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-06-18 20:18:02,329 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:18:02,329 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:18:02,329 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:18:02,331 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:18:02,331 INFO sqlalchemy.engine.base.Engine Thread-37 : (100,)
2020-06-18 20:18:02,331 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:18:02,332 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 20:18:02,332 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 20:18:02,332 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 20:18:02,332 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 20:18:02,332 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 20:18:02,334 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:02,334 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-06-18 20:18:02,335 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:02,335 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:02,345 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:18:02,345 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-06-18 20:18:02,346 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:02,346 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:02,347 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-06-18 20:18:02,588 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-18 20:18:02,590 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:02,590 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-18 20:18:02,591 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:02,591 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:02,592 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-18 20:18:02,596 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-18 20:18:02,597 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:02,597 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-18 20:18:02,600 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-18 20:18:02,601 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:02,601 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-18 20:18:02,604 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-18 20:18:02,605 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:02,606 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-06-18 20:18:02,607 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:02,607 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:02,607 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:02,608 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:02,609 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:02,609 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-18 20:18:02,610 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-18 20:18:02,608 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:02,614 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-18 20:18:02,644 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-06-18 20:18:02,645 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:02,645 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-06-18 20:18:02,646 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:02,646 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:02,647 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-06-18 20:18:03,410 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-06-18 20:18:03,412 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 20:18:03,412 INFO sqlalchemy.engine.base.Engine Thread-52 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:18:03,415 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 20:18:03,415 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 20:18:03,415 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 20:18:03,415 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 20:18:03,416 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 20:18:03,416 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:18:03,416 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:18:03,416 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:18:03,416 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:18:03,416 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:18:03,421 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 20:18:03,421 INFO sqlalchemy.engine.base.Engine Thread-52 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:18:03,422 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:18:03,423 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 20:18:03,428 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 20:18:03,428 INFO sqlalchemy.engine.base.Engine Thread-52 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:18:03,429 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:18:03,429 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 20:18:03,431 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-06-18 20:18:03,462 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-06-18 20:18:03,464 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-18 20:18:03,464 INFO sqlalchemy.engine.base.Engine Thread-53 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:18:03,466 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-18 20:18:03,466 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-18 20:18:03,466 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-18 20:18:03,467 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-18 20:18:03,467 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-18 20:18:03,467 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:18:03,467 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-18 20:18:03,467 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:18:03,467 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:18:03,467 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-18 20:18:03,472 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-18 20:18:03,472 INFO sqlalchemy.engine.base.Engine Thread-53 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:18:03,473 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:18:03,473 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-18 20:18:03,478 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-18 20:18:03,478 INFO sqlalchemy.engine.base.Engine Thread-53 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-18 20:18:03,479 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-18 20:18:03,479 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-18 20:18:03,480 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-06-18 20:18:03,508 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-06-18 20:18:03,509 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,511 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-06-18 20:18:03,511 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-06-18 20:18:03,514 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,521 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-06-18 20:18:03,515 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-06-18 20:18:03,521 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,523 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,522 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,533 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-06-18 20:18:03,523 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,518 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-18 20:18:03,534 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,534 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,536 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,536 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-18 20:18:03,537 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,552 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-18 20:18:03,553 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,546 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,551 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-18 20:18:03,552 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,554 INFO sqlalchemy.engine.base.Engine Thread-55 : (19, 1)
2020-06-18 20:18:03,539 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,553 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,553 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-18 20:18:03,554 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,576 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-18 20:18:03,565 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,576 INFO sqlalchemy.engine.base.Engine Thread-56 : (20, 1)
2020-06-18 20:18:03,576 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,577 INFO sqlalchemy.engine.base.Engine Thread-57 : (21, 1)
2020-06-18 20:18:03,577 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,577 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,545 INFO sqlalchemy.engine.base.Engine Thread-54 : (15, 1)
2020-06-18 20:18:03,578 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,578 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,579 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,591 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,595 INFO sqlalchemy.engine.base.Engine Thread-58 : (23, 1)
2020-06-18 20:18:03,592 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,593 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:18:03,594 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,595 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 20:18:03,597 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 20:18:03,592 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,597 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,625 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,636 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-18 20:18:03,643 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-06-18 20:18:03,644 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 20:18:03,665 INFO sqlalchemy.engine.base.Engine Thread-59 : (22, 1)
2020-06-18 20:18:03,665 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-06-18 20:18:03,671 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-18 20:18:03,677 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-06-18 20:18:03,678 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-18 20:18:03,680 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,682 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-18 20:18:03,684 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-18 20:18:03,688 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-18 20:18:03,689 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,690 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-18 20:18:03,690 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,690 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,702 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,702 INFO sqlalchemy.engine.base.Engine Thread-60 : (27, 1)
2020-06-18 20:18:03,704 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-18 20:18:03,706 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,706 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,708 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-18 20:18:03,708 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-18 20:18:03,711 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-18 20:18:03,712 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:18:03,714 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-18 20:18:03,715 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,716 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,717 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-18 20:18:03,718 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,719 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,719 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-18 20:18:03,719 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-18 20:18:03,719 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:03,732 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,733 INFO sqlalchemy.engine.base.Engine Thread-61 : (56, 1)
2020-06-18 20:18:03,733 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,734 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,733 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,733 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-06-18 20:18:03,744 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,745 INFO sqlalchemy.engine.base.Engine Thread-62 : (57, 1)
2020-06-18 20:18:03,745 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,745 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,746 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:03,760 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:03,747 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:18:03,771 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_hap', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-18 20:18:03,775 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,788 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-18 20:18:03,794 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-18 20:18:03,796 INFO sqlalchemy.engine.base.Engine Thread-64 : (30, 1)
2020-06-18 20:18:03,795 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-18 20:18:03,796 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-18 20:18:03,794 INFO sqlalchemy.engine.base.Engine Thread-63 : (31, 1)
2020-06-18 20:18:03,798 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:18:03,800 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:18:03,801 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:18:03,804 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:18:03,805 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-18 20:18:03,806 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-18 20:18:04,278 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-18 20:18:04,279 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:04,279 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-18 20:18:04,279 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:04,280 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:04,284 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-18 20:18:04,284 INFO sqlalchemy.engine.base.Engine Thread-65 : (datetime.datetime(2020, 6, 26, 0, 0), datetime.datetime(2020, 6, 26, 23, 59), datetime.datetime(2020, 6, 26, 0, 0), datetime.datetime(2020, 6, 26, 23, 59), datetime.datetime(2020, 6, 26, 0, 0), datetime.datetime(2020, 6, 26, 23, 59))
2020-06-18 20:18:04,285 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-18 20:18:04,286 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-18 20:18:05,601 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-18 20:18:05,602 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:18:05,602 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-06-18 20:18:05,603 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:18:05,603 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:18:05,608 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:18:05,609 INFO sqlalchemy.engine.base.Engine Thread-66 : ()
2020-06-18 20:18:05,609 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:18:05,610 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:18:05,610 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:18:05,611 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:18:05,611 INFO sqlalchemy.engine.base.Engine Thread-66 : (100,)
2020-06-18 20:18:05,612 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:18:05,612 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 20:18:05,612 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 20:18:05,612 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 20:18:05,612 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 20:18:05,613 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 20:18:05,614 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-18 20:18:07,469 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-18 20:18:07,470 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-18 20:18:07,471 INFO sqlalchemy.engine.base.Engine Thread-67 : (0, 1)
2020-06-18 20:18:07,471 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-18 20:18:07,476 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-18 20:18:07,476 INFO sqlalchemy.engine.base.Engine Thread-67 : ()
2020-06-18 20:18:07,477 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:18:07,477 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:18:07,478 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:18:07,479 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:18:07,479 INFO sqlalchemy.engine.base.Engine Thread-67 : (97,)
2020-06-18 20:18:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:18:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-18 20:18:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-18 20:18:07,481 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 20:18:07,481 INFO sqlalchemy.engine.base.Engine Thread-67 : (0, 1)
2020-06-18 20:18:07,482 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 20:18:07,486 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-18 20:18:07,486 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-18 20:18:07,524 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:18:07,524 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:18:07,526 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-18 20:18:07,526 INFO sqlalchemy.engine.base.Engine Thread-67 : (0, 1)
2020-06-18 20:18:07,527 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-06-18 20:25:35,346 INFO sqlalchemy.engine.base.Engine Thread-5 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-18 20:25:35,347 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:25:35,348 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('Variable_name', 'Value')
2020-06-18 20:25:35,349 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('sql_mode', '')
2020-06-18 20:25:35,350 INFO sqlalchemy.engine.base.Engine Thread-5 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-18 20:25:35,350 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:25:35,350 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('Variable_name', 'Value')
2020-06-18 20:25:35,350 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('lower_case_table_names', '0')
2020-06-18 20:25:35,351 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT DATABASE()
2020-06-18 20:25:35,351 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:25:35,351 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('DATABASE()',)
2020-06-18 20:25:35,351 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('fmapp',)
2020-06-18 20:25:35,352 INFO sqlalchemy.engine.base.Engine Thread-5 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-18 20:25:35,352 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:25:35,353 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-18 20:25:35,353 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-18 20:25:35,354 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-18 20:25:35,354 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:25:35,354 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-18 20:25:35,354 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:25:35,355 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-18 20:25:35,355 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-18 20:25:35,356 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-18 20:25:35,358 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:35,358 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-18 20:25:35,359 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-18 20:25:35,360 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:35,359 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-18 20:25:35,360 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-18 20:25:35,363 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:35,362 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:35,363 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-18 20:25:35,363 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:35,362 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:35,359 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-18 20:25:35,373 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:35,373 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-18 20:25:35,364 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:35,373 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:35,365 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:35,374 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:35,398 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-18 20:25:35,399 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-18 20:25:35,399 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:35,402 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-18 20:25:35,403 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-18 20:25:35,608 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-18 20:25:35,609 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:35,609 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-18 20:25:35,610 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:35,610 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:35,611 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-18 20:25:39,271 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-18 20:25:39,277 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.complex_active = %s
2020-06-18 20:25:39,277 INFO sqlalchemy.engine.base.Engine Thread-7 : (67,)
2020-06-18 20:25:39,279 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:25:39,279 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:25:39,280 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-18 20:25:39,281 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:39,282 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-18 20:25:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:39,353 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:25:39,353 INFO sqlalchemy.engine.base.Engine Thread-7 : ('philip', 1, 1)
2020-06-18 20:25:39,354 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:39,354 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:39,355 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-18 20:25:39,624 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-18 20:25:39,625 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:39,625 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-18 20:25:39,626 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:39,626 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:39,627 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-18 20:25:39,630 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-18 20:25:39,631 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:39,632 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-18 20:25:39,632 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:39,632 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:39,633 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-18 20:25:39,638 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-06-18 20:25:39,639 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:39,639 INFO sqlalchemy.engine.base.Engine Thread-19 : (1, 1)
2020-06-18 20:25:39,640 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:39,640 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:39,643 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-06-18 20:25:39,644 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:39,645 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-06-18 20:25:39,645 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-06-18 20:25:39,646 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:39,647 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:39,648 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-06-18 20:25:39,678 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-06-18 20:25:39,678 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:25:39,679 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-06-18 20:25:39,679 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:25:39,679 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:25:39,680 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-06-18 20:28:57,999 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-06-18 20:28:58,000 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:28:58,000 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-06-18 20:28:58,001 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,001 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,004 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:28:58,004 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-06-18 20:28:58,005 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,005 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,008 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:28:58,008 INFO sqlalchemy.engine.base.Engine Thread-22 : (0,)
2020-06-18 20:28:58,009 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:28:58,009 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-18 20:28:58,009 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-06-18 20:28:58,009 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (138, 'Copy Date options', 'Copy Date options', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (132, 'Date View Options', 'Date View Options', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-06-18 20:28:58,010 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-06-18 20:28:58,011 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-06-18 20:28:58,013 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-06-18 20:28:58,014 INFO sqlalchemy.engine.base.Engine Thread-22 : (0, 1)
2020-06-18 20:28:58,014 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:28:58,014 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-06-18 20:28:58,015 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-06-18 20:28:58,016 INFO sqlalchemy.engine.base.Engine Thread-22 : (66,)
2020-06-18 20:28:58,016 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:28:58,016 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-18 20:28:58,016 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-18 20:28:58,036 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:28:58,036 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-06-18 20:28:58,036 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,037 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,040 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-06-18 20:28:58,291 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-18 20:28:58,292 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:28:58,293 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-18 20:28:58,293 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,294 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,295 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-18 20:28:58,363 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-18 20:28:58,363 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:28:58,364 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-18 20:28:58,364 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,364 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,366 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-18 20:28:58,372 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-18 20:28:58,374 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:28:58,374 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-18 20:28:58,375 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-18 20:28:58,376 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:28:58,377 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-06-18 20:28:58,377 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,377 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,378 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-18 20:28:58,379 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,379 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,380 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-18 20:28:58,384 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-18 20:28:58,385 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:28:58,385 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-18 20:28:58,386 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:28:58,386 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:28:58,387 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-06-18 20:29:23,327 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-06-18 20:29:23,329 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:23,329 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-06-18 20:29:23,330 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,330 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,332 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:29:23,332 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-06-18 20:29:23,333 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,333 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,344 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-06-18 20:29:23,344 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-06-18 20:29:23,346 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-06-18 20:29:23,347 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-06-18 20:29:23,347 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 101, 'Fortigate', 'Fortigate', 100, 0, 0, 1, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-06-18 20:29:23,363 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:29:23,363 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-06-18 20:29:23,364 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,364 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,366 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-06-18 20:29:23,614 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-18 20:29:23,615 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:23,615 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-18 20:29:23,616 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,616 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,617 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-18 20:29:23,688 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-18 20:29:23,689 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:23,689 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-18 20:29:23,691 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,691 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,693 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-18 20:29:23,695 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:23,697 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-18 20:29:23,698 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-18 20:29:23,701 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-06-18 20:29:23,701 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-18 20:29:23,702 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:23,704 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-06-18 20:29:23,703 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:23,705 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,705 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,706 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,706 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,705 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-06-18 20:29:23,707 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-18 20:29:23,708 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-18 20:29:23,710 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:23,710 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:23,711 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-06-18 20:29:26,322 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-06-18 20:29:26,323 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:26,323 INFO sqlalchemy.engine.base.Engine Thread-52 : (1, 1)
2020-06-18 20:29:26,324 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,324 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,326 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:29:26,326 INFO sqlalchemy.engine.base.Engine Thread-52 : ('philip', 1, 1)
2020-06-18 20:29:26,327 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,327 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,330 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-18 20:29:26,330 INFO sqlalchemy.engine.base.Engine Thread-52 : ('1', 1)
2020-06-18 20:29:26,331 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-18 20:29:26,331 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 20:29:26,335 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:29:26,335 INFO sqlalchemy.engine.base.Engine Thread-52 : (89,)
2020-06-18 20:29:26,336 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,336 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-06-18 20:29:26,336 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-06-18 20:29:26,337 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:29:26,337 INFO sqlalchemy.engine.base.Engine Thread-52 : (2,)
2020-06-18 20:29:26,338 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,338 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-06-18 20:29:26,338 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-06-18 20:29:26,338 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-06-18 20:29:26,339 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:29:26,339 INFO sqlalchemy.engine.base.Engine Thread-52 : (100,)
2020-06-18 20:29:26,340 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,340 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-18 20:29:26,340 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-18 20:29:26,340 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-18 20:29:26,340 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-18 20:29:26,340 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-18 20:29:26,342 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-18 20:29:26,342 INFO sqlalchemy.engine.base.Engine Thread-52 : (1,)
2020-06-18 20:29:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-18 20:29:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-18 20:29:26,344 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-18 20:29:26,344 INFO sqlalchemy.engine.base.Engine Thread-52 : (1,)
2020-06-18 20:29:26,344 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,344 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-18 20:29:26,345 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-18 20:29:26,346 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-18 20:29:26,346 INFO sqlalchemy.engine.base.Engine Thread-52 : (105,)
2020-06-18 20:29:26,346 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,347 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-06-18 20:29:26,347 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-06-18 20:29:26,348 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-18 20:29:26,348 INFO sqlalchemy.engine.base.Engine Thread-52 : (92,)
2020-06-18 20:29:26,349 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,349 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-18 20:29:26,349 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-18 20:29:26,349 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-18 20:29:26,349 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-18 20:29:26,350 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-18 20:29:26,350 INFO sqlalchemy.engine.base.Engine Thread-52 : (66,)
2020-06-18 20:29:26,351 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:29:26,351 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-06-18 20:29:26,351 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-06-18 20:29:26,395 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:29:26,395 INFO sqlalchemy.engine.base.Engine Thread-52 : ('philip', 1, 1)
2020-06-18 20:29:26,395 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,396 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,401 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-06-18 20:29:26,649 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-18 20:29:26,650 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:26,650 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-18 20:29:26,651 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,651 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,652 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-18 20:29:26,714 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-18 20:29:26,716 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:26,716 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-18 20:29:26,718 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-18 20:29:26,719 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,720 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:26,720 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,726 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-18 20:29:26,723 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-18 20:29:26,720 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-06-18 20:29:26,727 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-18 20:29:26,729 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:26,731 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:26,731 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,731 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-06-18 20:29:26,733 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-18 20:29:26,731 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-18 20:29:26,734 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,734 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,735 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-18 20:29:26,736 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:26,736 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:26,737 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-18 20:29:35,455 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-18 20:29:35,456 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:35,456 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-18 20:29:35,456 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,457 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,459 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:29:35,459 INFO sqlalchemy.engine.base.Engine Thread-67 : ('philip', 1, 1)
2020-06-18 20:29:35,460 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,460 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,471 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-06-18 20:29:35,472 INFO sqlalchemy.engine.base.Engine Thread-67 : ()
2020-06-18 20:29:35,473 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-06-18 20:29:35,474 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-06-18 20:29:35,475 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 101, 'Fortigate', 'Fortigate', 100, 0, 0, 1, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-06-18 20:29:35,479 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:29:35,479 INFO sqlalchemy.engine.base.Engine Thread-67 : ('philip', 1, 1)
2020-06-18 20:29:35,480 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,480 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,482 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-06-18 20:29:35,741 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-18 20:29:35,742 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:35,742 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-18 20:29:35,743 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,743 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,744 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-18 20:29:35,795 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-18 20:29:35,797 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:35,797 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-18 20:29:35,799 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-06-18 20:29:35,800 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:35,800 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-06-18 20:29:35,803 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-18 20:29:35,805 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:35,805 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-06-18 20:29:35,805 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,806 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,806 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,806 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,807 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,807 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,808 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-06-18 20:29:35,811 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-18 20:29:35,812 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-06-18 20:29:35,813 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-18 20:29:35,816 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:29:35,817 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-06-18 20:29:35,819 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:29:35,819 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:29:35,820 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-06-18 20:54:24,031 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-06-18 20:54:24,033 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:54:24,033 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-06-18 20:54:24,036 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,036 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,039 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 20:54:24,039 INFO sqlalchemy.engine.base.Engine Thread-82 : (132,)
2020-06-18 20:54:24,040 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 20:54:24,040 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 20:54:24,040 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 20:54:24,041 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 20:54:24,041 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 20:54:24,069 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 20:54:24,069 INFO sqlalchemy.engine.base.Engine Thread-82 : (datetime.datetime(2020, 6, 17, 20, 54, 24, 41378), datetime.datetime(2020, 7, 1, 20, 54, 24, 41378), datetime.datetime(2020, 6, 17, 20, 54, 24, 41378), datetime.datetime(2020, 7, 1, 20, 54, 24, 41378), datetime.datetime(2020, 6, 17, 20, 54, 24, 41378), datetime.datetime(2020, 7, 1, 20, 54, 24, 41378))
2020-06-18 20:54:24,071 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:54:24,081 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 20:54:24,081 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', datetime.datetime(2020, 6, 17, 20, 54, 24, 41378), datetime.datetime(2020, 7, 1, 20, 54, 24, 41378), datetime.datetime(2020, 6, 17, 20, 54, 24, 41378), datetime.datetime(2020, 7, 1, 20, 54, 24, 41378), datetime.datetime(2020, 6, 17, 20, 54, 24, 41378), datetime.datetime(2020, 7, 1, 20, 54, 24, 41378))
2020-06-18 20:54:24,082 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 20:54:24,116 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:54:24,116 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-06-18 20:54:24,116 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,117 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,119 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 20:54:24,120 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-06-18 20:54:24,120 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,121 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,122 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-06-18 20:54:24,378 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-18 20:54:24,381 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-18 20:54:24,385 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:54:24,386 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-18 20:54:24,382 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:54:24,388 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-18 20:54:24,390 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-18 20:54:24,393 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:54:24,393 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-06-18 20:54:24,391 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:54:24,390 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,393 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,393 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-18 20:54:24,395 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-18 20:54:24,390 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-18 20:54:24,398 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,396 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,399 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,400 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-18 20:54:24,399 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,395 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,401 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,402 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-18 20:54:24,404 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-18 20:54:24,430 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-18 20:54:24,431 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 20:54:24,431 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-18 20:54:24,432 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 20:54:24,432 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 20:54:24,434 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-18 21:05:40,706 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-06-18 21:05:40,708 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:40,708 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-06-18 21:05:40,710 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:40,710 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:40,713 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 21:05:40,713 INFO sqlalchemy.engine.base.Engine Thread-97 : (132,)
2020-06-18 21:05:40,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 21:05:40,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 21:05:40,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 21:05:40,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 21:05:40,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 21:05:40,740 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 21:05:40,740 INFO sqlalchemy.engine.base.Engine Thread-97 : (datetime.datetime(2020, 6, 17, 21, 5, 40, 715202), datetime.datetime(2020, 7, 1, 21, 5, 40, 715202), datetime.datetime(2020, 6, 17, 21, 5, 40, 715202), datetime.datetime(2020, 7, 1, 21, 5, 40, 715202), datetime.datetime(2020, 6, 17, 21, 5, 40, 715202), datetime.datetime(2020, 7, 1, 21, 5, 40, 715202))
2020-06-18 21:05:40,742 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:05:40,751 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 21:05:40,751 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', datetime.datetime(2020, 6, 17, 21, 5, 40, 715202), datetime.datetime(2020, 7, 1, 21, 5, 40, 715202), datetime.datetime(2020, 6, 17, 21, 5, 40, 715202), datetime.datetime(2020, 7, 1, 21, 5, 40, 715202), datetime.datetime(2020, 6, 17, 21, 5, 40, 715202), datetime.datetime(2020, 7, 1, 21, 5, 40, 715202))
2020-06-18 21:05:40,752 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:05:40,786 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:05:40,786 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-06-18 21:05:40,787 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:40,787 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:40,790 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:05:40,790 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-06-18 21:05:40,791 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:40,791 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:40,792 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-06-18 21:05:41,058 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-18 21:05:41,059 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:41,061 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-18 21:05:41,064 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-06-18 21:05:41,065 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-18 21:05:41,067 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:41,068 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:41,071 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:41,070 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-06-18 21:05:41,069 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:41,072 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-18 21:05:41,072 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-18 21:05:41,073 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:41,073 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:41,074 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:41,075 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:41,079 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-18 21:05:41,077 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-06-18 21:05:41,076 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-18 21:05:41,081 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:41,081 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-18 21:05:41,081 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:41,082 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:41,083 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-18 21:05:41,108 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-06-18 21:05:41,109 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:41,109 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-06-18 21:05:41,109 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:41,109 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:41,111 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-06-18 21:05:49,499 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-06-18 21:05:49,501 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:49,501 INFO sqlalchemy.engine.base.Engine Thread-113 : (1, 1)
2020-06-18 21:05:49,501 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,502 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,504 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 21:05:49,504 INFO sqlalchemy.engine.base.Engine Thread-113 : (132,)
2020-06-18 21:05:49,505 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 21:05:49,505 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 21:05:49,505 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 21:05:49,505 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 21:05:49,505 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 21:05:49,529 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 21:05:49,530 INFO sqlalchemy.engine.base.Engine Thread-113 : (datetime.datetime(2020, 6, 17, 21, 5, 49, 505980), datetime.datetime(2020, 7, 1, 21, 5, 49, 505980), datetime.datetime(2020, 6, 17, 21, 5, 49, 505980), datetime.datetime(2020, 7, 1, 21, 5, 49, 505980), datetime.datetime(2020, 6, 17, 21, 5, 49, 505980), datetime.datetime(2020, 7, 1, 21, 5, 49, 505980))
2020-06-18 21:05:49,531 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:05:49,540 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 21:05:49,540 INFO sqlalchemy.engine.base.Engine Thread-113 : ('philip', datetime.datetime(2020, 6, 17, 21, 5, 49, 505980), datetime.datetime(2020, 7, 1, 21, 5, 49, 505980), datetime.datetime(2020, 6, 17, 21, 5, 49, 505980), datetime.datetime(2020, 7, 1, 21, 5, 49, 505980), datetime.datetime(2020, 6, 17, 21, 5, 49, 505980), datetime.datetime(2020, 7, 1, 21, 5, 49, 505980))
2020-06-18 21:05:49,541 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:05:49,546 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:05:49,546 INFO sqlalchemy.engine.base.Engine Thread-113 : ('philip', 1, 1)
2020-06-18 21:05:49,547 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,547 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,550 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:05:49,550 INFO sqlalchemy.engine.base.Engine Thread-113 : ('philip', 1, 1)
2020-06-18 21:05:49,551 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,551 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,551 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-06-18 21:05:49,798 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-18 21:05:49,803 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:49,805 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-18 21:05:49,805 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-18 21:05:49,802 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-18 21:05:49,810 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:49,808 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:49,810 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-18 21:05:49,806 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,813 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,813 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-18 21:05:49,813 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-06-18 21:05:49,817 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:49,817 INFO sqlalchemy.engine.base.Engine Thread-126 : (1, 1)
2020-06-18 21:05:49,816 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,815 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,817 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,817 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,818 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-18 21:05:49,815 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-18 21:05:49,818 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,820 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,821 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-06-18 21:05:49,820 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-18 21:05:49,854 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-06-18 21:05:49,855 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:49,855 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-06-18 21:05:49,856 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:49,856 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:49,857 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-06-18 21:05:58,195 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-06-18 21:05:58,196 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:58,196 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-06-18 21:05:58,197 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,198 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,200 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 21:05:58,200 INFO sqlalchemy.engine.base.Engine Thread-128 : (132,)
2020-06-18 21:05:58,201 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 21:05:58,201 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 21:05:58,201 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 21:05:58,201 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 21:05:58,201 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 21:05:58,230 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 21:05:58,230 INFO sqlalchemy.engine.base.Engine Thread-128 : (datetime.datetime(2020, 5, 21, 21, 5, 58, 201926), datetime.datetime(2020, 6, 19, 21, 5, 58, 201926), datetime.datetime(2020, 5, 21, 21, 5, 58, 201926), datetime.datetime(2020, 6, 19, 21, 5, 58, 201926), datetime.datetime(2020, 5, 21, 21, 5, 58, 201926), datetime.datetime(2020, 6, 19, 21, 5, 58, 201926))
2020-06-18 21:05:58,232 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:05:58,234 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,234 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,234 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,234 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,235 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,235 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,242 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 21:05:58,243 INFO sqlalchemy.engine.base.Engine Thread-128 : ('philip', datetime.datetime(2020, 5, 21, 21, 5, 58, 201926), datetime.datetime(2020, 6, 19, 21, 5, 58, 201926), datetime.datetime(2020, 5, 21, 21, 5, 58, 201926), datetime.datetime(2020, 6, 19, 21, 5, 58, 201926), datetime.datetime(2020, 5, 21, 21, 5, 58, 201926), datetime.datetime(2020, 6, 19, 21, 5, 58, 201926))
2020-06-18 21:05:58,244 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:05:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:05:58,252 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:05:58,253 INFO sqlalchemy.engine.base.Engine Thread-128 : ('philip', 1, 1)
2020-06-18 21:05:58,253 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,254 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,256 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:05:58,257 INFO sqlalchemy.engine.base.Engine Thread-128 : ('philip', 1, 1)
2020-06-18 21:05:58,257 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,258 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,260 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-06-18 21:05:58,498 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-06-18 21:05:58,499 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:58,499 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-06-18 21:05:58,500 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,500 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,501 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-06-18 21:05:58,562 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-06-18 21:05:58,564 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:58,564 INFO sqlalchemy.engine.base.Engine Thread-139 : (1, 1)
2020-06-18 21:05:58,566 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-06-18 21:05:58,567 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:58,567 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,574 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,567 INFO sqlalchemy.engine.base.Engine Thread-140 : (1, 1)
2020-06-18 21:05:58,573 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-06-18 21:05:58,577 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:58,577 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-06-18 21:05:58,576 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,571 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-06-18 21:05:58,579 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:05:58,580 INFO sqlalchemy.engine.base.Engine Thread-141 : (1, 1)
2020-06-18 21:05:58,578 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,575 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-06-18 21:05:58,577 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,581 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-06-18 21:05:58,581 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,582 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:05:58,586 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:05:58,586 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-06-18 21:05:58,587 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-06-18 21:06:06,108 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-06-18 21:06:06,109 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:06,109 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-06-18 21:06:06,110 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:06,110 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:06,111 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-06-18 21:06:37,986 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-06-18 21:06:37,988 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:37,988 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-06-18 21:06:37,989 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:37,989 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:37,992 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 21:06:37,992 INFO sqlalchemy.engine.base.Engine Thread-144 : (132,)
2020-06-18 21:06:37,992 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 21:06:37,992 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 21:06:37,993 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 21:06:37,993 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 21:06:37,993 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 21:06:38,018 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 21:06:38,018 INFO sqlalchemy.engine.base.Engine Thread-144 : (datetime.datetime(2020, 5, 21, 21, 6, 37, 993489), datetime.datetime(2020, 6, 19, 21, 6, 37, 993489), datetime.datetime(2020, 5, 21, 21, 6, 37, 993489), datetime.datetime(2020, 6, 19, 21, 6, 37, 993489), datetime.datetime(2020, 5, 21, 21, 6, 37, 993489), datetime.datetime(2020, 6, 19, 21, 6, 37, 993489))
2020-06-18 21:06:38,020 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:06:38,022 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,022 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,022 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,022 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,022 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,023 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,030 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 21:06:38,030 INFO sqlalchemy.engine.base.Engine Thread-144 : ('philip', datetime.datetime(2020, 5, 21, 21, 6, 37, 993489), datetime.datetime(2020, 6, 19, 21, 6, 37, 993489), datetime.datetime(2020, 5, 21, 21, 6, 37, 993489), datetime.datetime(2020, 6, 19, 21, 6, 37, 993489), datetime.datetime(2020, 5, 21, 21, 6, 37, 993489), datetime.datetime(2020, 6, 19, 21, 6, 37, 993489))
2020-06-18 21:06:38,031 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:06:38,032 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,032 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-06-18 21:06:38,067 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:06:38,067 INFO sqlalchemy.engine.base.Engine Thread-144 : ('philip', 1, 1)
2020-06-18 21:06:38,068 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:38,068 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:38,071 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:06:38,071 INFO sqlalchemy.engine.base.Engine Thread-144 : ('philip', 1, 1)
2020-06-18 21:06:38,072 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:38,072 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:38,074 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-06-18 21:06:38,425 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-06-18 21:06:38,426 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:38,426 INFO sqlalchemy.engine.base.Engine Thread-154 : (1, 1)
2020-06-18 21:06:38,427 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:38,427 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:38,428 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-06-18 21:06:38,715 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-06-18 21:06:38,716 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:38,716 INFO sqlalchemy.engine.base.Engine Thread-155 : (1, 1)
2020-06-18 21:06:38,719 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-06-18 21:06:38,721 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:38,721 INFO sqlalchemy.engine.base.Engine Thread-156 : (1, 1)
2020-06-18 21:06:38,721 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:38,721 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:38,725 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-06-18 21:06:38,725 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:38,730 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:38,729 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-18 21:06:38,732 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:38,732 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-06-18 21:06:38,731 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-06-18 21:06:38,726 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-06-18 21:06:38,730 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:38,733 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-06-18 21:06:38,734 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:38,734 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:38,735 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-18 21:06:38,736 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:38,736 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:38,737 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-06-18 21:06:43,585 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-06-18 21:06:43,586 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:43,586 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-06-18 21:06:43,586 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,587 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,589 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 21:06:43,589 INFO sqlalchemy.engine.base.Engine Thread-160 : (132,)
2020-06-18 21:06:43,589 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 21:06:43,590 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 21:06:43,590 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 21:06:43,590 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 21:06:43,590 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 21:06:43,614 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 21:06:43,614 INFO sqlalchemy.engine.base.Engine Thread-160 : (datetime.datetime(2020, 6, 17, 21, 6, 43, 590555), datetime.datetime(2020, 7, 1, 21, 6, 43, 590555), datetime.datetime(2020, 6, 17, 21, 6, 43, 590555), datetime.datetime(2020, 7, 1, 21, 6, 43, 590555), datetime.datetime(2020, 6, 17, 21, 6, 43, 590555), datetime.datetime(2020, 7, 1, 21, 6, 43, 590555))
2020-06-18 21:06:43,616 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:06:43,623 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 21:06:43,623 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', datetime.datetime(2020, 6, 17, 21, 6, 43, 590555), datetime.datetime(2020, 7, 1, 21, 6, 43, 590555), datetime.datetime(2020, 6, 17, 21, 6, 43, 590555), datetime.datetime(2020, 7, 1, 21, 6, 43, 590555), datetime.datetime(2020, 6, 17, 21, 6, 43, 590555), datetime.datetime(2020, 7, 1, 21, 6, 43, 590555))
2020-06-18 21:06:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:06:43,629 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:06:43,629 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-06-18 21:06:43,629 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,630 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,632 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:06:43,632 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-06-18 21:06:43,633 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,633 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,634 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-06-18 21:06:43,875 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-06-18 21:06:43,876 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:43,877 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-06-18 21:06:43,880 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-06-18 21:06:43,881 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,882 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:43,883 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,886 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-06-18 21:06:43,891 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:43,891 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-06-18 21:06:43,890 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-06-18 21:06:43,886 INFO sqlalchemy.engine.base.Engine Thread-171 : (1, 1)
2020-06-18 21:06:43,893 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,893 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,894 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-06-18 21:06:43,888 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-06-18 21:06:43,895 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,897 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:43,897 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,897 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-06-18 21:06:43,899 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-06-18 21:06:43,899 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,900 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,901 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-06-18 21:06:43,936 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-06-18 21:06:43,938 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:43,938 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-06-18 21:06:43,939 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:43,939 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:43,940 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-06-18 21:06:46,723 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-06-18 21:06:46,724 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:46,724 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-06-18 21:06:46,724 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:46,725 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:46,727 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-18 21:06:46,727 INFO sqlalchemy.engine.base.Engine Thread-175 : (132,)
2020-06-18 21:06:46,728 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-18 21:06:46,728 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-18 21:06:46,728 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-18 21:06:46,728 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-18 21:06:46,728 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-18 21:06:46,752 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-18 21:06:46,752 INFO sqlalchemy.engine.base.Engine Thread-175 : (datetime.datetime(2020, 6, 17, 21, 6, 46, 728876), datetime.datetime(2020, 7, 1, 21, 6, 46, 728876), datetime.datetime(2020, 6, 17, 21, 6, 46, 728876), datetime.datetime(2020, 7, 1, 21, 6, 46, 728876), datetime.datetime(2020, 6, 17, 21, 6, 46, 728876), datetime.datetime(2020, 7, 1, 21, 6, 46, 728876))
2020-06-18 21:06:46,753 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:06:46,761 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-18 21:06:46,761 INFO sqlalchemy.engine.base.Engine Thread-175 : ('philip', datetime.datetime(2020, 6, 17, 21, 6, 46, 728876), datetime.datetime(2020, 7, 1, 21, 6, 46, 728876), datetime.datetime(2020, 6, 17, 21, 6, 46, 728876), datetime.datetime(2020, 7, 1, 21, 6, 46, 728876), datetime.datetime(2020, 6, 17, 21, 6, 46, 728876), datetime.datetime(2020, 7, 1, 21, 6, 46, 728876))
2020-06-18 21:06:46,762 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-18 21:06:46,767 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:06:46,767 INFO sqlalchemy.engine.base.Engine Thread-175 : ('philip', 1, 1)
2020-06-18 21:06:46,768 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:46,768 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:46,771 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-18 21:06:46,771 INFO sqlalchemy.engine.base.Engine Thread-175 : ('philip', 1, 1)
2020-06-18 21:06:46,771 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:46,772 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:46,772 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-06-18 21:06:47,005 INFO sqlalchemy.engine.base.Engine Thread-185 : BEGIN (implicit)
2020-06-18 21:06:47,006 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:47,007 INFO sqlalchemy.engine.base.Engine Thread-185 : (1, 1)
2020-06-18 21:06:47,010 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-06-18 21:06:47,011 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:47,011 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:47,014 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:47,012 INFO sqlalchemy.engine.base.Engine Thread-186 : (1, 1)
2020-06-18 21:06:47,016 INFO sqlalchemy.engine.base.Engine Thread-187 : BEGIN (implicit)
2020-06-18 21:06:47,018 INFO sqlalchemy.engine.base.Engine Thread-187 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:47,021 INFO sqlalchemy.engine.base.Engine Thread-187 : (1, 1)
2020-06-18 21:06:47,021 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-06-18 21:06:47,017 INFO sqlalchemy.engine.base.Engine Thread-185 : ROLLBACK
2020-06-18 21:06:47,022 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:47,024 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-06-18 21:06:47,023 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:47,025 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:47,027 INFO sqlalchemy.engine.base.Engine Thread-187 : ROLLBACK
2020-06-18 21:06:47,025 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:47,027 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:47,025 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:47,029 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:47,028 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-06-18 21:06:47,030 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-06-18 21:06:47,059 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-06-18 21:06:47,060 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-18 21:06:47,060 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-06-18 21:06:47,061 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-18 21:06:47,062 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-18 21:06:47,063 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
