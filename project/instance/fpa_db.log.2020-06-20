2020-06-20 00:12:33,479 INFO sqlalchemy.engine.base.Engine Thread-326 : BEGIN (implicit)
2020-06-20 00:12:33,483 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:12:33,483 INFO sqlalchemy.engine.base.Engine Thread-326 : (1, 1)
2020-06-20 00:12:33,484 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,484 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,487 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:12:33,487 INFO sqlalchemy.engine.base.Engine Thread-326 : ('philip', 1, 1)
2020-06-20 00:12:33,488 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,488 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,490 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:12:33,490 INFO sqlalchemy.engine.base.Engine Thread-326 : (116,)
2020-06-20 00:12:33,491 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:12:33,491 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 00:12:33,491 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 00:12:33,492 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 00:12:33,492 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 00:12:33,508 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:12:33,508 INFO sqlalchemy.engine.base.Engine Thread-326 : ('philip', 1, 1)
2020-06-20 00:12:33,509 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,509 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,511 INFO sqlalchemy.engine.base.Engine Thread-326 : ROLLBACK
2020-06-20 00:12:33,756 INFO sqlalchemy.engine.base.Engine Thread-336 : BEGIN (implicit)
2020-06-20 00:12:33,757 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:12:33,757 INFO sqlalchemy.engine.base.Engine Thread-336 : (1, 1)
2020-06-20 00:12:33,758 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,758 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,759 INFO sqlalchemy.engine.base.Engine Thread-336 : ROLLBACK
2020-06-20 00:12:33,855 INFO sqlalchemy.engine.base.Engine Thread-337 : BEGIN (implicit)
2020-06-20 00:12:33,855 INFO sqlalchemy.engine.base.Engine Thread-338 : BEGIN (implicit)
2020-06-20 00:12:33,858 INFO sqlalchemy.engine.base.Engine Thread-337 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:12:33,858 INFO sqlalchemy.engine.base.Engine Thread-339 : BEGIN (implicit)
2020-06-20 00:12:33,859 INFO sqlalchemy.engine.base.Engine Thread-338 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:12:33,861 INFO sqlalchemy.engine.base.Engine Thread-338 : (1, 1)
2020-06-20 00:12:33,861 INFO sqlalchemy.engine.base.Engine Thread-339 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:12:33,859 INFO sqlalchemy.engine.base.Engine Thread-337 : (1, 1)
2020-06-20 00:12:33,861 INFO sqlalchemy.engine.base.Engine Thread-339 : (1, 1)
2020-06-20 00:12:33,862 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,862 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,863 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,863 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,863 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,866 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,865 INFO sqlalchemy.engine.base.Engine Thread-339 : ROLLBACK
2020-06-20 00:12:33,865 INFO sqlalchemy.engine.base.Engine Thread-337 : ROLLBACK
2020-06-20 00:12:33,862 INFO sqlalchemy.engine.base.Engine Thread-340 : BEGIN (implicit)
2020-06-20 00:12:33,867 INFO sqlalchemy.engine.base.Engine Thread-338 : ROLLBACK
2020-06-20 00:12:33,869 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:12:33,871 INFO sqlalchemy.engine.base.Engine Thread-340 : (1, 1)
2020-06-20 00:12:33,871 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:12:33,872 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:12:33,873 INFO sqlalchemy.engine.base.Engine Thread-340 : ROLLBACK
2020-06-20 00:15:52,770 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 00:15:52,770 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 00:15:52,772 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 00:15:52,772 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 00:15:52,773 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 00:15:52,773 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 00:15:52,773 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 00:15:52,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 00:15:52,774 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 00:15:52,774 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 00:15:52,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 00:15:52,775 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 00:15:52,775 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 00:15:52,775 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 00:15:52,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 00:15:52,776 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 00:15:52,777 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 00:15:52,777 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 00:15:52,777 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 00:15:52,777 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 00:15:52,778 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 00:15:52,778 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 00:15:52,779 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 00:15:52,782 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:15:52,782 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 00:15:52,783 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:52,783 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:52,786 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:15:52,786 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 00:15:52,787 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:52,787 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:52,791 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:15:52,791 INFO sqlalchemy.engine.base.Engine Thread-2 : (116,)
2020-06-20 00:15:52,792 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:15:52,792 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 00:15:52,792 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 00:15:52,792 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 00:15:52,792 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 00:15:52,794 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:15:52,794 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 00:15:52,794 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:15:52,795 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 00:15:52,795 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 00:15:52,795 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 00:15:52,795 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 00:15:52,885 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:15:52,885 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 00:15:52,886 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:52,886 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:52,889 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 00:15:53,274 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 00:15:53,276 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:15:53,276 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 00:15:53,277 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:53,277 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:53,291 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 00:15:53,408 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 00:15:53,412 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:15:53,412 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 00:15:53,413 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:53,413 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 00:15:53,416 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:53,419 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:15:53,422 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 00:15:53,422 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 00:15:53,424 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:53,424 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:53,424 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 00:15:53,427 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:15:53,426 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 00:15:53,427 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 00:15:53,426 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 00:15:53,428 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:15:53,429 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 00:15:53,429 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:53,430 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:53,430 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:15:53,431 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 00:15:53,432 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:15:53,433 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 00:16:10,556 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-20 00:16:10,557 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:10,557 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-20 00:16:10,558 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,558 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,560 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:16:10,560 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 00:16:10,561 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,561 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,563 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:16:10,563 INFO sqlalchemy.engine.base.Engine Thread-18 : (116,)
2020-06-20 00:16:10,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:16:10,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 00:16:10,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 00:16:10,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 00:16:10,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 00:16:10,567 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:16:10,567 INFO sqlalchemy.engine.base.Engine Thread-18 : (92,)
2020-06-20 00:16:10,568 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:16:10,568 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 00:16:10,568 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 00:16:10,568 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 00:16:10,569 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 00:16:10,588 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:16:10,588 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 00:16:10,588 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,589 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,591 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-20 00:16:10,847 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 00:16:10,848 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:10,848 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 00:16:10,849 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,850 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,851 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 00:16:10,929 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 00:16:10,931 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:10,931 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 00:16:10,934 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 00:16:10,935 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,938 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:10,938 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,943 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 00:16:10,941 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 00:16:10,941 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 00:16:10,946 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 00:16:10,947 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:10,950 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 00:16:10,948 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,950 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,949 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:10,951 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,952 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 00:16:10,952 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 00:16:10,952 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,954 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 00:16:10,955 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:10,956 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:10,957 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 00:16:35,577 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-20 00:16:35,578 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:35,578 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-20 00:16:35,579 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:35,580 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:35,582 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:16:35,582 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-20 00:16:35,583 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:35,583 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:35,585 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:16:35,585 INFO sqlalchemy.engine.base.Engine Thread-34 : (116,)
2020-06-20 00:16:35,586 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:16:35,586 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 00:16:35,586 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 00:16:35,586 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 00:16:35,586 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 00:16:35,587 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:16:35,588 INFO sqlalchemy.engine.base.Engine Thread-34 : (92,)
2020-06-20 00:16:35,588 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:16:35,589 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 00:16:35,589 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 00:16:35,589 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 00:16:35,589 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 00:16:35,607 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:16:35,607 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-20 00:16:35,608 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:35,608 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:35,610 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-20 00:16:35,872 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 00:16:35,873 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:35,873 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 00:16:35,874 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:35,874 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:35,875 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 00:16:36,010 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 00:16:36,012 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:36,012 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 00:16:36,015 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 00:16:36,016 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:36,016 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 00:16:36,017 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:36,018 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:36,021 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 00:16:36,022 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:36,023 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 00:16:36,024 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:36,027 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-20 00:16:36,028 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:36,028 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 00:16:36,030 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:16:36,032 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-20 00:16:36,031 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 00:16:36,033 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:36,033 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:36,034 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 00:16:36,035 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:16:36,036 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:16:36,037 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 00:17:48,472 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-20 00:17:48,473 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:17:48,473 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-06-20 00:17:48,474 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:48,474 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:48,477 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:17:48,477 INFO sqlalchemy.engine.base.Engine Thread-50 : ('philip', 1, 1)
2020-06-20 00:17:48,478 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:48,478 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:48,480 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:17:48,480 INFO sqlalchemy.engine.base.Engine Thread-50 : (116,)
2020-06-20 00:17:48,481 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:17:48,481 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 00:17:48,481 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 00:17:48,482 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 00:17:48,482 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 00:17:48,483 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:17:48,483 INFO sqlalchemy.engine.base.Engine Thread-50 : (92,)
2020-06-20 00:17:48,484 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:17:48,484 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 00:17:48,484 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 00:17:48,484 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 00:17:48,484 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 00:17:48,501 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:17:48,502 INFO sqlalchemy.engine.base.Engine Thread-50 : ('philip', 1, 1)
2020-06-20 00:17:48,502 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:48,502 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:48,505 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-20 00:17:48,947 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 00:17:48,948 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:17:48,949 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 00:17:48,949 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:48,949 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:48,951 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 00:17:49,053 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-20 00:17:49,055 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-20 00:17:49,057 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:17:49,064 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 00:17:49,064 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:49,063 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:17:49,065 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-20 00:17:49,060 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-20 00:17:49,064 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:49,066 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:17:49,068 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-20 00:17:49,068 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:49,068 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-20 00:17:49,069 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:49,062 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-20 00:17:49,066 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:49,070 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-20 00:17:49,071 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:17:49,072 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-06-20 00:17:49,072 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:49,074 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-20 00:17:49,075 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:17:49,075 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:17:49,076 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-20 00:18:04,464 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-20 00:18:04,465 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:04,465 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-20 00:18:04,466 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,466 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,468 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:18:04,469 INFO sqlalchemy.engine.base.Engine Thread-67 : ('philip', 1, 1)
2020-06-20 00:18:04,469 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,469 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,473 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:18:04,473 INFO sqlalchemy.engine.base.Engine Thread-67 : (116,)
2020-06-20 00:18:04,473 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:18:04,474 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 00:18:04,474 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 00:18:04,474 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 00:18:04,474 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 00:18:04,475 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:18:04,475 INFO sqlalchemy.engine.base.Engine Thread-67 : (92,)
2020-06-20 00:18:04,476 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:18:04,476 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 00:18:04,477 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 00:18:04,477 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 00:18:04,477 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 00:18:04,478 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 00:18:04,478 INFO sqlalchemy.engine.base.Engine Thread-67 : ('OPERATIONS_EMAILS', 1)
2020-06-20 00:18:04,479 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:18:04,479 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 00:18:04,481 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 00:18:04,481 INFO sqlalchemy.engine.base.Engine Thread-67 : ('137', 1)
2020-06-20 00:18:04,481 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:18:04,483 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment 
FROM datesofinterest
2020-06-20 00:18:04,484 INFO sqlalchemy.engine.base.Engine Thread-67 : ()
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment')
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical) that is very important', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 128, None, 106)
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 128, None, 106)
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 130, 0, 106)
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 129, 0, 94)
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 128, None, 106)
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 130, 0, 106)
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-20 00:18:04,485 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 131, 1, 107)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107)
2020-06-20 00:18:04,486 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (58, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 15, 2, 0), datetime.datetime(2020, 7, 15, 6, 0), 'GBR,IND', 131, 1, 107)
2020-06-20 00:18:04,487 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (59, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 22, 2, 0), datetime.datetime(2020, 7, 22, 6, 0), 'GBR,IND', 131, 1, 107)
2020-06-20 00:18:04,487 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (60, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 29, 2, 0), datetime.datetime(2020, 7, 29, 6, 0), 'GBR,IND', 131, 1, 107)
2020-06-20 00:18:04,492 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings
2020-06-20 00:18:04,492 INFO sqlalchemy.engine.base.Engine Thread-67 : ()
2020-06-20 00:18:04,493 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-20 00:18:04,493 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10))
2020-06-20 00:18:04,494 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45))
2020-06-20 00:18:04,495 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18))
2020-06-20 00:18:04,501 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:18:04,501 INFO sqlalchemy.engine.base.Engine Thread-67 : ('philip', 1, 1)
2020-06-20 00:18:04,502 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,502 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,504 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-06-20 00:18:04,763 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-20 00:18:04,764 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:04,764 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-20 00:18:04,765 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,765 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,767 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-20 00:18:04,849 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-20 00:18:04,850 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:04,850 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-20 00:18:04,853 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-06-20 00:18:04,853 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:04,854 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-06-20 00:18:04,856 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-20 00:18:04,857 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:04,857 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-06-20 00:18:04,858 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,860 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,863 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-06-20 00:18:04,860 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,863 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,860 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,862 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-06-20 00:18:04,864 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,867 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-20 00:18:04,866 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:04,868 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-06-20 00:18:04,865 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-20 00:18:04,870 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:04,870 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:04,871 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-06-20 00:18:18,020 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-06-20 00:18:18,021 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:18,021 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-06-20 00:18:18,022 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,022 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,024 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:18:18,024 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-06-20 00:18:18,025 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,025 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,027 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:18:18,027 INFO sqlalchemy.engine.base.Engine Thread-82 : (116,)
2020-06-20 00:18:18,028 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:18:18,028 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 00:18:18,028 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 00:18:18,028 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 00:18:18,028 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 00:18:18,030 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 00:18:18,030 INFO sqlalchemy.engine.base.Engine Thread-82 : (92,)
2020-06-20 00:18:18,030 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 00:18:18,031 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 00:18:18,031 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 00:18:18,031 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 00:18:18,031 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 00:18:18,036 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 00:18:18,036 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-06-20 00:18:18,036 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,037 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,039 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-06-20 00:18:18,275 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-20 00:18:18,277 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:18,277 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-20 00:18:18,278 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,278 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,279 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-20 00:18:18,346 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-20 00:18:18,347 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:18,348 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-20 00:18:18,349 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,352 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-20 00:18:18,352 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,355 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:18,357 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-20 00:18:18,360 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-20 00:18:18,360 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-06-20 00:18:18,364 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-20 00:18:18,367 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:18,367 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-20 00:18:18,365 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 00:18:18,368 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-20 00:18:18,368 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,369 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,369 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,370 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,371 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-20 00:18:18,372 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-20 00:18:18,372 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 00:18:18,373 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 00:18:18,374 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-20 14:54:30,448 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 14:54:30,448 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:30,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 14:54:30,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 14:54:30,451 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 14:54:30,451 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:30,451 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 14:54:30,451 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 14:54:30,452 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 14:54:30,452 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:30,452 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 14:54:30,452 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 14:54:30,453 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 14:54:30,453 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:30,453 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 14:54:30,453 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 14:54:30,454 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 14:54:30,454 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:30,455 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 14:54:30,455 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:30,455 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 14:54:30,456 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:30,456 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 14:54:30,458 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:30,459 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 14:54:30,460 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,460 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,463 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:54:30,463 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 14:54:30,463 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,464 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,467 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:54:30,467 INFO sqlalchemy.engine.base.Engine Thread-2 : (116,)
2020-06-20 14:54:30,468 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:30,468 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 14:54:30,468 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 14:54:30,469 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 14:54:30,469 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 14:54:30,470 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:54:30,470 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 14:54:30,471 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:30,471 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 14:54:30,472 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 14:54:30,472 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 14:54:30,472 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 14:54:30,549 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:54:30,549 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 14:54:30,550 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,550 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,552 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 14:54:30,768 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-06-20 14:54:30,769 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:30,769 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-06-20 14:54:30,770 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,770 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,785 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-06-20 14:54:30,786 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-20 14:54:30,787 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:30,787 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-20 14:54:30,788 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,788 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,789 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-20 14:54:30,819 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 14:54:30,820 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:30,820 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 14:54:30,820 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,821 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,822 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 14:54:30,891 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 14:54:30,895 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 14:54:30,896 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:30,897 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:30,897 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 14:54:30,897 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 14:54:30,898 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,898 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,899 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:30,900 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 14:54:30,900 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:30,902 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 14:54:37,436 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 14:54:37,437 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:37,437 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 14:54:37,438 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:37,438 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:37,440 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:54:37,440 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-06-20 14:54:37,441 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:37,441 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:37,444 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:54:37,444 INFO sqlalchemy.engine.base.Engine Thread-31 : (116,)
2020-06-20 14:54:37,445 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:37,445 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 14:54:37,445 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 14:54:37,445 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 14:54:37,445 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 14:54:37,446 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:54:37,447 INFO sqlalchemy.engine.base.Engine Thread-31 : (92,)
2020-06-20 14:54:37,447 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:37,447 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 14:54:37,447 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 14:54:37,447 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 14:54:37,448 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 14:54:37,449 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 14:54:37,449 INFO sqlalchemy.engine.base.Engine Thread-31 : ('OPERATIONS_EMAILS', 1)
2020-06-20 14:54:37,449 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:37,450 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 14:54:37,451 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 14:54:37,451 INFO sqlalchemy.engine.base.Engine Thread-31 : ('137', 1)
2020-06-20 14:54:37,452 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:52,694 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 14:54:52,694 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 14:54:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 14:54:52,696 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 14:54:52,696 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 14:54:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 14:54:52,697 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 14:54:52,698 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 14:54:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 14:54:52,698 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 14:54:52,698 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 14:54:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 14:54:52,700 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 14:54:52,700 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,701 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 14:54:52,701 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,702 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 14:54:52,702 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,702 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 14:54:52,705 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:52,705 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 14:54:52,706 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:52,706 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:52,709 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:54:52,709 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 14:54:52,710 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:52,710 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:52,715 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:54:52,715 INFO sqlalchemy.engine.base.Engine Thread-2 : (116,)
2020-06-20 14:54:52,715 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:52,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 14:54:52,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 14:54:52,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 14:54:52,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 14:54:52,718 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:54:52,718 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 14:54:52,718 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:52,718 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 14:54:52,718 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 14:54:52,719 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 14:54:52,719 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 14:54:52,720 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 14:54:52,720 INFO sqlalchemy.engine.base.Engine Thread-2 : ('OPERATIONS_EMAILS', 1)
2020-06-20 14:54:52,721 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:52,721 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 14:54:52,722 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 14:54:52,722 INFO sqlalchemy.engine.base.Engine Thread-2 : ('137', 1)
2020-06-20 14:54:52,723 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:54:52,732 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 14:54:52,732 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59), datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59), datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59))
2020-06-20 14:54:52,732 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 14:54:52,737 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings
2020-06-20 14:54:52,737 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 14:54:52,738 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-20 14:54:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30))
2020-06-20 14:54:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41))
2020-06-20 14:54:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2))
2020-06-20 14:54:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11))
2020-06-20 14:54:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41))
2020-06-20 14:54:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23))
2020-06-20 14:54:52,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20))
2020-06-20 14:54:52,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27))
2020-06-20 14:54:52,741 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 14:54:52,741 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54))
2020-06-20 14:54:52,741 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45))
2020-06-20 14:54:52,741 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18))
2020-06-20 14:54:52,835 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:54:52,835 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 14:54:52,836 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:52,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:52,843 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 14:54:53,200 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 14:54:53,201 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:53,201 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 14:54:53,202 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:53,203 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:53,216 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 14:54:53,276 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 14:54:53,277 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:53,281 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 14:54:53,281 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:53,282 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:53,283 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 14:54:53,288 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 14:54:53,288 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 14:54:53,289 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:53,292 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:53,293 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 14:54:53,293 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 14:54:53,294 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 14:54:53,296 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:53,296 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:53,295 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:54:53,297 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:53,298 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 14:54:53,298 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 14:54:53,298 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:53,300 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 14:54:53,300 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:54:53,301 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:54:53,303 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 14:55:03,538 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-20 14:55:03,540 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:03,540 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-20 14:55:03,541 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,541 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,543 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:55:03,544 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 14:55:03,544 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,544 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,547 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:55:03,547 INFO sqlalchemy.engine.base.Engine Thread-18 : (116,)
2020-06-20 14:55:03,548 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:03,548 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 14:55:03,548 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 14:55:03,548 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 14:55:03,548 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 14:55:03,549 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:55:03,549 INFO sqlalchemy.engine.base.Engine Thread-18 : (92,)
2020-06-20 14:55:03,550 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:03,550 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 14:55:03,550 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 14:55:03,550 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 14:55:03,550 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 14:55:03,552 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 14:55:03,552 INFO sqlalchemy.engine.base.Engine Thread-18 : ('OPERATIONS_EMAILS', 1)
2020-06-20 14:55:03,553 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:03,553 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 14:55:03,554 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 14:55:03,554 INFO sqlalchemy.engine.base.Engine Thread-18 : ('137', 1)
2020-06-20 14:55:03,555 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:03,559 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 14:55:03,559 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59), datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59), datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59))
2020-06-20 14:55:03,560 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 14:55:03,562 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings
2020-06-20 14:55:03,562 INFO sqlalchemy.engine.base.Engine Thread-18 : ()
2020-06-20 14:55:03,563 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-20 14:55:03,563 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30))
2020-06-20 14:55:03,563 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10))
2020-06-20 14:55:03,564 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45))
2020-06-20 14:55:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18))
2020-06-20 14:55:03,571 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:55:03,571 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 14:55:03,572 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,572 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,574 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-20 14:55:03,813 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 14:55:03,814 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:03,814 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 14:55:03,814 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,815 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,816 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 14:55:03,894 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 14:55:03,896 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 14:55:03,898 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:03,902 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 14:55:03,902 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:03,901 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 14:55:03,907 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 14:55:03,907 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,909 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,909 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 14:55:03,909 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:03,912 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 14:55:03,911 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,913 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,911 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 14:55:03,912 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:03,915 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 14:55:03,915 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 14:55:03,916 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,916 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:03,917 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,917 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:03,919 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 14:55:03,920 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 14:55:07,456 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-20 14:55:07,457 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:07,457 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-20 14:55:07,458 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,458 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,460 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:55:07,460 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-20 14:55:07,461 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,461 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,464 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:55:07,464 INFO sqlalchemy.engine.base.Engine Thread-34 : (116,)
2020-06-20 14:55:07,465 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:07,465 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 14:55:07,465 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 14:55:07,465 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 14:55:07,465 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 14:55:07,467 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 14:55:07,467 INFO sqlalchemy.engine.base.Engine Thread-34 : (92,)
2020-06-20 14:55:07,467 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:07,467 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 14:55:07,467 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 14:55:07,468 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 14:55:07,468 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 14:55:07,469 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 14:55:07,469 INFO sqlalchemy.engine.base.Engine Thread-34 : ('OPERATIONS_EMAILS', 1)
2020-06-20 14:55:07,470 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:07,470 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 14:55:07,471 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 14:55:07,471 INFO sqlalchemy.engine.base.Engine Thread-34 : ('137', 1)
2020-06-20 14:55:07,472 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 14:55:07,476 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 14:55:07,476 INFO sqlalchemy.engine.base.Engine Thread-34 : (datetime.datetime(2020, 6, 25, 0, 0), datetime.datetime(2020, 6, 25, 23, 59), datetime.datetime(2020, 6, 25, 0, 0), datetime.datetime(2020, 6, 25, 23, 59), datetime.datetime(2020, 6, 25, 0, 0), datetime.datetime(2020, 6, 25, 23, 59))
2020-06-20 14:55:07,477 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 14:55:07,478 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings
2020-06-20 14:55:07,478 INFO sqlalchemy.engine.base.Engine Thread-34 : ()
2020-06-20 14:55:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-20 14:55:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30))
2020-06-20 14:55:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41))
2020-06-20 14:55:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2))
2020-06-20 14:55:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11))
2020-06-20 14:55:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41))
2020-06-20 14:55:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27))
2020-06-20 14:55:07,481 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 14:55:07,482 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54))
2020-06-20 14:55:07,482 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45))
2020-06-20 14:55:07,482 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18))
2020-06-20 14:55:07,488 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 14:55:07,488 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-20 14:55:07,489 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,489 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,491 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-20 14:55:07,769 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 14:55:07,770 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:07,771 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 14:55:07,771 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,772 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,773 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 14:55:07,812 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 14:55:07,816 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-20 14:55:07,818 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 14:55:07,819 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:07,822 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 14:55:07,823 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:07,824 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:07,825 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 14:55:07,826 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 14:55:07,826 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-20 14:55:07,826 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 14:55:07,828 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 14:55:07,829 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,830 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,830 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,833 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,832 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 14:55:07,832 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,834 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 14:55:07,831 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 14:55:07,834 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,835 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 14:55:07,838 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 14:55:07,839 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 15:29:14,062 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 15:29:14,063 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,064 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 15:29:14,065 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 15:29:14,065 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 15:29:14,066 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 15:29:14,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 15:29:14,067 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 15:29:14,067 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 15:29:14,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 15:29:14,068 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 15:29:14,068 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,069 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 15:29:14,069 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 15:29:14,070 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 15:29:14,070 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,071 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 15:29:14,071 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,071 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 15:29:14,071 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,072 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 15:29:14,075 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:29:14,075 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 15:29:14,076 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,076 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,080 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:29:14,080 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 15:29:14,081 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,092 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,098 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:29:14,098 INFO sqlalchemy.engine.base.Engine Thread-2 : (116,)
2020-06-20 15:29:14,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:29:14,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:29:14,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:29:14,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:29:14,100 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:29:14,101 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:29:14,101 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 15:29:14,102 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:29:14,102 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:29:14,102 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:29:14,102 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:29:14,102 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:29:14,104 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:29:14,105 INFO sqlalchemy.engine.base.Engine Thread-2 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:29:14,105 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:29:14,105 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:29:14,107 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:29:14,107 INFO sqlalchemy.engine.base.Engine Thread-2 : ('137', 1)
2020-06-20 15:29:14,108 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:29:14,119 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:29:14,120 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 25, 0, 0), datetime.datetime(2020, 6, 25, 23, 59))
2020-06-20 15:29:14,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:29:14,125 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings
2020-06-20 15:29:14,125 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:29:14,126 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-20 15:29:14,126 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Bob', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Bob', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Bob', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'Bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'Bob', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3))
2020-06-20 15:29:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'Bob', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'Bob', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'Bob', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'Bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (32, 20, 'Test Booking BaU Zone 2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test Booking BaU Zone 2', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 17, 31, 27), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (33, 20, 'Test Booking Zone 2 #2', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '100000', 'Test Booking BaU Zone 2', 'Test BaU #2', 'Bob', 1, 99, 0, datetime.datetime(2020, 6, 14, 19, 30, 18), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 19, 1, 54))
2020-06-20 15:29:14,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (34, 20, 'Test Booking 3', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 4', 'testing the BaU process', 'philip', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 6, 45))
2020-06-20 15:29:14,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (35, 20, 'Test Booking 4', datetime.datetime(2020, 6, 16, 2, 0), datetime.datetime(2020, 6, 16, 4, 0), '123456', 'troopaq', '9999999', 'Testing project 5', 'testing', 'philip', 1, 98, 0, None, None, 'Booking pending, too many bookings per day/complex), BaU bookings require manual approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 21, 10, 18))
2020-06-20 15:29:14,222 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:29:14,222 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 15:29:14,223 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,223 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,226 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 15:29:14,609 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 15:29:14,610 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:29:14,611 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 15:29:14,613 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,617 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,632 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 15:29:14,633 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 15:29:14,637 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:29:14,636 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 15:29:14,633 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 15:29:14,643 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:29:14,641 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:29:14,643 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 15:29:14,639 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 15:29:14,643 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 15:29:14,644 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,645 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 15:29:14,647 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:29:14,646 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,648 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,647 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 15:29:14,645 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,646 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,649 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 15:29:14,650 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,651 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 15:29:14,651 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:29:14,653 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 15:29:14,654 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:29:14,656 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 15:32:27,254 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 15:32:27,254 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:32:27,256 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 15:32:27,256 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 15:32:27,257 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 15:32:27,257 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:32:27,257 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 15:32:27,258 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 15:32:27,258 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 15:32:27,258 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:32:27,258 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 15:32:27,259 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 15:32:27,259 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 15:32:27,259 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:32:27,260 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 15:32:27,260 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 15:32:27,261 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 15:32:27,261 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:32:27,261 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 15:32:27,261 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:32:27,262 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 15:32:27,262 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:32:27,263 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 15:32:27,265 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:27,265 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 15:32:27,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,269 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:27,269 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 15:32:27,270 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,270 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,275 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:27,275 INFO sqlalchemy.engine.base.Engine Thread-2 : (116,)
2020-06-20 15:32:27,276 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:27,277 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:32:27,277 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:32:27,277 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:32:27,277 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:32:27,278 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:27,278 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 15:32:27,279 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:27,279 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:32:27,279 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:32:27,279 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:32:27,279 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:32:27,281 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:32:27,281 INFO sqlalchemy.engine.base.Engine Thread-2 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:32:27,282 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:27,282 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:32:27,283 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:32:27,283 INFO sqlalchemy.engine.base.Engine Thread-2 : ('137', 1)
2020-06-20 15:32:27,284 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:27,292 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:32:27,292 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 25, 0, 0), datetime.datetime(2020, 6, 25, 23, 59))
2020-06-20 15:32:27,292 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:32:27,297 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 15:32:27,297 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 25, 0, 0), datetime.datetime(2020, 6, 25, 23, 59))
2020-06-20 15:32:27,298 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket')
2020-06-20 15:32:27,388 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:27,388 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 15:32:27,389 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,389 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,392 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 15:32:27,759 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 15:32:27,760 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:27,760 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 15:32:27,761 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,761 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,774 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 15:32:27,845 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 15:32:27,849 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:27,849 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 15:32:27,851 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,851 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,851 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 15:32:27,855 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:27,855 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 15:32:27,856 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,857 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,854 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 15:32:27,857 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 15:32:27,861 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:27,861 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 15:32:27,863 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 15:32:27,864 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,864 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,866 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 15:32:27,866 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 15:32:27,867 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:27,868 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 15:32:27,869 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:27,869 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:27,870 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 15:32:40,585 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-20 15:32:40,586 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:40,586 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-20 15:32:40,587 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,587 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,589 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:40,589 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 15:32:40,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,593 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:40,593 INFO sqlalchemy.engine.base.Engine Thread-17 : (116,)
2020-06-20 15:32:40,594 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:40,594 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:32:40,594 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:32:40,594 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:32:40,594 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:32:40,596 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:40,596 INFO sqlalchemy.engine.base.Engine Thread-17 : (92,)
2020-06-20 15:32:40,596 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:40,597 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:32:40,597 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:32:40,597 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:32:40,597 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:32:40,599 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:32:40,599 INFO sqlalchemy.engine.base.Engine Thread-17 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:32:40,599 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:40,600 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:32:40,601 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:32:40,601 INFO sqlalchemy.engine.base.Engine Thread-17 : ('137', 1)
2020-06-20 15:32:40,601 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:40,604 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:32:40,604 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59))
2020-06-20 15:32:40,605 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:32:40,608 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 15:32:40,608 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59))
2020-06-20 15:32:40,609 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket')
2020-06-20 15:32:40,613 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:40,613 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 15:32:40,614 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,614 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,616 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-20 15:32:40,863 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-20 15:32:40,864 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:40,864 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-20 15:32:40,867 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 15:32:40,867 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,868 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:40,869 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,872 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 15:32:40,875 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 15:32:40,875 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 15:32:40,876 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-20 15:32:40,877 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:40,878 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:40,879 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,880 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,879 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 15:32:40,879 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 15:32:40,881 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,881 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,882 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 15:32:40,883 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 15:32:40,885 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,885 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,887 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 15:32:40,931 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 15:32:40,932 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:40,932 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 15:32:40,933 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:40,933 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:40,934 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 15:32:42,939 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 15:32:42,944 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 15:32:42,944 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-06-20 15:32:42,946 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 15:32:42,946 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:32:42,946 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 15:32:42,948 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:42,948 INFO sqlalchemy.engine.base.Engine Thread-32 : (100,)
2020-06-20 15:32:42,948 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:42,948 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 15:32:42,949 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 15:32:42,949 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 15:32:42,949 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 15:32:42,949 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 15:32:42,950 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:42,951 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 15:32:42,951 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:42,951 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:42,960 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:42,960 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-20 15:32:42,961 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:42,961 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:42,963 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 15:32:43,221 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-20 15:32:43,223 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-20 15:32:43,224 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:43,225 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:43,226 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-20 15:32:43,226 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-06-20 15:32:43,228 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 15:32:43,229 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:43,231 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 15:32:43,232 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:43,233 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:43,233 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:43,234 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:43,235 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:43,235 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 15:32:43,235 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 15:32:43,236 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-20 15:32:43,237 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-20 15:32:43,238 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:43,239 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:43,240 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 15:32:43,241 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:43,242 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:43,243 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 15:32:43,269 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 15:32:43,270 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:43,270 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 15:32:43,270 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:43,271 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:43,272 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 15:32:43,948 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 15:32:43,950 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 15:32:43,950 INFO sqlalchemy.engine.base.Engine Thread-47 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:32:43,953 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 15:32:43,953 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 15:32:43,953 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 15:32:43,953 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 15:32:43,953 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 15:32:43,954 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:32:43,954 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:32:43,954 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:32:43,954 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:32:43,954 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:32:43,959 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 15:32:43,959 INFO sqlalchemy.engine.base.Engine Thread-47 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:32:43,960 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:32:43,960 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 15:32:43,965 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 15:32:43,965 INFO sqlalchemy.engine.base.Engine Thread-47 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:32:43,966 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:32:43,966 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 15:32:43,967 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 15:32:43,994 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-20 15:32:43,996 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 15:32:43,996 INFO sqlalchemy.engine.base.Engine Thread-48 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:32:43,998 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 15:32:43,998 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 15:32:43,998 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 15:32:43,998 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 15:32:43,998 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 15:32:43,999 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:32:43,999 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:32:43,999 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:32:43,999 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:32:43,999 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:32:44,003 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 15:32:44,003 INFO sqlalchemy.engine.base.Engine Thread-48 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:32:44,004 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:32:44,004 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 15:32:44,009 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 15:32:44,009 INFO sqlalchemy.engine.base.Engine Thread-48 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:32:44,010 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:32:44,010 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 15:32:44,011 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 15:32:44,045 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-20 15:32:44,047 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-20 15:32:44,048 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,054 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-20 15:32:44,050 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-06-20 15:32:44,054 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,058 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-06-20 15:32:44,055 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,055 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,059 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,058 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,074 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,053 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-06-20 15:32:44,059 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-06-20 15:32:44,074 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,074 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-06-20 15:32:44,058 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-06-20 15:32:44,084 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,088 INFO sqlalchemy.engine.base.Engine Thread-50 : (15, 1)
2020-06-20 15:32:44,085 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,088 INFO sqlalchemy.engine.base.Engine Thread-52 : (1, 1)
2020-06-20 15:32:44,088 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,086 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,090 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-06-20 15:32:44,089 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,090 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,089 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-06-20 15:32:44,090 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,089 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,105 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,091 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,103 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,103 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,116 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,086 INFO sqlalchemy.engine.base.Engine Thread-49 : (19, 1)
2020-06-20 15:32:44,115 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,115 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,138 INFO sqlalchemy.engine.base.Engine Thread-52 : (21, 1)
2020-06-20 15:32:44,116 INFO sqlalchemy.engine.base.Engine Thread-51 : (20, 1)
2020-06-20 15:32:44,133 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,137 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,104 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:32:44,139 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:32:44,140 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,140 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,159 INFO sqlalchemy.engine.base.Engine Thread-54 : (23, 1)
2020-06-20 15:32:44,140 INFO sqlalchemy.engine.base.Engine Thread-53 : (22, 1)
2020-06-20 15:32:44,143 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:32:44,141 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,185 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-20 15:32:44,186 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-06-20 15:32:44,186 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,187 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:32:44,188 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,189 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-20 15:32:44,191 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 15:32:44,193 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 15:32:44,196 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-06-20 15:32:44,195 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-06-20 15:32:44,194 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-06-20 15:32:44,202 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-06-20 15:32:44,203 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,203 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-06-20 15:32:44,204 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,204 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,216 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,219 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-06-20 15:32:44,219 INFO sqlalchemy.engine.base.Engine Thread-55 : (27, 1)
2020-06-20 15:32:44,222 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-20 15:32:44,226 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,226 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-20 15:32:44,223 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,232 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-06-20 15:32:44,227 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,232 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,232 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 15:32:44,225 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-20 15:32:44,228 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,239 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,246 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 15:32:44,240 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:44,247 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-20 15:32:44,245 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,246 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:32:44,249 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-06-20 15:32:44,247 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,249 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,248 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:44,245 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,247 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,260 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:44,260 INFO sqlalchemy.engine.base.Engine Thread-57 : (57, 1)
2020-06-20 15:32:44,281 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,281 INFO sqlalchemy.engine.base.Engine Thread-56 : (56, 1)
2020-06-20 15:32:44,293 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,299 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:32:44,300 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-20 15:32:44,301 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:32:44,302 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:32:44,303 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-06-20 15:32:44,307 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,307 INFO sqlalchemy.engine.base.Engine Thread-59 : (31, 1)
2020-06-20 15:32:44,314 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:32:44,316 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 15:32:44,318 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:32:44,318 INFO sqlalchemy.engine.base.Engine Thread-58 : (30, 1)
2020-06-20 15:32:44,319 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 15:32:44,320 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:32:44,325 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:32:44,326 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-20 15:32:49,951 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 15:32:49,952 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:49,952 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 15:32:49,953 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:49,953 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:49,955 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:49,956 INFO sqlalchemy.engine.base.Engine Thread-60 : ('philip', 1, 1)
2020-06-20 15:32:49,956 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:49,956 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:49,958 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:49,959 INFO sqlalchemy.engine.base.Engine Thread-60 : (116,)
2020-06-20 15:32:49,959 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:49,959 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:32:49,959 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:32:49,959 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:32:49,960 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:32:49,961 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:49,961 INFO sqlalchemy.engine.base.Engine Thread-60 : (92,)
2020-06-20 15:32:49,961 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:49,962 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:32:49,962 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:32:49,962 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:32:49,962 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:32:49,966 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:49,966 INFO sqlalchemy.engine.base.Engine Thread-60 : ('philip', 1, 1)
2020-06-20 15:32:49,967 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:49,967 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:49,969 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 15:32:50,231 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-06-20 15:32:50,233 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:50,233 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-06-20 15:32:50,233 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:50,234 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:50,235 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-06-20 15:32:50,299 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-06-20 15:32:50,300 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:50,300 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-06-20 15:32:50,301 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:50,301 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:50,302 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-06-20 15:32:50,305 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-20 15:32:50,307 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:50,307 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-20 15:32:50,309 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:50,311 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-20 15:32:50,311 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:50,313 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:50,315 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-20 15:32:50,315 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-20 15:32:50,316 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-20 15:32:50,317 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:50,318 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:50,318 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:50,320 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-20 15:32:50,320 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-20 15:32:50,321 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:50,322 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:50,322 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-20 15:32:54,157 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-20 15:32:54,158 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:54,158 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-20 15:32:54,159 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,159 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,161 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:54,161 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-06-20 15:32:54,162 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,162 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,164 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:54,165 INFO sqlalchemy.engine.base.Engine Thread-75 : (116,)
2020-06-20 15:32:54,165 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:54,165 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:32:54,165 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:32:54,165 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:32:54,166 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:32:54,167 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:32:54,167 INFO sqlalchemy.engine.base.Engine Thread-75 : (92,)
2020-06-20 15:32:54,167 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:54,167 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:32:54,168 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:32:54,168 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:32:54,168 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:32:54,169 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:32:54,169 INFO sqlalchemy.engine.base.Engine Thread-75 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:32:54,170 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:54,170 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:32:54,171 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:32:54,171 INFO sqlalchemy.engine.base.Engine Thread-75 : ('137', 1)
2020-06-20 15:32:54,172 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:32:54,175 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:32:54,175 INFO sqlalchemy.engine.base.Engine Thread-75 : (datetime.datetime(2020, 6, 17, 0, 0), datetime.datetime(2020, 6, 17, 23, 59))
2020-06-20 15:32:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:32:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (15, 'Summer Change Freeze', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45))
2020-06-20 15:32:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0))
2020-06-20 15:32:54,180 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 15:32:54,180 INFO sqlalchemy.engine.base.Engine Thread-75 : (datetime.datetime(2020, 6, 17, 0, 0), datetime.datetime(2020, 6, 17, 23, 59))
2020-06-20 15:32:54,180 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket')
2020-06-20 15:32:54,184 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:32:54,184 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-06-20 15:32:54,185 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,185 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,187 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-20 15:32:54,426 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-06-20 15:32:54,427 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:54,427 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-06-20 15:32:54,428 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,428 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,429 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-06-20 15:32:54,496 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-06-20 15:32:54,498 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-06-20 15:32:54,499 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:54,505 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-06-20 15:32:54,502 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-20 15:32:54,505 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:54,507 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-20 15:32:54,506 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:54,507 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,508 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,504 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-20 15:32:54,509 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-06-20 15:32:54,507 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-20 15:32:54,509 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,510 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:32:54,511 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,511 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,512 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-20 15:32:54,513 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-06-20 15:32:54,513 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,515 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-20 15:32:54,517 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:32:54,517 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:32:54,518 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-20 15:33:01,419 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-20 15:33:01,420 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:33:01,420 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-20 15:33:01,421 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:33:01,422 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:33:01,423 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-20 15:34:09,483 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 15:34:09,484 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:34:09,486 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 15:34:09,486 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 15:34:09,487 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 15:34:09,487 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:34:09,488 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 15:34:09,488 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 15:34:09,488 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 15:34:09,489 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:34:09,489 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 15:34:09,489 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 15:34:09,489 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 15:34:09,489 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:34:09,490 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 15:34:09,490 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 15:34:09,491 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 15:34:09,491 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:34:09,492 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 15:34:09,492 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:34:09,493 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 15:34:09,493 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 15:34:09,494 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 15:34:09,496 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:09,496 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 15:34:09,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,500 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:09,500 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 15:34:09,501 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,501 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,505 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:09,506 INFO sqlalchemy.engine.base.Engine Thread-2 : (116,)
2020-06-20 15:34:09,506 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:09,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:34:09,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:34:09,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:34:09,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:34:09,508 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:09,508 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 15:34:09,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:09,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:34:09,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:34:09,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:34:09,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:34:09,511 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:34:09,511 INFO sqlalchemy.engine.base.Engine Thread-2 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:34:09,511 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:09,512 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:34:09,513 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:34:09,513 INFO sqlalchemy.engine.base.Engine Thread-2 : ('137', 1)
2020-06-20 15:34:09,513 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:09,521 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:34:09,521 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 17, 0, 0), datetime.datetime(2020, 6, 17, 23, 59))
2020-06-20 15:34:09,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:34:09,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45))
2020-06-20 15:34:09,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0))
2020-06-20 15:34:09,527 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 15:34:09,527 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 17, 0, 0), datetime.datetime(2020, 6, 17, 23, 59))
2020-06-20 15:34:09,527 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket')
2020-06-20 15:34:09,610 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:09,610 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 15:34:09,610 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,611 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,613 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 15:34:09,872 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 15:34:09,873 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:09,873 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 15:34:09,874 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,874 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,885 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 15:34:09,952 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 15:34:09,953 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:09,953 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 15:34:09,954 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,954 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,955 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 15:34:09,963 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 15:34:09,964 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:09,964 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 15:34:09,966 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,966 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,967 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 15:34:09,972 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 15:34:09,973 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:09,973 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 15:34:09,974 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 15:34:09,975 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:09,976 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 15:34:09,976 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,976 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,977 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 15:34:09,978 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:09,979 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:09,980 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 15:34:22,731 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-20 15:34:22,732 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:22,732 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-20 15:34:22,733 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:22,733 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:22,736 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:22,736 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 15:34:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:22,740 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:22,740 INFO sqlalchemy.engine.base.Engine Thread-17 : (116,)
2020-06-20 15:34:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:34:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:34:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:34:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:34:22,743 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:22,743 INFO sqlalchemy.engine.base.Engine Thread-17 : (92,)
2020-06-20 15:34:22,744 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:22,744 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:34:22,744 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:34:22,744 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:34:22,744 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:34:22,746 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:34:22,746 INFO sqlalchemy.engine.base.Engine Thread-17 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:34:22,747 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:22,747 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:34:22,749 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:34:22,749 INFO sqlalchemy.engine.base.Engine Thread-17 : ('137', 1)
2020-06-20 15:34:22,749 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:22,753 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:34:22,753 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 6, 17, 0, 0), datetime.datetime(2020, 6, 17, 23, 59))
2020-06-20 15:34:22,754 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:34:22,754 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (15, 'Summer Change Freeze', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45))
2020-06-20 15:34:22,754 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0))
2020-06-20 15:34:22,758 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 15:34:22,758 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 6, 17, 0, 0), datetime.datetime(2020, 6, 17, 23, 59))
2020-06-20 15:34:22,759 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket')
2020-06-20 15:34:22,764 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:22,764 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 15:34:22,764 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:22,765 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:22,767 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-20 15:34:23,015 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-20 15:34:23,016 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:23,016 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-20 15:34:23,017 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:23,017 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:23,018 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-20 15:34:23,107 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 15:34:23,110 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 15:34:23,111 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:23,115 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:23,115 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 15:34:23,115 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 15:34:23,116 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 15:34:23,117 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:23,121 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:23,121 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:23,123 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:23,122 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 15:34:23,122 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 15:34:23,122 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:23,124 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:23,125 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 15:34:23,126 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 15:34:23,126 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:23,127 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:23,128 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 15:34:23,127 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 15:34:23,130 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:23,131 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:23,132 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 15:34:26,043 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 15:34:26,044 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:26,045 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 15:34:26,045 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,046 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,048 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:26,048 INFO sqlalchemy.engine.base.Engine Thread-32 : (132,)
2020-06-20 15:34:26,049 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:26,049 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 15:34:26,049 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 15:34:26,049 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 15:34:26,049 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 15:34:26,080 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-20 15:34:26,081 INFO sqlalchemy.engine.base.Engine Thread-32 : (datetime.datetime(2020, 6, 19, 15, 34, 26, 49958), datetime.datetime(2020, 7, 3, 15, 34, 26, 49958), datetime.datetime(2020, 6, 19, 15, 34, 26, 49958), datetime.datetime(2020, 7, 3, 15, 34, 26, 49958), datetime.datetime(2020, 6, 19, 15, 34, 26, 49958), datetime.datetime(2020, 7, 3, 15, 34, 26, 49958))
2020-06-20 15:34:26,082 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:34:26,093 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-20 15:34:26,093 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', datetime.datetime(2020, 6, 19, 15, 34, 26, 49958), datetime.datetime(2020, 7, 3, 15, 34, 26, 49958), datetime.datetime(2020, 6, 19, 15, 34, 26, 49958), datetime.datetime(2020, 7, 3, 15, 34, 26, 49958), datetime.datetime(2020, 6, 19, 15, 34, 26, 49958), datetime.datetime(2020, 7, 3, 15, 34, 26, 49958))
2020-06-20 15:34:26,094 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:34:26,131 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:26,131 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-20 15:34:26,132 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,132 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,135 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:26,135 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-20 15:34:26,136 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,136 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,137 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 15:34:26,384 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-20 15:34:26,386 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:26,386 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-06-20 15:34:26,386 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,387 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,388 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-20 15:34:26,455 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-20 15:34:26,457 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:26,457 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-20 15:34:26,460 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 15:34:26,460 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,465 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,465 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 15:34:26,461 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:26,471 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 15:34:26,467 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-20 15:34:26,471 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:26,469 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 15:34:26,472 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 15:34:26,472 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,475 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,474 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,477 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,476 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 15:34:26,473 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:26,478 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 15:34:26,478 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 15:34:26,480 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:26,481 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:26,482 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 15:34:27,598 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 15:34:27,603 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 15:34:27,603 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-06-20 15:34:27,604 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 15:34:27,605 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:34:27,605 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 15:34:27,606 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:27,607 INFO sqlalchemy.engine.base.Engine Thread-47 : (100,)
2020-06-20 15:34:27,607 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:27,607 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 15:34:27,608 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 15:34:27,608 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 15:34:27,608 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 15:34:27,608 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 15:34:27,610 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:27,610 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 15:34:27,610 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:27,611 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:27,621 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:27,621 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-06-20 15:34:27,622 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:27,622 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:27,624 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 15:34:27,886 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-20 15:34:27,887 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:27,888 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-20 15:34:27,888 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:27,888 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:27,890 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-20 15:34:27,961 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-20 15:34:27,963 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:27,963 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-20 15:34:27,965 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 15:34:27,965 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:27,970 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:27,970 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 15:34:27,967 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:27,976 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 15:34:27,972 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-20 15:34:27,975 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-20 15:34:27,976 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:27,977 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:27,978 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:27,979 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:27,979 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 15:34:27,978 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 15:34:27,980 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 15:34:27,981 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:27,981 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:27,982 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:27,983 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:27,984 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 15:34:27,985 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-20 15:34:28,635 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-20 15:34:28,638 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 15:34:28,638 INFO sqlalchemy.engine.base.Engine Thread-62 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:34:28,640 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 15:34:28,640 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:34:28,641 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:34:28,647 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 15:34:28,647 INFO sqlalchemy.engine.base.Engine Thread-62 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:34:28,648 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:34:28,648 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 15:34:28,653 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 15:34:28,653 INFO sqlalchemy.engine.base.Engine Thread-62 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:34:28,654 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:34:28,655 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 15:34:28,656 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-20 15:34:28,686 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-20 15:34:28,688 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 15:34:28,688 INFO sqlalchemy.engine.base.Engine Thread-63 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:34:28,690 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:34:28,691 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:34:28,696 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 15:34:28,696 INFO sqlalchemy.engine.base.Engine Thread-63 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:34:28,697 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:34:28,697 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 15:34:28,704 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 15:34:28,704 INFO sqlalchemy.engine.base.Engine Thread-63 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:34:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:34:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 15:34:28,707 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-20 15:34:28,734 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-20 15:34:28,735 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,735 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-06-20 15:34:28,736 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,739 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-20 15:34:28,739 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,741 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-20 15:34:28,744 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-20 15:34:28,745 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,756 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,761 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,766 INFO sqlalchemy.engine.base.Engine Thread-64 : (15, 1)
2020-06-20 15:34:28,763 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-06-20 15:34:28,763 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-20 15:34:28,767 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,767 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,762 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,780 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-20 15:34:28,763 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-06-20 15:34:28,773 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,779 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-06-20 15:34:28,780 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,781 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,784 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-06-20 15:34:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,783 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,796 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-06-20 15:34:28,773 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,784 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,785 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,808 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,784 INFO sqlalchemy.engine.base.Engine Thread-66 : (19, 1)
2020-06-20 15:34:28,797 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:34:28,803 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,796 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,809 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,829 INFO sqlalchemy.engine.base.Engine Thread-65 : (20, 1)
2020-06-20 15:34:28,826 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,829 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,829 INFO sqlalchemy.engine.base.Engine Thread-67 : (21, 1)
2020-06-20 15:34:28,829 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,862 INFO sqlalchemy.engine.base.Engine Thread-68 : (22, 1)
2020-06-20 15:34:28,848 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,863 INFO sqlalchemy.engine.base.Engine Thread-69 : (23, 1)
2020-06-20 15:34:28,863 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,865 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 15:34:28,862 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-20 15:34:28,858 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:34:28,869 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-20 15:34:28,864 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,871 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:34:28,871 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-06-20 15:34:28,856 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,873 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:34:28,866 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-06-20 15:34:28,866 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,881 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 15:34:28,882 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-06-20 15:34:28,874 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-20 15:34:28,886 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-06-20 15:34:28,888 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,888 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-06-20 15:34:28,891 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-06-20 15:34:28,891 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,896 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,896 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,910 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-06-20 15:34:28,908 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,910 INFO sqlalchemy.engine.base.Engine Thread-70 : (27, 1)
2020-06-20 15:34:28,895 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-20 15:34:28,914 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,911 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,913 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-20 15:34:28,914 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-20 15:34:28,911 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,923 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,919 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,928 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-20 15:34:28,915 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:34:28,922 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-20 15:34:28,939 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:28,940 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-20 15:34:28,935 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,940 INFO sqlalchemy.engine.base.Engine Thread-71 : (56, 1)
2020-06-20 15:34:28,940 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-06-20 15:34:28,934 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,942 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,942 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,942 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:28,934 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:28,975 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,969 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,974 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:34:28,971 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:28,986 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:34:28,987 INFO sqlalchemy.engine.base.Engine Thread-73 : (31, 1)
2020-06-20 15:34:28,990 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-06-20 15:34:29,002 INFO sqlalchemy.engine.base.Engine Thread-72 : (57, 1)
2020-06-20 15:34:29,016 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 15:34:29,018 INFO sqlalchemy.engine.base.Engine Thread-74 : (30, 1)
2020-06-20 15:34:29,017 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:34:29,021 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:34:29,022 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:34:29,023 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-20 15:34:29,023 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:34:29,027 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:34:29,027 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-20 15:34:29,025 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:34:29,029 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-20 15:34:33,191 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-20 15:34:33,193 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:33,193 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-20 15:34:33,194 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,194 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,196 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:33,196 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-06-20 15:34:33,197 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,197 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,200 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:33,200 INFO sqlalchemy.engine.base.Engine Thread-75 : (116,)
2020-06-20 15:34:33,200 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:33,201 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:34:33,201 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:34:33,201 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:34:33,201 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:34:33,202 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:33,202 INFO sqlalchemy.engine.base.Engine Thread-75 : (92,)
2020-06-20 15:34:33,203 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:33,203 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:34:33,203 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:34:33,203 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:34:33,203 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:34:33,208 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:33,208 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-06-20 15:34:33,209 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,209 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,211 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-20 15:34:33,472 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-06-20 15:34:33,474 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:33,474 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-06-20 15:34:33,475 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,478 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-06-20 15:34:33,481 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-06-20 15:34:33,487 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:33,487 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-20 15:34:33,486 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:33,482 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,489 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-06-20 15:34:33,485 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-20 15:34:33,488 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-06-20 15:34:33,488 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,491 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:33,492 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,492 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,493 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,494 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-06-20 15:34:33,492 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-20 15:34:33,495 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-06-20 15:34:33,497 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,497 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,498 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-20 15:34:33,544 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-20 15:34:33,545 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:33,546 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-20 15:34:33,546 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:33,546 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:33,547 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-20 15:34:36,972 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-20 15:34:36,973 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:36,973 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-20 15:34:36,974 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:36,974 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:36,977 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:36,977 INFO sqlalchemy.engine.base.Engine Thread-90 : ('philip', 1, 1)
2020-06-20 15:34:36,977 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:36,978 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:36,980 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:36,980 INFO sqlalchemy.engine.base.Engine Thread-90 : (116,)
2020-06-20 15:34:36,981 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:36,981 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:34:36,981 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:34:36,981 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:34:36,981 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:34:36,982 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:34:36,983 INFO sqlalchemy.engine.base.Engine Thread-90 : (92,)
2020-06-20 15:34:36,983 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:36,983 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:34:36,983 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:34:36,983 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:34:36,984 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:34:36,985 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:34:36,985 INFO sqlalchemy.engine.base.Engine Thread-90 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:34:36,986 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:36,986 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:34:36,987 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:34:36,987 INFO sqlalchemy.engine.base.Engine Thread-90 : ('137', 1)
2020-06-20 15:34:36,988 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:34:36,991 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:34:36,991 INFO sqlalchemy.engine.base.Engine Thread-90 : (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 59))
2020-06-20 15:34:36,991 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:34:36,992 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (19, 'Change Freeze RED', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45))
2020-06-20 15:34:36,992 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45))
2020-06-20 15:34:36,996 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 15:34:36,996 INFO sqlalchemy.engine.base.Engine Thread-90 : (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 59))
2020-06-20 15:34:36,996 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket')
2020-06-20 15:34:36,996 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (30, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456')
2020-06-20 15:34:37,001 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:34:37,001 INFO sqlalchemy.engine.base.Engine Thread-90 : ('philip', 1, 1)
2020-06-20 15:34:37,001 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:37,002 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:37,003 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-20 15:34:37,207 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-06-20 15:34:37,210 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-06-20 15:34:37,211 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:37,216 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-06-20 15:34:37,215 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:37,216 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-06-20 15:34:37,214 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-06-20 15:34:37,219 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:37,219 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:37,221 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:37,221 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:37,223 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-06-20 15:34:37,222 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-06-20 15:34:37,220 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:37,225 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-06-20 15:34:37,225 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:37,226 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:37,227 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-06-20 15:34:37,249 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-20 15:34:37,250 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:37,250 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-20 15:34:37,251 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:37,251 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:37,252 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-20 15:34:37,300 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-20 15:34:37,301 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:34:37,301 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-20 15:34:37,302 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:34:37,302 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:34:37,303 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-20 15:35:08,331 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-20 15:35:08,333 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 15:35:08,333 INFO sqlalchemy.engine.base.Engine Thread-105 : ()
2020-06-20 15:35:08,335 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 15:35:08,335 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:35:08,336 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 15:35:08,337 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:35:08,337 INFO sqlalchemy.engine.base.Engine Thread-105 : (100,)
2020-06-20 15:35:08,338 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:35:08,338 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 15:35:08,338 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 15:35:08,338 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 15:35:08,338 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 15:35:08,338 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 15:35:08,340 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:08,341 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-20 15:35:08,341 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:08,341 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:08,346 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:35:08,346 INFO sqlalchemy.engine.base.Engine Thread-105 : ('philip', 1, 1)
2020-06-20 15:35:08,347 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:08,380 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:08,382 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-20 15:35:08,643 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-06-20 15:35:08,644 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:08,644 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-06-20 15:35:08,646 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-06-20 15:35:08,647 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:08,648 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:08,649 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-06-20 15:35:08,650 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:08,652 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-20 15:35:08,653 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-06-20 15:35:08,654 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:08,657 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-06-20 15:35:08,656 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-06-20 15:35:08,657 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:08,660 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:08,659 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:08,659 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-20 15:35:08,661 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-06-20 15:35:08,662 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-06-20 15:35:08,664 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:08,664 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:08,665 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-20 15:35:08,700 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-20 15:35:08,701 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:08,701 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-20 15:35:08,702 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:08,702 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:08,703 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-20 15:35:09,356 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-20 15:35:09,358 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 15:35:09,358 INFO sqlalchemy.engine.base.Engine Thread-120 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:35:09,360 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 15:35:09,360 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 15:35:09,360 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 15:35:09,360 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 15:35:09,361 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 15:35:09,361 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:35:09,361 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:35:09,361 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:35:09,361 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:35:09,361 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:35:09,365 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 15:35:09,366 INFO sqlalchemy.engine.base.Engine Thread-120 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:35:09,366 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:35:09,367 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 15:35:09,371 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 15:35:09,371 INFO sqlalchemy.engine.base.Engine Thread-120 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:35:09,372 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:35:09,372 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 15:35:09,373 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-20 15:35:09,405 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-20 15:35:09,407 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 15:35:09,408 INFO sqlalchemy.engine.base.Engine Thread-121 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:35:09,409 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:35:09,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 15:35:09,415 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 15:35:09,415 INFO sqlalchemy.engine.base.Engine Thread-121 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:35:09,416 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:35:09,416 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 15:35:09,420 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 15:35:09,421 INFO sqlalchemy.engine.base.Engine Thread-121 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 15:35:09,422 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 15:35:09,422 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 15:35:09,423 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-20 15:35:09,451 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-20 15:35:09,453 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-20 15:35:09,455 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,456 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,456 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-20 15:35:09,456 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-20 15:35:09,457 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,457 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,457 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,458 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,471 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-06-20 15:35:09,480 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,482 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-06-20 15:35:09,487 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,488 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,489 INFO sqlalchemy.engine.base.Engine Thread-122 : (19, 1)
2020-06-20 15:35:09,490 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,495 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-06-20 15:35:09,490 INFO sqlalchemy.engine.base.Engine Thread-123 : (15, 1)
2020-06-20 15:35:09,492 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-06-20 15:35:09,495 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-06-20 15:35:09,492 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-06-20 15:35:09,496 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,496 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,498 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,498 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,498 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,499 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,500 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,501 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:35:09,501 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-06-20 15:35:09,502 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:35:09,502 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,502 INFO sqlalchemy.engine.base.Engine Thread-126 : (1, 1)
2020-06-20 15:35:09,513 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,514 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-20 15:35:09,525 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,520 INFO sqlalchemy.engine.base.Engine Thread-125 : (23, 1)
2020-06-20 15:35:09,525 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,528 INFO sqlalchemy.engine.base.Engine Thread-124 : (20, 1)
2020-06-20 15:35:09,526 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,527 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,542 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,527 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,534 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,539 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,542 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-06-20 15:35:09,514 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-20 15:35:09,554 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 15:35:09,555 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,556 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:35:09,560 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-06-20 15:35:09,558 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,559 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-06-20 15:35:09,559 INFO sqlalchemy.engine.base.Engine Thread-126 : (21, 1)
2020-06-20 15:35:09,557 INFO sqlalchemy.engine.base.Engine Thread-127 : (22, 1)
2020-06-20 15:35:09,561 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-06-20 15:35:09,562 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,563 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,563 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,575 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 15:35:09,576 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,577 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-06-20 15:35:09,578 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 15:35:09,579 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,581 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-06-20 15:35:09,584 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-06-20 15:35:09,585 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-06-20 15:35:09,586 INFO sqlalchemy.engine.base.Engine Thread-128 : (27, 1)
2020-06-20 15:35:09,587 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,588 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,592 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-06-20 15:35:09,592 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-06-20 15:35:09,592 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-06-20 15:35:09,593 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,595 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-06-20 15:35:09,595 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,595 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,594 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,595 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,610 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,604 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-06-20 15:35:09,610 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,602 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:35:09,617 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:09,617 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,617 INFO sqlalchemy.engine.base.Engine Thread-129 : (56, 1)
2020-06-20 15:35:09,623 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,625 INFO sqlalchemy.engine.base.Engine Thread-130 : (57, 1)
2020-06-20 15:35:09,624 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-06-20 15:35:09,624 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,624 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-06-20 15:35:09,626 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,626 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 15:35:09,643 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:35:09,651 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 15:35:09,654 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,655 INFO sqlalchemy.engine.base.Engine Thread-131 : (31, 1)
2020-06-20 15:35:09,655 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-06-20 15:35:09,656 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-06-20 15:35:09,656 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:09,658 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:09,657 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:35:09,665 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:35:09,666 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-06-20 15:35:09,689 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 15:35:09,689 INFO sqlalchemy.engine.base.Engine Thread-132 : (30, 1)
2020-06-20 15:35:09,690 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 15:35:09,692 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 15:35:09,693 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-06-20 15:35:15,560 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-20 15:35:15,561 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:15,561 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-20 15:35:15,562 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,562 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,565 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:35:15,565 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-06-20 15:35:15,566 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,566 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,568 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:35:15,569 INFO sqlalchemy.engine.base.Engine Thread-133 : (116,)
2020-06-20 15:35:15,569 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:35:15,569 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:35:15,570 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:35:15,570 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:35:15,570 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:35:15,571 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:35:15,571 INFO sqlalchemy.engine.base.Engine Thread-133 : (92,)
2020-06-20 15:35:15,572 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:35:15,572 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:35:15,572 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:35:15,573 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:35:15,573 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:35:15,577 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:35:15,577 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-06-20 15:35:15,578 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,578 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,580 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-20 15:35:15,831 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-06-20 15:35:15,832 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:15,832 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-06-20 15:35:15,833 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,833 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,835 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-06-20 15:35:15,838 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-06-20 15:35:15,839 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:15,839 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-06-20 15:35:15,840 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,840 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,842 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-06-20 15:35:15,846 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-06-20 15:35:15,848 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:15,851 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-06-20 15:35:15,851 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-06-20 15:35:15,852 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:15,853 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-06-20 15:35:15,854 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,854 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,855 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-06-20 15:35:15,854 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,857 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,858 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-06-20 15:35:15,897 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-06-20 15:35:15,898 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:15,898 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-06-20 15:35:15,899 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:15,899 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:15,900 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-06-20 15:35:20,077 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-06-20 15:35:20,079 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:20,079 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-06-20 15:35:20,080 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:20,080 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:20,082 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:35:20,083 INFO sqlalchemy.engine.base.Engine Thread-148 : ('philip', 1, 1)
2020-06-20 15:35:20,084 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:20,084 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:20,087 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:35:20,087 INFO sqlalchemy.engine.base.Engine Thread-148 : (116,)
2020-06-20 15:35:20,088 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:35:20,088 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 15:35:20,088 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 15:35:20,088 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 15:35:20,088 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 15:35:20,090 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 15:35:20,090 INFO sqlalchemy.engine.base.Engine Thread-148 : (92,)
2020-06-20 15:35:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:35:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 15:35:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 15:35:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 15:35:20,091 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 15:35:20,093 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 15:35:20,093 INFO sqlalchemy.engine.base.Engine Thread-148 : ('OPERATIONS_EMAILS', 1)
2020-06-20 15:35:20,093 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:35:20,093 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 15:35:20,095 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 15:35:20,095 INFO sqlalchemy.engine.base.Engine Thread-148 : ('137', 1)
2020-06-20 15:35:20,095 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 15:35:20,099 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 15:35:20,099 INFO sqlalchemy.engine.base.Engine Thread-148 : (datetime.datetime(2020, 6, 14, 0, 0), datetime.datetime(2020, 6, 14, 23, 59))
2020-06-20 15:35:20,100 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 15:35:20,105 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 15:35:20,105 INFO sqlalchemy.engine.base.Engine Thread-148 : (datetime.datetime(2020, 6, 14, 0, 0), datetime.datetime(2020, 6, 14, 23, 59))
2020-06-20 15:35:20,105 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket')
2020-06-20 15:35:20,105 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (31, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456')
2020-06-20 15:35:20,110 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 15:35:20,110 INFO sqlalchemy.engine.base.Engine Thread-148 : ('philip', 1, 1)
2020-06-20 15:35:20,111 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:20,111 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:20,113 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-06-20 15:35:21,096 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-20 15:35:21,097 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:21,097 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-06-20 15:35:21,098 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:21,098 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:21,099 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-20 15:35:21,403 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-06-20 15:35:21,404 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-06-20 15:35:21,407 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-06-20 15:35:21,409 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:21,412 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-06-20 15:35:21,413 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:21,414 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:21,414 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-06-20 15:35:21,415 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 15:35:21,415 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-06-20 15:35:21,415 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-06-20 15:35:21,416 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-06-20 15:35:21,417 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:21,417 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:21,418 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-06-20 15:35:21,419 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:21,419 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:21,420 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:21,420 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:21,423 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-06-20 15:35:21,421 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-06-20 15:35:21,419 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 15:35:21,423 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 15:35:21,424 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-06-20 16:26:15,019 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 16:26:15,020 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 16:26:15,021 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 16:26:15,022 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 16:26:15,022 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 16:26:15,022 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 16:26:15,023 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 16:26:15,023 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 16:26:15,023 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 16:26:15,023 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 16:26:15,024 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 16:26:15,024 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 16:26:15,024 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 16:26:15,024 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 16:26:15,025 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 16:26:15,025 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 16:26:15,026 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 16:26:15,026 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 16:26:15,027 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 16:26:15,027 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 16:26:15,027 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 16:26:15,027 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 16:26:15,028 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 16:26:15,031 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:15,031 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 16:26:15,032 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,032 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,035 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 16:26:15,035 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 16:26:15,036 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,036 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,041 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 16:26:15,041 INFO sqlalchemy.engine.base.Engine Thread-2 : (116,)
2020-06-20 16:26:15,042 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:15,043 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 16:26:15,043 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 16:26:15,043 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 16:26:15,043 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 16:26:15,044 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 16:26:15,044 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 16:26:15,045 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:15,045 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 16:26:15,045 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 16:26:15,045 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 16:26:15,045 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 16:26:15,047 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 16:26:15,047 INFO sqlalchemy.engine.base.Engine Thread-2 : ('OPERATIONS_EMAILS', 1)
2020-06-20 16:26:15,048 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:15,048 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 16:26:15,050 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 16:26:15,050 INFO sqlalchemy.engine.base.Engine Thread-2 : ('137', 1)
2020-06-20 16:26:15,051 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:15,059 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 16:26:15,059 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 14, 0, 0), datetime.datetime(2020, 6, 14, 23, 59))
2020-06-20 16:26:15,060 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 16:26:15,065 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, datesofinterest_1.doi_name AS datesofinterest_1_doi_name 
FROM bookings AS bookings_1 LEFT OUTER JOIN datesofinterest AS datesofinterest_1 ON bookings_1.slot_id = datesofinterest_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 16:26:15,065 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 14, 0, 0), datetime.datetime(2020, 6, 14, 23, 59))
2020-06-20 16:26:15,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'datesofinterest_1_doi_name')
2020-06-20 16:26:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (31, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', None)
2020-06-20 16:26:15,149 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 16:26:15,149 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 16:26:15,150 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,150 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,153 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 16:26:15,726 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 16:26:15,727 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:15,728 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 16:26:15,728 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,729 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,740 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 16:26:15,823 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 16:26:15,825 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:15,825 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 16:26:15,826 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,826 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,827 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 16:26:15,827 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 16:26:15,830 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:15,830 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 16:26:15,831 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,834 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,833 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 16:26:15,835 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 16:26:15,838 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:15,838 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 16:26:15,839 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,840 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,841 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 16:26:15,841 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 16:26:15,842 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:15,843 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 16:26:15,843 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:15,843 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:15,844 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 16:26:35,263 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-20 16:26:35,264 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:35,264 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-20 16:26:35,265 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,265 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,267 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 16:26:35,267 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 16:26:35,268 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,268 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,271 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 16:26:35,271 INFO sqlalchemy.engine.base.Engine Thread-18 : (116,)
2020-06-20 16:26:35,272 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:35,272 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 16:26:35,272 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 16:26:35,272 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 16:26:35,272 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 16:26:35,273 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 16:26:35,274 INFO sqlalchemy.engine.base.Engine Thread-18 : (92,)
2020-06-20 16:26:35,274 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:35,274 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 16:26:35,274 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 16:26:35,275 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 16:26:35,275 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 16:26:35,277 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 16:26:35,277 INFO sqlalchemy.engine.base.Engine Thread-18 : ('OPERATIONS_EMAILS', 1)
2020-06-20 16:26:35,277 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:35,278 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 16:26:35,279 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 16:26:35,279 INFO sqlalchemy.engine.base.Engine Thread-18 : ('137', 1)
2020-06-20 16:26:35,280 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 16:26:35,283 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 16:26:35,283 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 14, 0, 0), datetime.datetime(2020, 6, 14, 23, 59))
2020-06-20 16:26:35,284 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 16:26:35,288 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, datesofinterest_1.doi_name AS datesofinterest_1_doi_name 
FROM bookings AS bookings_1 LEFT OUTER JOIN datesofinterest AS datesofinterest_1 ON bookings_1.slot_id = datesofinterest_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 16:26:35,288 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 14, 0, 0), datetime.datetime(2020, 6, 14, 23, 59))
2020-06-20 16:26:35,289 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'datesofinterest_1_doi_name')
2020-06-20 16:26:35,289 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (31, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', None)
2020-06-20 16:26:35,294 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 16:26:35,294 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 16:26:35,294 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,295 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,297 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-20 16:26:35,551 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 16:26:35,552 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:35,552 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 16:26:35,553 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,553 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,554 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 16:26:35,626 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 16:26:35,629 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 16:26:35,630 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:35,633 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:35,635 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 16:26:35,635 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 16:26:35,635 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 16:26:35,636 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:35,640 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 16:26:35,640 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,641 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,641 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 16:26:35,642 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 16:26:35,643 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,643 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,645 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,646 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 16:26:35,645 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,643 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 16:26:35,644 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 16:26:35,648 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 16:26:35,649 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 16:26:35,650 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 16:26:35,651 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 20:43:59,965 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-20 20:43:59,967 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:43:59,967 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-20 20:43:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:43:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:43:59,971 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:43:59,971 INFO sqlalchemy.engine.base.Engine Thread-34 : (132,)
2020-06-20 20:43:59,972 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:43:59,972 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 20:43:59,972 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 20:43:59,972 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 20:43:59,973 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 20:44:00,002 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s
2020-06-20 20:44:00,002 INFO sqlalchemy.engine.base.Engine Thread-34 : (datetime.datetime(2020, 6, 19, 20, 43, 59, 973255), datetime.datetime(2020, 7, 3, 20, 43, 59, 973255), datetime.datetime(2020, 6, 19, 20, 43, 59, 973255), datetime.datetime(2020, 7, 3, 20, 43, 59, 973255), datetime.datetime(2020, 6, 19, 20, 43, 59, 973255), datetime.datetime(2020, 7, 3, 20, 43, 59, 973255))
2020-06-20 20:44:00,004 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:44:00,013 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE lower(bookings_1.owner_id) LIKE lower(%s) AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)
2020-06-20 20:44:00,013 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', datetime.datetime(2020, 6, 19, 20, 43, 59, 973255), datetime.datetime(2020, 7, 3, 20, 43, 59, 973255), datetime.datetime(2020, 6, 19, 20, 43, 59, 973255), datetime.datetime(2020, 7, 3, 20, 43, 59, 973255), datetime.datetime(2020, 6, 19, 20, 43, 59, 973255), datetime.datetime(2020, 7, 3, 20, 43, 59, 973255))
2020-06-20 20:44:00,015 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:44:00,048 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:44:00,048 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-20 20:44:00,049 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:00,049 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:00,052 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:44:00,052 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-06-20 20:44:00,052 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:00,053 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:00,053 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-20 20:44:00,328 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 20:44:00,329 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:00,329 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 20:44:00,330 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:00,330 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:00,330 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 20:44:00,332 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 20:44:00,333 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:00,334 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 20:44:00,334 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 20:44:00,334 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 20:44:00,336 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:00,337 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 20:44:00,337 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:00,338 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 20:44:00,336 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:00,338 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:00,338 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:00,340 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 20:44:00,340 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:00,340 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:00,342 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 20:44:00,342 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:00,344 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 20:44:00,388 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-20 20:44:00,389 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:00,389 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-20 20:44:00,390 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:00,390 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:00,391 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 20:44:01,669 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-20 20:44:01,672 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 20:44:01,672 INFO sqlalchemy.engine.base.Engine Thread-49 : ()
2020-06-20 20:44:01,673 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 20:44:01,674 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:44:01,674 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 20:44:01,676 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:44:01,676 INFO sqlalchemy.engine.base.Engine Thread-49 : (100,)
2020-06-20 20:44:01,676 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:44:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 20:44:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 20:44:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 20:44:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 20:44:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 20:44:01,679 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:01,679 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-20 20:44:01,679 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:01,679 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:01,689 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:44:01,689 INFO sqlalchemy.engine.base.Engine Thread-49 : ('philip', 1, 1)
2020-06-20 20:44:01,689 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:01,689 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:01,691 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-20 20:44:01,943 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 20:44:01,944 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:01,944 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 20:44:01,947 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 20:44:01,948 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:01,948 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 20:44:01,949 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:01,949 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:01,950 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:01,950 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:01,953 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-20 20:44:01,955 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 20:44:01,956 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 20:44:01,957 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:01,958 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 20:44:01,961 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-20 20:44:01,962 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:01,962 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-20 20:44:01,963 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:01,963 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:01,964 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-20 20:44:01,965 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:01,965 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:01,966 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-20 20:44:02,004 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-20 20:44:02,005 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,005 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-20 20:44:02,005 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,006 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,007 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-20 20:44:02,664 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-20 20:44:02,666 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:44:02,666 INFO sqlalchemy.engine.base.Engine Thread-64 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:44:02,668 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:44:02,669 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:44:02,674 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:44:02,674 INFO sqlalchemy.engine.base.Engine Thread-64 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:44:02,675 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:44:02,675 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:44:02,680 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:44:02,680 INFO sqlalchemy.engine.base.Engine Thread-64 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:44:02,681 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:44:02,681 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:44:02,682 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-20 20:44:02,711 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-20 20:44:02,713 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:44:02,713 INFO sqlalchemy.engine.base.Engine Thread-65 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:44:02,715 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:44:02,716 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:44:02,721 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:44:02,721 INFO sqlalchemy.engine.base.Engine Thread-65 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:44:02,722 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:44:02,722 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:44:02,726 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:44:02,727 INFO sqlalchemy.engine.base.Engine Thread-65 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:44:02,727 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:44:02,729 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:44:02,731 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-20 20:44:02,766 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-20 20:44:02,768 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-20 20:44:02,770 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-06-20 20:44:02,771 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,774 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-06-20 20:44:02,775 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,776 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,783 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-06-20 20:44:02,780 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,782 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-20 20:44:02,782 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-06-20 20:44:02,777 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-06-20 20:44:02,783 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-06-20 20:44:02,784 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,785 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,785 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-06-20 20:44:02,786 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,786 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,786 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-06-20 20:44:02,786 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,789 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,787 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,788 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,789 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,788 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,820 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-06-20 20:44:02,821 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,821 INFO sqlalchemy.engine.base.Engine Thread-68 : (20, 1)
2020-06-20 20:44:02,821 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,822 INFO sqlalchemy.engine.base.Engine Thread-69 : (21, 1)
2020-06-20 20:44:02,822 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,822 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,828 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,829 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:44:02,835 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,835 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,840 INFO sqlalchemy.engine.base.Engine Thread-70 : (22, 1)
2020-06-20 20:44:02,847 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,859 INFO sqlalchemy.engine.base.Engine Thread-66 : (15, 1)
2020-06-20 20:44:02,840 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,859 INFO sqlalchemy.engine.base.Engine Thread-67 : (19, 1)
2020-06-20 20:44:02,853 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,859 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,860 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:44:02,861 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,861 INFO sqlalchemy.engine.base.Engine Thread-71 : (23, 1)
2020-06-20 20:44:02,861 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,863 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:44:02,863 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,884 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-06-20 20:44:02,904 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-06-20 20:44:02,905 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:44:02,905 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,910 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:44:02,907 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:44:02,909 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-06-20 20:44:02,911 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-06-20 20:44:02,906 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-06-20 20:44:02,912 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-20 20:44:02,925 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-20 20:44:02,926 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,926 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-20 20:44:02,927 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,928 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,934 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-20 20:44:02,935 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,935 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-20 20:44:02,938 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-20 20:44:02,939 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,939 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-20 20:44:02,939 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,939 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,950 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,951 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,951 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,956 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,956 INFO sqlalchemy.engine.base.Engine Thread-72 : (27, 1)
2020-06-20 20:44:02,958 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-20 20:44:02,973 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,973 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-20 20:44:02,969 INFO sqlalchemy.engine.base.Engine Thread-74 : (56, 1)
2020-06-20 20:44:02,969 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:44:02,973 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,971 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-20 20:44:02,975 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:44:02,978 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-20 20:44:02,975 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:02,976 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:44:02,977 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,974 INFO sqlalchemy.engine.base.Engine Thread-73 : (57, 1)
2020-06-20 20:44:02,981 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:44:02,981 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-20 20:44:02,982 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,983 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:44:02,997 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:44:02,984 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-20 20:44:02,984 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:44:03,017 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:44:03,032 INFO sqlalchemy.engine.base.Engine Thread-75 : (31, 1)
2020-06-20 20:44:03,031 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:44:03,029 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:44:03,033 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:44:03,034 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-20 20:44:03,034 INFO sqlalchemy.engine.base.Engine Thread-76 : (30, 1)
2020-06-20 20:44:03,036 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:44:03,037 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:44:03,038 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-20 20:44:03,040 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:44:03,042 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-20 20:49:25,043 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-20 20:49:25,045 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 20:49:25,045 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-06-20 20:49:25,047 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 20:49:25,048 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:49:25,048 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 20:49:25,050 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:49:25,050 INFO sqlalchemy.engine.base.Engine Thread-77 : (100,)
2020-06-20 20:49:25,051 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:49:25,051 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 20:49:25,051 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 20:49:25,051 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 20:49:25,051 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 20:49:25,051 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 20:49:25,054 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:25,054 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-20 20:49:25,055 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:25,055 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:25,060 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:49:25,060 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-06-20 20:49:25,061 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:25,061 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:25,062 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-20 20:49:25,597 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-06-20 20:49:25,598 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:25,598 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-20 20:49:25,599 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:25,599 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:25,600 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-06-20 20:49:25,700 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-20 20:49:25,703 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-20 20:49:25,706 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:25,707 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:25,712 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-20 20:49:25,712 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-20 20:49:25,712 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-20 20:49:25,710 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-20 20:49:25,713 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:25,717 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-20 20:49:25,715 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:25,716 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:25,717 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:25,714 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:25,718 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:25,718 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-20 20:49:25,719 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-20 20:49:25,719 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:25,720 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:25,721 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-20 20:49:25,722 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:25,722 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:25,723 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-20 20:49:25,724 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-20 20:49:26,692 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-20 20:49:26,694 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:49:26,694 INFO sqlalchemy.engine.base.Engine Thread-92 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:49:26,697 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:49:26,697 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:49:26,697 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:49:26,697 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:49:26,698 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:49:26,698 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:49:26,698 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:49:26,698 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:49:26,698 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:49:26,698 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:49:26,748 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:49:26,748 INFO sqlalchemy.engine.base.Engine Thread-92 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:49:26,751 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:49:26,752 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:49:26,757 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:49:26,758 INFO sqlalchemy.engine.base.Engine Thread-92 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:49:26,759 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:49:26,759 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:49:26,760 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-20 20:49:26,824 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-20 20:49:26,826 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:49:26,826 INFO sqlalchemy.engine.base.Engine Thread-94 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:49:26,828 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:49:26,829 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:49:26,834 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:49:26,834 INFO sqlalchemy.engine.base.Engine Thread-94 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:49:26,835 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:49:26,835 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:49:26,840 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:49:26,840 INFO sqlalchemy.engine.base.Engine Thread-94 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:49:26,841 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:49:26,841 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:49:26,842 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-20 20:49:26,949 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-20 20:49:26,951 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-20 20:49:26,954 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-06-20 20:49:26,955 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:26,962 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-20 20:49:26,958 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:26,962 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-20 20:49:26,961 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:26,962 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-06-20 20:49:26,960 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-06-20 20:49:26,962 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:26,965 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-06-20 20:49:26,967 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:26,967 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:26,969 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:26,970 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-06-20 20:49:26,984 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:26,986 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-06-20 20:49:26,972 INFO sqlalchemy.engine.base.Engine Thread-98 : (1, 1)
2020-06-20 20:49:26,972 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:26,971 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:26,986 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:26,972 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:26,992 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:26,992 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,000 INFO sqlalchemy.engine.base.Engine Thread-96 : (19, 1)
2020-06-20 20:49:27,000 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,014 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,001 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,012 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,013 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,038 INFO sqlalchemy.engine.base.Engine Thread-95 : (15, 1)
2020-06-20 20:49:27,000 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-06-20 20:49:27,020 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,040 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:49:27,027 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,042 INFO sqlalchemy.engine.base.Engine Thread-100 : (23, 1)
2020-06-20 20:49:27,041 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,043 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,025 INFO sqlalchemy.engine.base.Engine Thread-97 : (20, 1)
2020-06-20 20:49:27,042 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,043 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,056 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,084 INFO sqlalchemy.engine.base.Engine Thread-98 : (21, 1)
2020-06-20 20:49:27,065 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:49:27,070 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,077 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:49:27,087 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-06-20 20:49:27,084 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-20 20:49:27,085 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-20 20:49:27,085 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,086 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:49:27,063 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,091 INFO sqlalchemy.engine.base.Engine Thread-99 : (22, 1)
2020-06-20 20:49:27,090 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-06-20 20:49:27,089 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:49:27,093 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,094 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:49:27,095 INFO sqlalchemy.engine.base.Engine Thread-98 : ROLLBACK
2020-06-20 20:49:27,096 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-06-20 20:49:27,151 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-06-20 20:49:27,152 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:27,152 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-06-20 20:49:27,155 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-06-20 20:49:27,156 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:27,156 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-06-20 20:49:27,157 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,158 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,165 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-20 20:49:27,166 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:27,166 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-20 20:49:27,174 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-20 20:49:27,175 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,178 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,180 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-20 20:49:27,181 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,199 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,192 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,192 INFO sqlalchemy.engine.base.Engine Thread-101 : (27, 1)
2020-06-20 20:49:27,198 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:27,220 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-20 20:49:27,182 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:49:27,225 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-20 20:49:27,222 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,225 INFO sqlalchemy.engine.base.Engine Thread-102 : (56, 1)
2020-06-20 20:49:27,224 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,223 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,227 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:49:27,229 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-06-20 20:49:27,221 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,227 INFO sqlalchemy.engine.base.Engine Thread-103 : (57, 1)
2020-06-20 20:49:27,229 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,227 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:49:27,229 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,259 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:49:27,238 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:49:27,258 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,279 INFO sqlalchemy.engine.base.Engine Thread-105 : (30, 1)
2020-06-20 20:49:27,237 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:49:27,260 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-06-20 20:49:27,286 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:49:27,288 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:49:27,289 INFO sqlalchemy.engine.base.Engine Thread-104 : (31, 1)
2020-06-20 20:49:27,290 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-20 20:49:27,291 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:49:27,292 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:49:27,296 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:49:27,299 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:49:27,300 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-20 20:49:27,301 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-20 20:50:42,055 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-20 20:50:42,056 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:42,056 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-20 20:50:42,057 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,057 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,059 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:50:42,059 INFO sqlalchemy.engine.base.Engine Thread-106 : ('philip', 1, 1)
2020-06-20 20:50:42,060 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,060 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,062 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:50:42,063 INFO sqlalchemy.engine.base.Engine Thread-106 : (132,)
2020-06-20 20:50:42,063 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:50:42,063 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 20:50:42,063 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 20:50:42,063 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 20:50:42,064 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 20:50:42,073 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 20:50:42,073 INFO sqlalchemy.engine.base.Engine Thread-106 : (datetime.datetime(2020, 6, 20, 20, 50, 42, 64288), datetime.datetime(2020, 7, 4, 20, 50, 42, 64288), datetime.datetime(2020, 6, 20, 20, 50, 42, 64288), datetime.datetime(2020, 7, 4, 20, 50, 42, 64288), datetime.datetime(2020, 6, 20, 20, 50, 42, 64288), datetime.datetime(2020, 7, 4, 20, 50, 42, 64288))
2020-06-20 20:50:42,073 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 20:50:42,074 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 20:50:42,091 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:50:42,091 INFO sqlalchemy.engine.base.Engine Thread-106 : ('philip', 1, 1)
2020-06-20 20:50:42,092 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,092 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,094 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-20 20:50:42,353 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-06-20 20:50:42,354 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:42,357 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-20 20:50:42,359 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:42,357 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-06-20 20:50:42,360 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-20 20:50:42,361 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-20 20:50:42,367 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:42,363 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,367 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,362 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,368 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,368 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-20 20:50:42,365 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-20 20:50:42,367 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-20 20:50:42,369 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-06-20 20:50:42,371 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:42,372 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-20 20:50:42,373 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,373 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,374 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-20 20:50:42,375 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,375 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,376 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-20 20:50:42,408 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-20 20:50:42,409 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:42,409 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-20 20:50:42,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:42,410 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:42,411 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-20 20:50:44,899 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-20 20:50:44,900 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:44,901 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-20 20:50:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:44,904 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.id
2020-06-20 20:50:44,904 INFO sqlalchemy.engine.base.Engine Thread-122 : (138,)
2020-06-20 20:50:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:50:44,905 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (139, 'Copy to date', '1', 138, 0, 0, 0)
2020-06-20 20:50:44,905 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (140, 'Repeat weekly until date', '7', 138, 0, 0, 0)
2020-06-20 20:50:44,905 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (141, 'Repeat fortnightly until date', '14', 138, 0, 0, 0)
2020-06-20 20:50:44,905 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (142, 'Repeat monthly until date', '28', 138, 0, 0, 0)
2020-06-20 20:50:44,915 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:50:44,916 INFO sqlalchemy.engine.base.Engine Thread-122 : (56, 1)
2020-06-20 20:50:44,917 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:50:44,918 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:50:44,933 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-20 20:50:57,661 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-20 20:50:57,662 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:57,662 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-20 20:50:57,663 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:57,663 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:57,666 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:50:57,666 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-06-20 20:50:57,666 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:57,667 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:57,669 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 20:50:57,669 INFO sqlalchemy.engine.base.Engine Thread-123 : ('56', 1)
2020-06-20 20:50:57,669 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment')
2020-06-20 20:50:57,670 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94)
2020-06-20 20:50:57,672 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:50:57,672 INFO sqlalchemy.engine.base.Engine Thread-123 : (82,)
2020-06-20 20:50:57,673 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:50:57,673 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 20:50:57,673 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 20:50:57,674 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 20:50:57,675 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 20:50:57,675 INFO sqlalchemy.engine.base.Engine Thread-123 : (1,)
2020-06-20 20:50:57,676 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:50:57,676 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 20:50:57,676 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 20:50:57,678 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 20:50:57,678 INFO sqlalchemy.engine.base.Engine Thread-123 : ()
2020-06-20 20:50:57,678 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 20:50:57,679 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:50:57,679 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:50:57,680 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 20:50:57,680 INFO sqlalchemy.engine.base.Engine Thread-123 : (127, 0)
2020-06-20 20:50:57,681 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:50:57,681 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 20:50:57,681 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 20:50:57,681 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 20:50:57,681 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 20:50:57,683 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:50:57,683 INFO sqlalchemy.engine.base.Engine Thread-123 : (92,)
2020-06-20 20:50:57,683 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:50:57,684 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 20:50:57,684 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 20:50:57,684 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 20:50:57,684 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 20:50:57,718 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:50:57,718 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-06-20 20:50:57,719 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:57,719 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:57,722 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-20 20:50:57,983 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-20 20:50:57,984 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:57,984 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-20 20:50:57,985 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:57,985 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:57,986 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-20 20:50:58,043 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-06-20 20:50:58,044 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:58,044 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-06-20 20:50:58,047 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-20 20:50:58,048 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:58,048 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-06-20 20:50:58,049 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:58,049 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:58,050 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:58,054 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-20 20:50:58,054 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:58,057 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:58,058 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-20 20:50:58,059 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-06-20 20:50:58,059 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-06-20 20:50:58,061 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-20 20:50:58,062 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:50:58,062 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-20 20:50:58,063 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:58,064 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:58,065 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-20 20:50:58,066 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:50:58,066 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:50:58,067 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-20 20:54:26,723 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-06-20 20:54:26,726 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 20:54:26,726 INFO sqlalchemy.engine.base.Engine Thread-138 : ()
2020-06-20 20:54:26,728 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 20:54:26,729 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:26,729 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 20:54:26,731 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:54:26,731 INFO sqlalchemy.engine.base.Engine Thread-138 : (100,)
2020-06-20 20:54:26,731 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:54:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 20:54:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 20:54:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 20:54:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 20:54:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 20:54:26,734 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:26,734 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-06-20 20:54:26,735 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:26,735 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:26,740 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:54:26,740 INFO sqlalchemy.engine.base.Engine Thread-138 : ('philip', 1, 1)
2020-06-20 20:54:26,741 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:26,741 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:26,743 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-06-20 20:54:26,991 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-06-20 20:54:26,994 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:26,994 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-06-20 20:54:26,995 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:26,996 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:26,997 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-06-20 20:54:27,066 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-06-20 20:54:27,071 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,071 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-06-20 20:54:27,073 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-06-20 20:54:27,074 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,074 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-06-20 20:54:27,075 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,075 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,077 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-06-20 20:54:27,077 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,081 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,082 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-06-20 20:54:27,083 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-06-20 20:54:27,085 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-06-20 20:54:27,088 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,088 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-06-20 20:54:27,086 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-06-20 20:54:27,090 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,090 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,091 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-06-20 20:54:27,092 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,093 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,094 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-06-20 20:54:27,723 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-06-20 20:54:27,725 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:54:27,725 INFO sqlalchemy.engine.base.Engine Thread-153 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:27,727 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:27,733 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:54:27,734 INFO sqlalchemy.engine.base.Engine Thread-153 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:27,735 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:27,735 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:54:27,740 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:54:27,740 INFO sqlalchemy.engine.base.Engine Thread-153 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:27,741 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:27,741 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:54:27,743 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-06-20 20:54:27,770 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-06-20 20:54:27,773 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:54:27,773 INFO sqlalchemy.engine.base.Engine Thread-154 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:27,774 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:27,775 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:27,780 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:54:27,780 INFO sqlalchemy.engine.base.Engine Thread-154 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:27,781 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:27,781 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:54:27,785 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:54:27,785 INFO sqlalchemy.engine.base.Engine Thread-154 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:27,786 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:27,786 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:54:27,788 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-06-20 20:54:27,818 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-06-20 20:54:27,820 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,822 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-06-20 20:54:27,826 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-06-20 20:54:27,828 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,827 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,828 INFO sqlalchemy.engine.base.Engine Thread-156 : (1, 1)
2020-06-20 20:54:27,828 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-06-20 20:54:27,826 INFO sqlalchemy.engine.base.Engine Thread-155 : (1, 1)
2020-06-20 20:54:27,829 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,830 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,835 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,840 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,848 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-06-20 20:54:27,849 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,849 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-06-20 20:54:27,856 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,856 INFO sqlalchemy.engine.base.Engine Thread-157 : (19, 1)
2020-06-20 20:54:27,856 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,862 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,857 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,862 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-06-20 20:54:27,859 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-06-20 20:54:27,868 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:27,882 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:54:27,883 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-06-20 20:54:27,876 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,877 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,878 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,869 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,870 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,883 INFO sqlalchemy.engine.base.Engine Thread-156 : (20, 1)
2020-06-20 20:54:27,884 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-06-20 20:54:27,884 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-06-20 20:54:27,895 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,897 INFO sqlalchemy.engine.base.Engine Thread-158 : (21, 1)
2020-06-20 20:54:27,897 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,896 INFO sqlalchemy.engine.base.Engine Thread-155 : (15, 1)
2020-06-20 20:54:27,900 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-06-20 20:54:27,904 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,904 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-06-20 20:54:27,901 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:27,902 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,903 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:27,901 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,920 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,911 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,917 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:54:27,918 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,932 INFO sqlalchemy.engine.base.Engine Thread-160 : (23, 1)
2020-06-20 20:54:27,905 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:27,930 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,933 INFO sqlalchemy.engine.base.Engine Thread-159 : (22, 1)
2020-06-20 20:54:27,931 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-06-20 20:54:27,919 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:54:27,933 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-06-20 20:54:27,933 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:27,930 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,934 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-06-20 20:54:27,935 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:27,936 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:54:27,949 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:54:27,950 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,954 INFO sqlalchemy.engine.base.Engine Thread-161 : (27, 1)
2020-06-20 20:54:27,953 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-06-20 20:54:27,952 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-06-20 20:54:27,956 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-06-20 20:54:27,956 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:27,959 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,960 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:27,960 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-06-20 20:54:27,961 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-06-20 20:54:27,962 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,962 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,977 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-06-20 20:54:27,978 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,981 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-06-20 20:54:27,981 INFO sqlalchemy.engine.base.Engine Thread-163 : (1, 1)
2020-06-20 20:54:27,983 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:27,989 INFO sqlalchemy.engine.base.Engine Thread-162 : (56, 1)
2020-06-20 20:54:27,984 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:27,990 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:27,990 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:27,990 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-06-20 20:54:27,989 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-06-20 20:54:27,996 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:28,002 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:28,005 INFO sqlalchemy.engine.base.Engine Thread-165 : (1, 1)
2020-06-20 20:54:28,005 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:28,004 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:28,006 INFO sqlalchemy.engine.base.Engine Thread-163 : (57, 1)
2020-06-20 20:54:28,006 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-06-20 20:54:28,007 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:28,007 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:28,009 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:28,008 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:28,008 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:28,015 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:28,022 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-06-20 20:54:28,057 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:54:28,059 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:54:28,060 INFO sqlalchemy.engine.base.Engine Thread-164 : (31, 1)
2020-06-20 20:54:28,060 INFO sqlalchemy.engine.base.Engine Thread-165 : (30, 1)
2020-06-20 20:54:28,061 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:54:28,063 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:28,064 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:54:28,065 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-06-20 20:54:28,067 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:28,069 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-06-20 20:54:28,959 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-06-20 20:54:28,960 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:28,960 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-06-20 20:54:28,960 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:28,961 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:28,969 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 20:54:28,969 INFO sqlalchemy.engine.base.Engine Thread-166 : (56,)
2020-06-20 20:54:28,970 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 20:54:28,971 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 20:54:28,973 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-06-20 20:54:28,989 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-06-20 20:54:28,990 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:28,990 INFO sqlalchemy.engine.base.Engine Thread-167 : (1, 1)
2020-06-20 20:54:28,991 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:28,991 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:28,995 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 20:54:28,995 INFO sqlalchemy.engine.base.Engine Thread-167 : (56,)
2020-06-20 20:54:28,995 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-20 20:54:28,996 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131)
2020-06-20 20:54:29,003 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 20:54:29,003 INFO sqlalchemy.engine.base.Engine Thread-167 : (56,)
2020-06-20 20:54:29,003 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 20:54:29,005 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 20:54:29,006 INFO sqlalchemy.engine.base.Engine Thread-167 : ()
2020-06-20 20:54:29,006 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 20:54:29,006 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:29,007 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:54:29,009 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 20:54:29,010 INFO sqlalchemy.engine.base.Engine Thread-167 : ()
2020-06-20 20:54:29,010 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 20:54:29,011 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:29,011 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 20:54:29,013 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 20:54:29,014 INFO sqlalchemy.engine.base.Engine Thread-167 : (56,)
2020-06-20 20:54:29,014 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 20:54:29,014 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'Zone 2 Complexes')
2020-06-20 20:54:29,015 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 20:54:29,016 INFO sqlalchemy.engine.base.Engine Thread-167 : (1,)
2020-06-20 20:54:29,016 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('complexgroups_1_group_members',)
2020-06-20 20:54:29,016 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row ('1',)
2020-06-20 20:54:29,022 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 20:54:29,022 INFO sqlalchemy.engine.base.Engine Thread-167 : ('1',)
2020-06-20 20:54:29,023 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 20:54:29,023 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'Made Up CheckPoint')
2020-06-20 20:54:29,024 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 20:54:29,024 INFO sqlalchemy.engine.base.Engine Thread-167 : (1, 1)
2020-06-20 20:54:29,025 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('complexgroups_1_max_slots',)
2020-06-20 20:54:29,025 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (5,)
2020-06-20 20:54:29,044 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-06-20 20:54:43,291 INFO sqlalchemy.engine.base.Engine Thread-168 : BEGIN (implicit)
2020-06-20 20:54:43,293 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-06-20 20:54:43,293 INFO sqlalchemy.engine.base.Engine Thread-168 : (0, 1)
2020-06-20 20:54:43,294 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-06-20 20:54:43,299 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 20:54:43,299 INFO sqlalchemy.engine.base.Engine Thread-168 : ()
2020-06-20 20:54:43,300 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 20:54:43,300 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:43,300 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 20:54:43,302 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:54:43,302 INFO sqlalchemy.engine.base.Engine Thread-168 : (97,)
2020-06-20 20:54:43,302 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:54:43,303 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-06-20 20:54:43,303 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-06-20 20:54:43,305 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 20:54:43,305 INFO sqlalchemy.engine.base.Engine Thread-168 : (0, 1)
2020-06-20 20:54:43,305 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment')
2020-06-20 20:54:43,308 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-06-20 20:54:43,308 INFO sqlalchemy.engine.base.Engine Thread-168 : (1, 1)
2020-06-20 20:54:43,309 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 20:54:43,309 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:43,311 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 20:54:43,311 INFO sqlalchemy.engine.base.Engine Thread-168 : (56, 1)
2020-06-20 20:54:43,311 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment')
2020-06-20 20:54:43,311 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94)
2020-06-20 20:54:43,314 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:43,314 INFO sqlalchemy.engine.base.Engine Thread-168 : (1, 1)
2020-06-20 20:54:43,314 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,314 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,374 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:54:43,374 INFO sqlalchemy.engine.base.Engine Thread-168 : ('philip', 1, 1)
2020-06-20 20:54:43,375 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,375 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,380 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:54:43,380 INFO sqlalchemy.engine.base.Engine Thread-168 : ('philip', 1, 1)
2020-06-20 20:54:43,381 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,381 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,382 INFO sqlalchemy.engine.base.Engine Thread-168 : ROLLBACK
2020-06-20 20:54:43,635 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-06-20 20:54:43,636 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:43,636 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-06-20 20:54:43,637 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,637 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,639 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-06-20 20:54:43,702 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-06-20 20:54:43,705 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-06-20 20:54:43,706 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-06-20 20:54:43,708 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:43,711 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-06-20 20:54:43,712 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:43,714 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:43,714 INFO sqlalchemy.engine.base.Engine Thread-179 : (1, 1)
2020-06-20 20:54:43,715 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:43,716 INFO sqlalchemy.engine.base.Engine Thread-182 : (1, 1)
2020-06-20 20:54:43,715 INFO sqlalchemy.engine.base.Engine Thread-180 : (1, 1)
2020-06-20 20:54:43,715 INFO sqlalchemy.engine.base.Engine Thread-181 : (1, 1)
2020-06-20 20:54:43,716 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,717 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,717 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,717 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,718 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-06-20 20:54:43,719 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,719 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,720 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-06-20 20:54:43,721 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:43,723 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:43,722 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-06-20 20:54:43,724 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-06-20 20:54:47,997 INFO sqlalchemy.engine.base.Engine Thread-183 : BEGIN (implicit)
2020-06-20 20:54:47,999 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 20:54:47,999 INFO sqlalchemy.engine.base.Engine Thread-183 : ()
2020-06-20 20:54:48,000 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 20:54:48,001 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:48,001 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 20:54:48,002 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 20:54:48,002 INFO sqlalchemy.engine.base.Engine Thread-183 : (100,)
2020-06-20 20:54:48,003 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 20:54:48,003 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 20:54:48,003 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 20:54:48,003 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 20:54:48,003 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 20:54:48,003 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 20:54:48,005 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:48,005 INFO sqlalchemy.engine.base.Engine Thread-183 : (1, 1)
2020-06-20 20:54:48,006 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:48,006 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:48,010 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 20:54:48,010 INFO sqlalchemy.engine.base.Engine Thread-183 : ('philip', 1, 1)
2020-06-20 20:54:48,010 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:48,011 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:48,012 INFO sqlalchemy.engine.base.Engine Thread-183 : ROLLBACK
2020-06-20 20:54:48,263 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-06-20 20:54:48,264 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:48,264 INFO sqlalchemy.engine.base.Engine Thread-194 : (1, 1)
2020-06-20 20:54:48,268 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-06-20 20:54:48,268 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:48,269 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:48,272 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-06-20 20:54:48,272 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:48,277 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-06-20 20:54:48,272 INFO sqlalchemy.engine.base.Engine Thread-193 : (1, 1)
2020-06-20 20:54:48,276 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:48,278 INFO sqlalchemy.engine.base.Engine Thread-195 : (1, 1)
2020-06-20 20:54:48,275 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-06-20 20:54:48,279 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:48,279 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:48,281 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:48,281 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:48,282 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-06-20 20:54:48,280 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:48,283 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-06-20 20:54:48,284 INFO sqlalchemy.engine.base.Engine Thread-196 : (1, 1)
2020-06-20 20:54:48,287 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:48,287 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:48,288 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-06-20 20:54:48,319 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-06-20 20:54:48,320 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:48,320 INFO sqlalchemy.engine.base.Engine Thread-197 : (1, 1)
2020-06-20 20:54:48,321 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:48,321 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:48,322 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-06-20 20:54:48,934 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-06-20 20:54:48,936 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:54:48,937 INFO sqlalchemy.engine.base.Engine Thread-198 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:48,938 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:54:48,938 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:48,939 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:48,944 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:54:48,944 INFO sqlalchemy.engine.base.Engine Thread-198 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:48,945 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:48,945 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:54:48,950 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:54:48,950 INFO sqlalchemy.engine.base.Engine Thread-198 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:48,950 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:48,951 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:54:48,952 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-06-20 20:54:48,979 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-06-20 20:54:48,981 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 20:54:48,981 INFO sqlalchemy.engine.base.Engine Thread-199 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:48,983 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 20:54:48,983 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 20:54:48,983 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 20:54:48,983 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 20:54:48,983 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 20:54:48,983 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:48,984 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 20:54:48,984 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:48,984 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:48,984 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 20:54:48,988 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 20:54:48,989 INFO sqlalchemy.engine.base.Engine Thread-199 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:48,989 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:48,990 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 20:54:48,994 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 20:54:48,994 INFO sqlalchemy.engine.base.Engine Thread-199 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 20:54:48,995 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 20:54:48,995 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 20:54:48,996 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-06-20 20:54:49,025 INFO sqlalchemy.engine.base.Engine Thread-200 : BEGIN (implicit)
2020-06-20 20:54:49,026 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,026 INFO sqlalchemy.engine.base.Engine Thread-200 : (1, 1)
2020-06-20 20:54:49,029 INFO sqlalchemy.engine.base.Engine Thread-201 : BEGIN (implicit)
2020-06-20 20:54:49,030 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,030 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,034 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,034 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-06-20 20:54:49,031 INFO sqlalchemy.engine.base.Engine Thread-201 : (1, 1)
2020-06-20 20:54:49,047 INFO sqlalchemy.engine.base.Engine Thread-203 : BEGIN (implicit)
2020-06-20 20:54:49,048 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,056 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-06-20 20:54:49,050 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,056 INFO sqlalchemy.engine.base.Engine Thread-203 : (1, 1)
2020-06-20 20:54:49,054 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,056 INFO sqlalchemy.engine.base.Engine Thread-205 : BEGIN (implicit)
2020-06-20 20:54:49,049 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,058 INFO sqlalchemy.engine.base.Engine Thread-200 : (15, 1)
2020-06-20 20:54:49,053 INFO sqlalchemy.engine.base.Engine Thread-204 : BEGIN (implicit)
2020-06-20 20:54:49,057 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,061 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,071 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,060 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,072 INFO sqlalchemy.engine.base.Engine Thread-204 : (1, 1)
2020-06-20 20:54:49,061 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,059 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,073 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,071 INFO sqlalchemy.engine.base.Engine Thread-202 : (19, 1)
2020-06-20 20:54:49,057 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,073 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:54:49,058 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,097 INFO sqlalchemy.engine.base.Engine Thread-205 : (1, 1)
2020-06-20 20:54:49,082 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,097 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,095 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,109 INFO sqlalchemy.engine.base.Engine Thread-201 : (20, 1)
2020-06-20 20:54:49,082 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:54:49,112 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-06-20 20:54:49,096 INFO sqlalchemy.engine.base.Engine Thread-200 : ROLLBACK
2020-06-20 20:54:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,111 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,114 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:49,112 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,115 INFO sqlalchemy.engine.base.Engine Thread-201 : ROLLBACK
2020-06-20 20:54:49,085 INFO sqlalchemy.engine.base.Engine Thread-203 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,133 INFO sqlalchemy.engine.base.Engine Thread-203 : (21, 1)
2020-06-20 20:54:49,130 INFO sqlalchemy.engine.base.Engine Thread-206 : BEGIN (implicit)
2020-06-20 20:54:49,132 INFO sqlalchemy.engine.base.Engine Thread-205 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,134 INFO sqlalchemy.engine.base.Engine Thread-205 : (22, 1)
2020-06-20 20:54:49,116 INFO sqlalchemy.engine.base.Engine Thread-204 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,134 INFO sqlalchemy.engine.base.Engine Thread-204 : (23, 1)
2020-06-20 20:54:49,134 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,137 INFO sqlalchemy.engine.base.Engine Thread-206 : (1, 1)
2020-06-20 20:54:49,136 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,137 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,136 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,139 DEBUG sqlalchemy.engine.base.Engine Thread-205 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:54:49,142 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-06-20 20:54:49,149 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,143 DEBUG sqlalchemy.engine.base.Engine Thread-204 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 20:54:49,151 INFO sqlalchemy.engine.base.Engine Thread-204 : ROLLBACK
2020-06-20 20:54:49,147 DEBUG sqlalchemy.engine.base.Engine Thread-203 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 20:54:49,143 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,149 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-06-20 20:54:49,150 INFO sqlalchemy.engine.base.Engine Thread-205 : ROLLBACK
2020-06-20 20:54:49,146 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-06-20 20:54:49,152 INFO sqlalchemy.engine.base.Engine Thread-203 : ROLLBACK
2020-06-20 20:54:49,153 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,155 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,167 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-06-20 20:54:49,155 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,169 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,170 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,172 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-06-20 20:54:49,172 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,173 INFO sqlalchemy.engine.base.Engine Thread-206 : (27, 1)
2020-06-20 20:54:49,175 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-06-20 20:54:49,188 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,187 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,189 INFO sqlalchemy.engine.base.Engine Thread-207 : (56, 1)
2020-06-20 20:54:49,188 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-06-20 20:54:49,190 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,189 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,187 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,190 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,182 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 20:54:49,191 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,192 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:49,202 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,229 INFO sqlalchemy.engine.base.Engine Thread-208 : (57, 1)
2020-06-20 20:54:49,226 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,227 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:49,229 INFO sqlalchemy.engine.base.Engine Thread-206 : ROLLBACK
2020-06-20 20:54:49,213 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-06-20 20:54:49,229 INFO sqlalchemy.engine.base.Engine Thread-210 : (30, 1)
2020-06-20 20:54:49,230 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-06-20 20:54:49,231 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 20:54:49,232 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 20:54:49,235 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 20:54:49,235 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 20:54:49,234 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:54:49,242 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-06-20 20:54:49,244 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:49,264 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-06-20 20:54:49,263 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 20:54:49,266 INFO sqlalchemy.engine.base.Engine Thread-209 : (31, 1)
2020-06-20 20:54:49,267 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 20:54:49,269 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 20:54:49,270 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-06-20 21:10:12,427 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:10:12,428 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:10:12,429 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:10:12,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:10:12,430 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:10:12,431 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:10:12,431 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:10:12,431 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:10:12,432 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:10:12,432 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:10:12,432 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:10:12,432 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:10:12,432 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:10:12,433 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:10:12,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:10:12,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:10:12,434 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:10:12,434 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:10:12,435 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:10:12,435 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:10:12,436 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:10:12,436 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:10:12,436 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:10:12,439 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:10:12,439 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:10:12,440 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:12,440 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:12,443 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:10:12,443 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:10:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:12,445 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:12,449 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:10:12,449 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-20 21:10:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:10:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:10:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:10:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:10:12,451 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:10:12,461 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:10:12,461 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 20, 21, 10, 12, 451526), datetime.datetime(2020, 7, 4, 21, 10, 12, 451526), datetime.datetime(2020, 6, 20, 21, 10, 12, 451526), datetime.datetime(2020, 7, 4, 21, 10, 12, 451526), datetime.datetime(2020, 6, 20, 21, 10, 12, 451526), datetime.datetime(2020, 7, 4, 21, 10, 12, 451526))
2020-06-20 21:10:12,462 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:10:12,462 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:10:12,548 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:10:12,548 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:10:12,549 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:12,549 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:12,552 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:10:12,855 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 21:10:12,856 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:10:12,856 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 21:10:12,857 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:12,858 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:12,868 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 21:10:13,009 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 21:10:13,010 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:10:13,010 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 21:10:13,011 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:13,011 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:13,012 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 21:10:13,017 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 21:10:13,019 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:10:13,019 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 21:10:13,021 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 21:10:13,023 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:10:13,023 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 21:10:13,027 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:13,027 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:13,028 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 21:10:13,029 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:13,029 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:13,030 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 21:10:13,031 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 21:10:13,032 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:10:13,032 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 21:10:13,033 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:13,034 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:13,035 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 21:10:15,055 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-20 21:10:15,056 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:10:15,056 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-20 21:10:15,056 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:15,056 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:15,059 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:10:15,059 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 21:10:15,059 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:15,060 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:10:15,062 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:10:15,062 INFO sqlalchemy.engine.base.Engine Thread-17 : ('56', 1)
2020-06-20 21:10:15,063 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:10:15,063 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:10:15,066 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:10:15,066 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-06-20 21:10:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:10:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:10:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:10:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:10:15,068 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:10:15,069 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-06-20 21:10:15,069 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:10:15,069 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:10:15,069 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:10:15,071 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:10:15,071 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-06-20 21:10:15,072 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:10:15,072 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:10:15,072 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:10:15,074 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:10:15,074 INFO sqlalchemy.engine.base.Engine Thread-17 : (127, 0)
2020-06-20 21:10:15,075 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:10:15,075 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:10:15,075 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:10:15,075 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:10:15,075 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:10:15,076 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:10:15,076 INFO sqlalchemy.engine.base.Engine Thread-17 : (92,)
2020-06-20 21:10:15,077 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:10:15,077 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:10:15,077 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:10:15,077 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:10:15,077 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:10:15,118 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:10:15,118 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 21:10:15,118 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:10:15,119 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:11:18,862 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-06-20 21:11:18,865 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-06-20 21:11:18,866 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:11:18,866 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-06-20 21:11:18,867 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:11:18,868 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:11:18,870 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:11:18,870 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-06-20 21:11:18,871 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:11:18,871 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:11:18,873 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:11:18,873 INFO sqlalchemy.engine.base.Engine Thread-24 : ('56', 1)
2020-06-20 21:11:18,873 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:11:18,873 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:11:18,876 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:11:18,876 INFO sqlalchemy.engine.base.Engine Thread-24 : (82,)
2020-06-20 21:11:18,877 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:18,877 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:11:18,877 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:11:18,877 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:11:18,879 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:11:18,879 INFO sqlalchemy.engine.base.Engine Thread-24 : (1,)
2020-06-20 21:11:18,880 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:18,880 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:11:18,880 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:11:18,881 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:11:18,881 INFO sqlalchemy.engine.base.Engine Thread-24 : ()
2020-06-20 21:11:18,882 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:11:18,882 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:11:18,882 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:11:18,884 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:11:18,884 INFO sqlalchemy.engine.base.Engine Thread-24 : (127, 0)
2020-06-20 21:11:18,884 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:18,885 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:11:18,885 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:11:18,885 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:11:18,885 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:11:18,887 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:11:18,887 INFO sqlalchemy.engine.base.Engine Thread-24 : (92,)
2020-06-20 21:11:18,887 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:18,887 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:11:18,888 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:11:18,888 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:11:18,888 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:11:18,926 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:11:18,926 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-06-20 21:11:18,927 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:11:18,927 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:11:52,125 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 21:11:52,126 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:11:52,126 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 21:11:52,127 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:11:52,127 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:11:52,129 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:11:52,130 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-06-20 21:11:52,130 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:11:52,130 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:11:52,132 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:11:52,132 INFO sqlalchemy.engine.base.Engine Thread-31 : ('56', 1)
2020-06-20 21:11:52,132 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:11:52,133 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:11:52,135 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:11:52,135 INFO sqlalchemy.engine.base.Engine Thread-31 : (82,)
2020-06-20 21:11:52,136 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:52,136 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:11:52,136 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:11:52,136 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:11:52,138 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:11:52,138 INFO sqlalchemy.engine.base.Engine Thread-31 : (1,)
2020-06-20 21:11:52,139 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:52,139 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:11:52,139 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:11:52,140 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:11:52,140 INFO sqlalchemy.engine.base.Engine Thread-31 : ()
2020-06-20 21:11:52,141 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:11:52,141 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:11:52,141 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:11:52,143 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:11:52,143 INFO sqlalchemy.engine.base.Engine Thread-31 : (127, 0)
2020-06-20 21:11:52,145 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:52,145 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:11:52,145 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:11:52,145 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:11:52,145 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:11:52,146 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:11:52,146 INFO sqlalchemy.engine.base.Engine Thread-31 : (92,)
2020-06-20 21:11:52,147 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:11:52,147 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:11:52,147 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:11:52,148 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:11:52,148 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:11:52,184 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:11:52,184 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-06-20 21:11:52,185 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:11:52,185 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:15,412 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-06-20 21:13:15,418 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-06-20 21:13:15,420 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:13:15,420 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-06-20 21:13:15,421 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:15,421 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:15,424 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:13:15,424 INFO sqlalchemy.engine.base.Engine Thread-38 : ('philip', 1, 1)
2020-06-20 21:13:15,425 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:15,425 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:15,427 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:13:15,427 INFO sqlalchemy.engine.base.Engine Thread-38 : ('56', 1)
2020-06-20 21:13:15,427 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:13:15,428 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:13:15,430 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:13:15,430 INFO sqlalchemy.engine.base.Engine Thread-38 : (82,)
2020-06-20 21:13:15,437 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:15,437 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:13:15,437 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:13:15,438 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:13:15,439 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:13:15,439 INFO sqlalchemy.engine.base.Engine Thread-38 : (1,)
2020-06-20 21:13:15,440 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:15,440 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:13:15,440 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:13:15,442 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:13:15,442 INFO sqlalchemy.engine.base.Engine Thread-38 : ()
2020-06-20 21:13:15,442 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:13:15,442 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:13:15,443 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:13:15,444 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:13:15,444 INFO sqlalchemy.engine.base.Engine Thread-38 : (127, 0)
2020-06-20 21:13:15,445 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:15,445 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:13:15,445 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:13:15,445 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:13:15,445 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:13:15,447 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:13:15,447 INFO sqlalchemy.engine.base.Engine Thread-38 : (92,)
2020-06-20 21:13:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:15,447 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:13:15,448 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:13:15,448 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:13:15,448 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:13:15,484 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:13:15,484 INFO sqlalchemy.engine.base.Engine Thread-38 : ('philip', 1, 1)
2020-06-20 21:13:15,493 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:15,493 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,145 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 21:13:30,148 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:13:30,148 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 21:13:30,149 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,149 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,151 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:13:30,151 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-06-20 21:13:30,152 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,152 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,154 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:13:30,154 INFO sqlalchemy.engine.base.Engine Thread-45 : ('56', 1)
2020-06-20 21:13:30,155 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:13:30,155 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:13:30,157 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:13:30,157 INFO sqlalchemy.engine.base.Engine Thread-45 : (82,)
2020-06-20 21:13:30,158 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:30,158 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:13:30,158 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:13:30,158 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:13:30,160 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:13:30,160 INFO sqlalchemy.engine.base.Engine Thread-45 : (1,)
2020-06-20 21:13:30,160 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:30,161 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:13:30,161 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:13:30,162 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:13:30,162 INFO sqlalchemy.engine.base.Engine Thread-45 : ()
2020-06-20 21:13:30,162 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:13:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:13:30,163 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:13:30,164 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:13:30,164 INFO sqlalchemy.engine.base.Engine Thread-45 : (127, 0)
2020-06-20 21:13:30,165 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:30,165 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:13:30,165 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:13:30,165 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:13:30,165 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:13:30,167 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:13:30,167 INFO sqlalchemy.engine.base.Engine Thread-45 : (92,)
2020-06-20 21:13:30,167 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:13:30,168 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:13:30,168 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:13:30,168 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:13:30,168 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:13:30,208 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:13:30,208 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-06-20 21:13:30,209 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,210 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,212 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 21:13:30,286 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 21:13:30,287 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 21:13:30,456 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-06-20 21:13:30,457 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:13:30,457 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-06-20 21:13:30,458 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,458 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,459 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-06-20 21:13:30,538 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-20 21:13:30,541 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-06-20 21:13:30,542 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:13:30,545 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-20 21:13:30,547 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:13:30,552 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-06-20 21:13:30,552 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:13:30,550 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-20 21:13:30,553 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 21:13:30,554 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,557 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,556 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:13:30,556 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,559 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,559 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-20 21:13:30,558 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 21:13:30,554 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-20 21:13:30,558 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-06-20 21:13:30,562 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,562 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,563 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:13:30,563 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:13:30,565 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 21:13:30,566 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-20 21:14:12,939 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:14:12,939 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:14:12,941 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:14:12,941 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:14:12,942 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:14:12,942 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:14:12,942 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:14:12,943 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:14:12,943 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:14:12,943 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:14:12,943 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:14:12,944 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:14:12,944 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:14:12,944 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:14:12,945 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:14:12,945 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:14:12,946 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:14:12,946 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:14:12,946 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:14:12,946 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:14:12,947 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:14:12,947 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:14:12,948 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:14:12,950 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:14:12,950 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:14:12,951 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:12,952 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:12,954 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:14:12,955 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:14:12,955 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:12,955 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:12,959 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:14:12,959 INFO sqlalchemy.engine.base.Engine Thread-2 : (132,)
2020-06-20 21:14:12,960 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:14:12,960 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:14:12,960 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:14:12,960 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:14:12,960 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:14:12,971 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:14:12,971 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 6, 20, 21, 14, 12, 961219), datetime.datetime(2020, 7, 4, 21, 14, 12, 961219), datetime.datetime(2020, 6, 20, 21, 14, 12, 961219), datetime.datetime(2020, 7, 4, 21, 14, 12, 961219), datetime.datetime(2020, 6, 20, 21, 14, 12, 961219), datetime.datetime(2020, 7, 4, 21, 14, 12, 961219))
2020-06-20 21:14:12,972 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:14:12,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:14:13,059 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:14:13,059 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:14:13,060 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:13,060 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:13,063 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:14:13,467 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 21:14:13,468 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:14:13,468 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 21:14:13,469 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:13,470 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:13,482 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 21:14:13,574 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 21:14:13,575 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:14:13,575 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 21:14:13,575 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:13,576 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:13,577 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 21:14:13,581 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 21:14:13,582 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:14:13,582 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 21:14:13,583 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:13,587 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 21:14:13,587 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:13,589 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:14:13,591 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 21:14:13,592 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 21:14:13,595 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:13,595 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:13,596 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 21:14:13,597 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 21:14:13,598 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:14:13,598 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 21:14:13,599 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:13,599 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:13,600 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 21:14:16,366 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-20 21:14:16,367 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:14:16,367 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-20 21:14:16,367 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:16,368 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:16,370 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:14:16,370 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 21:14:16,371 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:16,371 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:14:16,373 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:14:16,373 INFO sqlalchemy.engine.base.Engine Thread-17 : ('56', 1)
2020-06-20 21:14:16,374 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:14:16,375 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:14:16,377 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:14:16,377 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-06-20 21:14:16,378 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:14:16,378 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:14:16,378 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:14:16,378 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:14:16,379 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:14:16,380 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-06-20 21:14:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:14:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:14:16,380 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:14:16,383 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:14:16,383 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-06-20 21:14:16,384 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:14:16,384 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:14:16,384 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:14:16,386 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:14:16,386 INFO sqlalchemy.engine.base.Engine Thread-17 : (127, 0)
2020-06-20 21:14:16,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:14:16,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:14:16,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:14:16,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:14:16,387 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:14:16,389 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:14:16,389 INFO sqlalchemy.engine.base.Engine Thread-17 : (92,)
2020-06-20 21:14:16,389 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:14:16,389 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:14:16,389 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:14:16,389 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:14:16,390 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:14:16,430 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:14:16,430 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 21:14:16,431 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:14:16,431 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:15,334 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:18:15,334 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:15,335 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:18:15,336 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:18:15,337 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:18:15,337 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:15,337 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:18:15,337 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:18:15,338 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:18:15,338 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:15,338 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:18:15,338 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:18:15,338 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:18:15,338 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:15,339 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:18:15,339 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:18:15,340 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:18:15,340 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:15,340 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:18:15,340 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:15,341 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:18:15,341 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:15,342 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:18:15,345 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:18:15,345 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:18:15,346 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:15,346 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:15,349 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:18:15,349 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:18:15,350 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:15,350 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:15,353 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:18:15,353 INFO sqlalchemy.engine.base.Engine Thread-2 : ('56', 1)
2020-06-20 21:18:15,353 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:18:15,354 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:18:25,516 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:18:25,516 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,517 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:18:25,518 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:18:25,518 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:18:25,518 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,519 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:18:25,519 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:18:25,520 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:18:25,520 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:18:25,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:18:25,520 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:18:25,520 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:18:25,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:18:25,522 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:18:25,522 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,522 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:18:25,522 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,523 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:18:25,523 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,523 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:18:25,526 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:18:25,526 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:18:25,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:25,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:25,531 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:18:25,531 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:18:25,532 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:25,532 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:25,534 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:18:25,534 INFO sqlalchemy.engine.base.Engine Thread-2 : ('56', 1)
2020-06-20 21:18:25,535 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:18:25,535 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:18:25,539 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:18:25,539 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-06-20 21:18:25,539 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:18:25,540 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:18:25,540 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:18:25,540 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:18:25,541 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:18:25,541 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-06-20 21:18:25,542 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:18:25,542 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:18:25,542 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:18:25,544 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:18:25,544 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:18:25,546 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:18:25,546 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:18:25,546 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:18:25,548 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:18:25,548 INFO sqlalchemy.engine.base.Engine Thread-2 : (127, 0)
2020-06-20 21:18:25,549 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:18:25,549 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:18:25,549 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:18:25,549 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:18:25,549 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:18:25,550 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:18:25,550 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 21:18:25,551 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:18:25,551 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:18:25,551 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:18:25,552 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:18:25,552 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:18:25,651 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:18:25,651 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:18:25,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:25,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:25,656 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:18:25,899 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 21:18:25,900 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:18:25,900 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 21:18:25,900 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:25,901 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:25,912 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 21:18:26,013 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 21:18:26,014 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:18:26,014 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 21:18:26,015 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:26,015 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:26,016 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 21:18:26,020 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 21:18:26,023 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 21:18:26,026 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:18:26,028 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 21:18:26,024 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:18:26,028 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 21:18:26,029 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 21:18:26,030 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:18:26,030 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 21:18:26,031 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:26,032 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:26,032 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:26,031 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:18:26,032 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:26,033 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 21:18:26,034 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:18:26,035 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 21:18:26,036 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 21:19:45,711 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:19:45,711 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,712 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:19:45,712 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:19:45,713 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:19:45,713 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:19:45,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:19:45,714 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:19:45,714 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:19:45,715 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:19:45,715 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:19:45,715 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:19:45,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:19:45,717 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:19:45,717 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,717 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:19:45,717 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,718 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:19:45,718 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,718 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:19:45,721 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:19:45,721 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:19:45,722 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:45,722 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:45,725 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:19:45,725 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:19:45,726 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:45,726 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:45,729 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:19:45,729 INFO sqlalchemy.engine.base.Engine Thread-2 : ('56', 1)
2020-06-20 21:19:45,730 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:19:45,730 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:19:45,733 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:19:45,733 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-06-20 21:19:45,734 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:19:45,734 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:19:45,735 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:19:45,735 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:19:45,736 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:19:45,736 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-06-20 21:19:45,737 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:19:45,737 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:19:45,737 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:19:45,739 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:19:45,739 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:19:45,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:19:45,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:19:45,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:19:45,742 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:19:45,742 INFO sqlalchemy.engine.base.Engine Thread-2 : (127, 0)
2020-06-20 21:19:45,743 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:19:45,743 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:19:45,743 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:19:45,743 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:19:45,743 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:19:45,744 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:19:45,745 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 21:19:45,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:19:45,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:19:45,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:19:45,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:19:45,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:19:45,849 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:19:45,849 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:19:45,852 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:45,852 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:45,856 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:19:46,122 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 21:19:46,123 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:19:46,123 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 21:19:46,124 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:46,124 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:46,136 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 21:19:46,240 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 21:19:46,241 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:19:46,241 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 21:19:46,242 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:46,242 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:46,245 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 21:19:46,250 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 21:19:46,252 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:19:46,252 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 21:19:46,250 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 21:19:46,256 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:19:46,255 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 21:19:46,256 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 21:19:46,253 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:46,257 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:19:46,258 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:46,258 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:46,259 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:46,258 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 21:19:46,260 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 21:19:46,261 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 21:19:46,262 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:19:46,262 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:19:46,263 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 21:20:29,388 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-20 21:20:29,389 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:20:29,389 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-20 21:20:29,390 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,391 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,393 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:20:29,393 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 21:20:29,393 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,394 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,396 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:20:29,396 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-20 21:20:29,397 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:20:29,397 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:20:29,397 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:20:29,397 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:20:29,397 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:20:29,406 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:20:29,407 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 20, 21, 20, 29, 397977), datetime.datetime(2020, 7, 4, 21, 20, 29, 397977), datetime.datetime(2020, 6, 20, 21, 20, 29, 397977), datetime.datetime(2020, 7, 4, 21, 20, 29, 397977), datetime.datetime(2020, 6, 20, 21, 20, 29, 397977), datetime.datetime(2020, 7, 4, 21, 20, 29, 397977))
2020-06-20 21:20:29,407 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:20:29,408 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:20:29,426 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:20:29,426 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 21:20:29,427 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,427 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,429 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-20 21:20:29,676 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 21:20:29,678 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:20:29,678 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 21:20:29,678 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,679 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,680 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 21:20:29,761 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 21:20:29,762 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:20:29,763 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 21:20:29,766 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 21:20:29,767 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:20:29,767 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 21:20:29,768 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,768 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,768 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,769 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,772 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 21:20:29,776 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 21:20:29,777 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 21:20:29,778 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:20:29,779 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 21:20:29,779 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 21:20:29,780 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:20:29,780 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 21:20:29,782 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,782 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,783 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 21:20:29,784 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:20:29,785 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:20:29,786 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 21:21:25,846 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-20 21:21:25,847 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:25,847 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-20 21:21:25,848 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:25,849 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:25,851 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:25,851 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-20 21:21:25,852 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:25,852 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:25,854 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:21:25,854 INFO sqlalchemy.engine.base.Engine Thread-33 : ('56', 1)
2020-06-20 21:21:25,854 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:21:25,854 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:21:25,857 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:21:25,857 INFO sqlalchemy.engine.base.Engine Thread-33 : (82,)
2020-06-20 21:21:25,858 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:25,858 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:21:25,858 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:21:25,858 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:21:25,860 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:21:25,860 INFO sqlalchemy.engine.base.Engine Thread-33 : (1,)
2020-06-20 21:21:25,861 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:25,861 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:21:25,861 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:21:25,862 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:21:25,863 INFO sqlalchemy.engine.base.Engine Thread-33 : ()
2020-06-20 21:21:25,863 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:21:25,863 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:21:25,863 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:21:25,865 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:21:25,865 INFO sqlalchemy.engine.base.Engine Thread-33 : (127, 0)
2020-06-20 21:21:25,866 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:25,867 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:21:25,867 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:21:25,867 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:21:25,867 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:21:25,868 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:21:25,868 INFO sqlalchemy.engine.base.Engine Thread-33 : (92,)
2020-06-20 21:21:25,869 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:25,869 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:21:25,869 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:21:25,869 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:21:25,870 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:21:25,908 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:25,909 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-20 21:21:25,909 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:25,909 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:25,912 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-20 21:21:26,172 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-20 21:21:26,173 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:26,173 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-20 21:21:26,175 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:26,177 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 21:21:26,180 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 21:21:26,181 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:26,185 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-20 21:21:26,184 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:26,183 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:26,189 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 21:21:26,188 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 21:21:26,185 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 21:21:26,190 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:26,191 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:26,192 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 21:21:26,192 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:26,193 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 21:21:26,194 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:26,195 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:26,195 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:26,196 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:26,197 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 21:21:26,198 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 21:21:26,209 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 21:21:26,210 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:26,210 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 21:21:26,211 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:26,211 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:26,212 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 21:21:42,287 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-20 21:21:42,288 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:42,288 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-20 21:21:42,289 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,289 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,291 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:42,292 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-20 21:21:42,292 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,293 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,295 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:21:42,295 INFO sqlalchemy.engine.base.Engine Thread-48 : (132,)
2020-06-20 21:21:42,295 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:42,296 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:21:42,296 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:21:42,296 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:21:42,296 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:21:42,306 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:21:42,306 INFO sqlalchemy.engine.base.Engine Thread-48 : (datetime.datetime(2020, 6, 20, 21, 21, 42, 297218), datetime.datetime(2020, 7, 4, 21, 21, 42, 297218), datetime.datetime(2020, 6, 20, 21, 21, 42, 297218), datetime.datetime(2020, 7, 4, 21, 21, 42, 297218), datetime.datetime(2020, 6, 20, 21, 21, 42, 297218), datetime.datetime(2020, 7, 4, 21, 21, 42, 297218))
2020-06-20 21:21:42,307 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:21:42,307 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:21:42,311 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:42,312 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-20 21:21:42,312 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,313 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,315 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 21:21:42,566 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-20 21:21:42,568 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:42,568 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-20 21:21:42,569 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,569 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,570 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-20 21:21:42,649 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 21:21:42,650 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:42,651 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 21:21:42,651 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,652 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,655 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 21:21:42,663 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:42,659 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-20 21:21:42,662 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-20 21:21:42,657 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 21:21:42,663 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 21:21:42,665 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:42,666 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 21:21:42,666 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:42,666 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-20 21:21:42,667 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,667 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,668 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:42,669 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,669 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,668 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:42,673 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-20 21:21:42,672 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 21:21:42,671 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-20 21:21:44,362 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-20 21:21:44,363 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:44,363 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-20 21:21:44,364 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,364 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,367 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:44,367 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-20 21:21:44,368 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,368 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,369 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:21:44,369 INFO sqlalchemy.engine.base.Engine Thread-63 : ('56', 1)
2020-06-20 21:21:44,370 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:21:44,370 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:21:44,372 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:21:44,373 INFO sqlalchemy.engine.base.Engine Thread-63 : (82,)
2020-06-20 21:21:44,373 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:44,373 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:21:44,373 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:21:44,374 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:21:44,375 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:21:44,375 INFO sqlalchemy.engine.base.Engine Thread-63 : (1,)
2020-06-20 21:21:44,376 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:44,378 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:21:44,378 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:21:44,379 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:21:44,379 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-06-20 21:21:44,380 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:21:44,380 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:21:44,380 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:21:44,381 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:21:44,382 INFO sqlalchemy.engine.base.Engine Thread-63 : (127, 0)
2020-06-20 21:21:44,382 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:44,382 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:21:44,382 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:21:44,383 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:21:44,383 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:21:44,384 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:21:44,384 INFO sqlalchemy.engine.base.Engine Thread-63 : (92,)
2020-06-20 21:21:44,385 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:44,385 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:21:44,385 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:21:44,385 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:21:44,385 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:21:44,390 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:44,390 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-06-20 21:21:44,391 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,391 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,394 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-20 21:21:44,627 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-20 21:21:44,628 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:44,628 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-20 21:21:44,629 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,629 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,630 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-20 21:21:44,706 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-20 21:21:44,707 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:44,711 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-20 21:21:44,714 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-20 21:21:44,719 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:44,719 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-20 21:21:44,718 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:44,719 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-20 21:21:44,715 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-20 21:21:44,716 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-20 21:21:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,721 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:44,725 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-20 21:21:44,724 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-20 21:21:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,725 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-20 21:21:44,726 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:44,727 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,726 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:44,728 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-20 21:21:44,730 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-20 21:21:54,363 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-20 21:21:54,364 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:54,365 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-20 21:21:54,365 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,366 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,368 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:54,368 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-20 21:21:54,369 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,369 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,371 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:21:54,372 INFO sqlalchemy.engine.base.Engine Thread-78 : (132,)
2020-06-20 21:21:54,372 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:21:54,373 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:21:54,373 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:21:54,373 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:21:54,373 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:21:54,382 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:21:54,382 INFO sqlalchemy.engine.base.Engine Thread-78 : (datetime.datetime(2020, 6, 20, 21, 21, 54, 373652), datetime.datetime(2020, 7, 4, 21, 21, 54, 373652), datetime.datetime(2020, 6, 20, 21, 21, 54, 373652), datetime.datetime(2020, 7, 4, 21, 21, 54, 373652), datetime.datetime(2020, 6, 20, 21, 21, 54, 373652), datetime.datetime(2020, 7, 4, 21, 21, 54, 373652))
2020-06-20 21:21:54,383 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:21:54,383 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:21:54,387 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:21:54,387 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-20 21:21:54,388 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,388 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,390 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-20 21:21:54,644 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-20 21:21:54,645 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:54,645 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-20 21:21:54,645 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,646 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,647 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-20 21:21:54,727 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-20 21:21:54,728 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:54,728 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-20 21:21:54,731 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-20 21:21:54,732 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:54,733 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-20 21:21:54,735 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-20 21:21:54,736 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:54,736 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-20 21:21:54,737 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,737 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,740 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-20 21:21:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,742 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-20 21:21:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,743 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:21:54,745 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-20 21:21:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,747 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-20 21:21:54,747 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:21:54,749 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:21:54,750 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-20 21:21:54,748 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-20 21:28:00,705 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-20 21:28:00,707 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:00,707 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-20 21:28:00,709 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:00,709 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:00,712 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:28:00,712 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-20 21:28:00,713 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:00,713 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:00,714 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:28:00,715 INFO sqlalchemy.engine.base.Engine Thread-93 : ('56', 1)
2020-06-20 21:28:00,715 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:28:00,715 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:28:00,718 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:28:00,718 INFO sqlalchemy.engine.base.Engine Thread-93 : (82,)
2020-06-20 21:28:00,719 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:00,719 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:28:00,719 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:28:00,719 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:28:00,721 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:28:00,721 INFO sqlalchemy.engine.base.Engine Thread-93 : (1,)
2020-06-20 21:28:00,721 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:00,721 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:28:00,721 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:28:00,723 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:28:00,723 INFO sqlalchemy.engine.base.Engine Thread-93 : ()
2020-06-20 21:28:00,723 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:28:00,723 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:28:00,724 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:28:00,725 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:28:00,725 INFO sqlalchemy.engine.base.Engine Thread-93 : (127, 0)
2020-06-20 21:28:00,726 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:00,726 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:28:00,726 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:28:00,726 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:28:00,726 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:28:00,727 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:28:00,727 INFO sqlalchemy.engine.base.Engine Thread-93 : (92,)
2020-06-20 21:28:00,728 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:00,728 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:28:00,728 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:28:00,728 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:28:00,728 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:28:00,767 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:28:00,767 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-20 21:28:00,768 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:00,769 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:00,772 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-20 21:28:01,082 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-20 21:28:01,083 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:01,083 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-20 21:28:01,084 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:01,084 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:01,085 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-20 21:28:01,168 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-20 21:28:01,169 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:01,170 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-20 21:28:01,173 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:01,174 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-20 21:28:01,174 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:01,177 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:01,178 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-20 21:28:01,180 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-20 21:28:01,185 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:01,185 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-20 21:28:01,180 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-20 21:28:01,183 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-20 21:28:01,186 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:01,186 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:01,186 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-20 21:28:01,187 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:01,187 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:01,188 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:01,189 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-20 21:28:01,189 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:01,190 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:01,192 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-20 21:28:01,190 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-20 21:28:11,575 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-20 21:28:11,576 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:11,576 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-20 21:28:11,577 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:11,577 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:11,579 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:28:11,579 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-20 21:28:11,580 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:11,580 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:11,582 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:28:11,582 INFO sqlalchemy.engine.base.Engine Thread-108 : (132,)
2020-06-20 21:28:11,583 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:11,583 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:28:11,583 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:28:11,583 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:28:11,583 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:28:11,593 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:28:11,593 INFO sqlalchemy.engine.base.Engine Thread-108 : (datetime.datetime(2020, 6, 20, 21, 28, 11, 584016), datetime.datetime(2020, 7, 4, 21, 28, 11, 584016), datetime.datetime(2020, 6, 20, 21, 28, 11, 584016), datetime.datetime(2020, 7, 4, 21, 28, 11, 584016), datetime.datetime(2020, 6, 20, 21, 28, 11, 584016), datetime.datetime(2020, 7, 4, 21, 28, 11, 584016))
2020-06-20 21:28:11,594 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:28:11,594 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:28:11,598 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:28:11,598 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-20 21:28:11,599 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:11,599 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:11,601 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-20 21:28:12,906 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-20 21:28:12,907 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:12,907 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-20 21:28:12,907 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:12,908 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:12,909 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-20 21:28:14,888 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-20 21:28:14,890 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:14,890 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-20 21:28:14,893 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-20 21:28:14,893 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:14,896 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-20 21:28:14,897 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:14,899 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-20 21:28:14,898 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:14,899 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-20 21:28:14,897 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:14,900 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-20 21:28:14,899 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:14,901 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:14,901 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:14,903 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:14,903 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-20 21:28:14,905 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-20 21:28:14,936 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-20 21:28:14,937 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:14,937 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-20 21:28:14,938 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:14,938 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:14,939 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-20 21:28:20,424 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-20 21:28:20,425 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:20,425 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-20 21:28:20,426 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,426 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,428 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:28:20,428 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-06-20 21:28:20,428 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,429 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,430 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:28:20,430 INFO sqlalchemy.engine.base.Engine Thread-123 : ('56', 1)
2020-06-20 21:28:20,431 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:28:20,431 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:28:20,434 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:28:20,434 INFO sqlalchemy.engine.base.Engine Thread-123 : (82,)
2020-06-20 21:28:20,435 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:20,435 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:28:20,435 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:28:20,435 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:28:20,436 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:28:20,436 INFO sqlalchemy.engine.base.Engine Thread-123 : (1,)
2020-06-20 21:28:20,437 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:20,437 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:28:20,437 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:28:20,438 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:28:20,439 INFO sqlalchemy.engine.base.Engine Thread-123 : ()
2020-06-20 21:28:20,439 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:28:20,439 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:28:20,439 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:28:20,441 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:28:20,441 INFO sqlalchemy.engine.base.Engine Thread-123 : (127, 0)
2020-06-20 21:28:20,442 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:20,442 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:28:20,442 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:28:20,442 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:28:20,442 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:28:20,443 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:28:20,444 INFO sqlalchemy.engine.base.Engine Thread-123 : (92,)
2020-06-20 21:28:20,444 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:28:20,444 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:28:20,444 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:28:20,444 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:28:20,445 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:28:20,483 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:28:20,483 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-06-20 21:28:20,484 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,484 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,488 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-20 21:28:20,729 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-20 21:28:20,731 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:20,731 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-20 21:28:20,732 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,732 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,733 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-20 21:28:20,806 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-06-20 21:28:20,809 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-20 21:28:20,815 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:20,812 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:20,815 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-06-20 21:28:20,810 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-20 21:28:20,817 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-20 21:28:20,817 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-06-20 21:28:20,818 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:20,819 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-06-20 21:28:20,819 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:28:20,818 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,820 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-20 21:28:20,820 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,821 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,821 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,823 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,823 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-20 21:28:20,823 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:28:20,825 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,822 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:28:20,827 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-06-20 21:28:20,824 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-20 21:28:20,826 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-20 21:29:34,969 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:29:34,969 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,971 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:29:34,971 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:29:34,972 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:29:34,972 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,972 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:29:34,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:29:34,973 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:29:34,973 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:29:34,974 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:29:34,974 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:29:34,974 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:29:34,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:29:34,975 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:29:34,976 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,976 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:29:34,976 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,977 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:29:34,977 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,977 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:29:34,980 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:29:34,980 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:29:34,981 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:34,981 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:34,984 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:29:34,984 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:29:34,985 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:34,985 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:34,987 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:29:34,988 INFO sqlalchemy.engine.base.Engine Thread-2 : ('56', 1)
2020-06-20 21:29:34,988 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:29:34,989 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:29:34,992 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:29:34,992 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-06-20 21:29:34,993 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:29:34,993 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:29:34,993 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:29:34,993 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:29:34,995 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:29:34,995 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-06-20 21:29:34,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:29:34,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:29:34,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:29:34,998 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:29:34,998 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:29:34,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:29:34,999 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:29:34,999 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:29:35,000 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:29:35,000 INFO sqlalchemy.engine.base.Engine Thread-2 : (127, 0)
2020-06-20 21:29:35,001 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:29:35,001 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:29:35,001 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:29:35,001 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:29:35,001 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:29:35,003 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:29:35,003 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 21:29:35,003 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:29:35,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:29:35,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:29:35,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:29:35,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:29:35,105 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:29:35,105 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:29:35,106 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:35,106 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:35,110 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:29:35,383 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 21:29:35,385 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:29:35,385 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 21:29:35,385 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:35,386 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:35,397 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 21:29:35,439 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 21:29:35,440 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:29:35,445 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 21:29:35,446 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 21:29:35,450 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:29:35,450 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 21:29:35,450 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:35,451 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:35,451 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:35,451 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:35,452 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 21:29:35,453 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 21:29:35,454 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:29:35,455 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 21:29:35,454 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 21:29:35,455 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 21:29:35,457 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:35,458 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:29:35,458 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:35,458 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 21:29:35,459 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 21:29:35,460 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:29:35,461 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:29:35,462 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 21:30:03,506 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-20 21:30:03,507 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:03,508 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-20 21:30:03,508 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,509 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,511 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:30:03,511 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 21:30:03,512 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,512 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,514 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:30:03,514 INFO sqlalchemy.engine.base.Engine Thread-18 : (132,)
2020-06-20 21:30:03,515 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:30:03,515 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:30:03,515 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:30:03,515 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:30:03,515 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:30:03,525 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:30:03,525 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 6, 20, 21, 30, 3, 516000), datetime.datetime(2020, 7, 4, 21, 30, 3, 516000), datetime.datetime(2020, 6, 20, 21, 30, 3, 516000), datetime.datetime(2020, 7, 4, 21, 30, 3, 516000), datetime.datetime(2020, 6, 20, 21, 30, 3, 516000), datetime.datetime(2020, 7, 4, 21, 30, 3, 516000))
2020-06-20 21:30:03,526 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:30:03,526 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:30:03,543 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:30:03,544 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-06-20 21:30:03,544 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,544 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,546 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-20 21:30:03,797 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 21:30:03,798 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:03,798 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 21:30:03,799 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,800 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,801 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 21:30:03,858 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 21:30:03,861 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 21:30:03,863 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 21:30:03,864 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:03,867 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 21:30:03,868 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:03,869 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:03,869 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 21:30:03,871 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:03,871 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 21:30:03,871 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 21:30:03,872 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,872 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,872 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,871 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 21:30:03,873 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,873 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,874 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,875 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 21:30:03,875 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:03,878 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:03,877 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 21:30:03,878 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 21:30:03,876 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 21:30:31,027 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-20 21:30:31,028 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:31,028 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-20 21:30:31,029 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,029 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,032 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:30:31,032 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-20 21:30:31,032 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,033 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,034 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:30:31,034 INFO sqlalchemy.engine.base.Engine Thread-33 : ('56', 1)
2020-06-20 21:30:31,035 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:30:31,035 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:30:31,038 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:30:31,038 INFO sqlalchemy.engine.base.Engine Thread-33 : (82,)
2020-06-20 21:30:31,039 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:30:31,039 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:30:31,039 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:30:31,039 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:30:31,040 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:30:31,040 INFO sqlalchemy.engine.base.Engine Thread-33 : (1,)
2020-06-20 21:30:31,041 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:30:31,042 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:30:31,042 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:30:31,043 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:30:31,043 INFO sqlalchemy.engine.base.Engine Thread-33 : ()
2020-06-20 21:30:31,044 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:30:31,044 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:30:31,044 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:30:31,045 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:30:31,045 INFO sqlalchemy.engine.base.Engine Thread-33 : (127, 0)
2020-06-20 21:30:31,046 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:30:31,046 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:30:31,046 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:30:31,046 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:30:31,046 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:30:31,048 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:30:31,048 INFO sqlalchemy.engine.base.Engine Thread-33 : (92,)
2020-06-20 21:30:31,048 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:30:31,049 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:30:31,049 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:30:31,049 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:30:31,049 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:30:31,085 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:30:31,085 INFO sqlalchemy.engine.base.Engine Thread-33 : ('philip', 1, 1)
2020-06-20 21:30:31,086 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,086 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,089 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-20 21:30:31,390 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-20 21:30:31,391 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:31,391 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-20 21:30:31,392 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,392 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,393 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-20 21:30:31,446 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 21:30:31,447 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:31,448 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 21:30:31,450 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 21:30:31,451 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:31,451 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 21:30:31,452 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,452 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,458 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,455 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,458 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 21:30:31,455 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 21:30:31,459 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 21:30:31,460 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 21:30:31,461 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:31,462 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:30:31,464 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 21:30:31,464 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 21:30:31,465 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,465 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,466 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:30:31,466 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:30:31,467 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 21:30:31,468 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 21:31:03,568 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-20 21:31:03,569 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:31:03,569 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-20 21:31:03,570 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,570 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,572 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:31:03,572 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-20 21:31:03,573 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,573 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,576 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:31:03,576 INFO sqlalchemy.engine.base.Engine Thread-48 : (132,)
2020-06-20 21:31:03,576 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:31:03,577 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:31:03,577 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:31:03,577 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:31:03,577 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:31:03,586 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:31:03,586 INFO sqlalchemy.engine.base.Engine Thread-48 : (datetime.datetime(2020, 6, 20, 21, 31, 3, 577643), datetime.datetime(2020, 7, 4, 21, 31, 3, 577643), datetime.datetime(2020, 6, 20, 21, 31, 3, 577643), datetime.datetime(2020, 7, 4, 21, 31, 3, 577643), datetime.datetime(2020, 6, 20, 21, 31, 3, 577643), datetime.datetime(2020, 7, 4, 21, 31, 3, 577643))
2020-06-20 21:31:03,586 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:31:03,587 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:31:03,591 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:31:03,591 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-06-20 21:31:03,591 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,592 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,593 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 21:31:03,846 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-20 21:31:03,849 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 21:31:03,850 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:31:03,854 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 21:31:03,860 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:31:03,859 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-20 21:31:03,861 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:31:03,861 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 21:31:03,860 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 21:31:03,857 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:31:03,862 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 21:31:03,859 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-20 21:31:03,862 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,863 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,863 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,864 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 21:31:03,865 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,866 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,867 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-20 21:31:03,865 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,865 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,868 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-20 21:31:03,869 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,871 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 21:31:03,912 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-20 21:31:03,913 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:31:03,913 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-20 21:31:03,914 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:31:03,914 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:31:03,915 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-20 21:32:37,563 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:32:37,563 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,565 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:32:37,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:32:37,566 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:32:37,566 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:32:37,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:32:37,568 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:32:37,568 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,568 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:32:37,568 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:32:37,569 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:32:37,569 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,570 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:32:37,570 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:32:37,571 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:32:37,571 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,571 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:32:37,571 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,572 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:32:37,572 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,573 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:32:37,575 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:37,575 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:32:37,576 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:37,576 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:37,579 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:32:37,579 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:32:37,580 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:37,580 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:37,583 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:32:37,583 INFO sqlalchemy.engine.base.Engine Thread-2 : ('56', 1)
2020-06-20 21:32:37,585 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:32:37,586 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:32:37,589 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:32:37,589 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-06-20 21:32:37,590 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:37,590 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:32:37,590 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:32:37,590 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:32:37,592 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:32:37,592 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-06-20 21:32:37,592 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:37,593 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:32:37,593 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:32:37,595 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:32:37,595 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:32:37,596 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:32:37,596 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:32:37,596 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:32:37,597 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:32:37,597 INFO sqlalchemy.engine.base.Engine Thread-2 : (127, 0)
2020-06-20 21:32:37,598 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:37,598 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:32:37,598 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:32:37,598 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:32:37,599 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:32:37,600 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:32:37,600 INFO sqlalchemy.engine.base.Engine Thread-2 : (92,)
2020-06-20 21:32:37,601 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:37,601 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:32:37,601 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:32:37,601 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:32:37,601 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:32:37,704 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:32:37,704 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-06-20 21:32:37,705 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:37,705 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:37,709 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:32:38,003 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 21:32:38,004 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:38,004 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 21:32:38,005 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:38,005 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:38,017 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 21:32:38,101 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 21:32:38,102 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:38,106 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 21:32:38,107 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 21:32:38,107 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:38,111 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:38,112 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 21:32:38,111 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:38,111 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 21:32:38,112 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 21:32:38,115 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:38,114 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:38,115 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 21:32:38,115 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:38,116 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:38,116 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 21:32:38,113 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 21:32:38,117 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 21:32:38,118 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:38,120 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:38,118 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:38,121 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 21:32:38,121 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:38,123 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 21:32:42,581 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-20 21:32:42,583 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:42,583 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-20 21:32:42,584 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:42,584 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:42,586 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:32:42,586 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 21:32:42,593 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:42,593 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:42,595 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:32:42,595 INFO sqlalchemy.engine.base.Engine Thread-17 : ('56', 1)
2020-06-20 21:32:42,596 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:32:42,596 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:32:42,600 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:32:42,600 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-06-20 21:32:42,601 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:42,601 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:32:42,602 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:32:42,602 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:32:42,603 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:32:42,603 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-06-20 21:32:42,604 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:42,604 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:32:42,604 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:32:42,606 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:32:42,606 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-06-20 21:32:42,606 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:32:42,606 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:32:42,607 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:32:42,608 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:32:42,608 INFO sqlalchemy.engine.base.Engine Thread-17 : (127, 0)
2020-06-20 21:32:42,609 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:42,609 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:32:42,609 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:32:42,610 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:32:42,610 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:32:42,611 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:32:42,611 INFO sqlalchemy.engine.base.Engine Thread-17 : (92,)
2020-06-20 21:32:42,612 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:42,612 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:32:42,612 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:32:42,612 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:32:42,612 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:32:42,619 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:32:42,619 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-06-20 21:32:42,620 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:42,620 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:42,624 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-20 21:32:43,167 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-20 21:32:43,169 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:43,169 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-20 21:32:43,169 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:43,169 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:43,171 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-20 21:32:43,265 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 21:32:43,268 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 21:32:43,270 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:43,272 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:43,273 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 21:32:43,276 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 21:32:43,276 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 21:32:43,277 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 21:32:43,278 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:43,280 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 21:32:43,279 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:43,280 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:43,280 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:43,280 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:43,279 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:43,281 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:43,282 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 21:32:43,283 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 21:32:43,283 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 21:32:43,283 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:43,286 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 21:32:43,287 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:43,287 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:43,288 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 21:32:59,949 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 21:32:59,950 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:32:59,950 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 21:32:59,950 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:59,951 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:59,953 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:32:59,953 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-20 21:32:59,954 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:59,954 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:59,957 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:32:59,957 INFO sqlalchemy.engine.base.Engine Thread-32 : (132,)
2020-06-20 21:32:59,957 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:32:59,957 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:32:59,957 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:32:59,958 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:32:59,958 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:32:59,967 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:32:59,968 INFO sqlalchemy.engine.base.Engine Thread-32 : (datetime.datetime(2020, 6, 20, 21, 32, 59, 958323), datetime.datetime(2020, 7, 4, 21, 32, 59, 958323), datetime.datetime(2020, 6, 20, 21, 32, 59, 958323), datetime.datetime(2020, 7, 4, 21, 32, 59, 958323), datetime.datetime(2020, 6, 20, 21, 32, 59, 958323), datetime.datetime(2020, 7, 4, 21, 32, 59, 958323))
2020-06-20 21:32:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:32:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:32:59,987 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:32:59,987 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-06-20 21:32:59,988 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:32:59,988 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:32:59,990 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 21:33:00,242 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-20 21:33:00,243 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:33:00,243 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-06-20 21:33:00,244 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-20 21:33:00,245 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:33:00,245 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-20 21:33:00,246 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:33:00,246 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:33:00,247 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:33:00,248 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:33:00,250 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 21:33:00,253 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 21:33:00,254 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-20 21:33:00,255 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:33:00,257 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 21:33:00,257 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:33:00,256 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-20 21:33:00,258 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:33:00,258 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 21:33:00,259 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:33:00,261 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:33:00,262 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 21:33:00,262 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:33:00,265 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 21:33:00,299 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 21:33:00,300 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:33:00,300 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 21:33:00,301 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:33:00,301 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:33:00,302 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 21:34:10,901 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 21:34:10,902 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:10,902 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 21:34:10,903 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:10,903 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:10,905 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:10,906 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-06-20 21:34:10,906 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:10,906 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:10,908 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:34:10,908 INFO sqlalchemy.engine.base.Engine Thread-47 : ('56', 1)
2020-06-20 21:34:10,908 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:34:10,909 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:34:10,911 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:10,911 INFO sqlalchemy.engine.base.Engine Thread-47 : (82,)
2020-06-20 21:34:10,912 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:10,912 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:34:10,912 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:34:10,912 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:34:10,914 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:34:10,914 INFO sqlalchemy.engine.base.Engine Thread-47 : (1,)
2020-06-20 21:34:10,914 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:10,914 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:34:10,914 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:34:10,916 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:34:10,916 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-06-20 21:34:10,916 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:34:10,916 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:34:10,916 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:34:10,918 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:34:10,918 INFO sqlalchemy.engine.base.Engine Thread-47 : (127, 0)
2020-06-20 21:34:10,918 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:10,919 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:10,919 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:10,919 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:10,919 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:34:10,920 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:10,920 INFO sqlalchemy.engine.base.Engine Thread-47 : (92,)
2020-06-20 21:34:10,921 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:10,921 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:34:10,921 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:34:10,921 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:34:10,921 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:34:10,926 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:10,926 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-06-20 21:34:10,926 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:10,927 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:10,930 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 21:34:11,158 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-20 21:34:11,159 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:11,162 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-20 21:34:11,163 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-20 21:34:11,165 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 21:34:11,169 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:11,169 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 21:34:11,167 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:11,170 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-20 21:34:11,170 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:11,171 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:11,171 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:11,172 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:11,173 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 21:34:11,173 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:11,182 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:11,174 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-20 21:34:11,183 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-20 21:34:11,204 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 21:34:11,205 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:11,205 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 21:34:11,206 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:11,206 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:11,207 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 21:34:11,266 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-20 21:34:11,267 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:11,267 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 21:34:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:11,269 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-20 21:34:15,555 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-20 21:34:15,556 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:15,556 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-20 21:34:15,557 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,557 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,559 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:15,559 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-06-20 21:34:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,562 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:34:15,562 INFO sqlalchemy.engine.base.Engine Thread-62 : ('56', 1)
2020-06-20 21:34:15,563 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:34:15,563 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:34:15,566 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:15,566 INFO sqlalchemy.engine.base.Engine Thread-62 : (82,)
2020-06-20 21:34:15,567 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:15,567 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:34:15,567 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:34:15,567 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:34:15,568 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:34:15,568 INFO sqlalchemy.engine.base.Engine Thread-62 : (1,)
2020-06-20 21:34:15,569 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:15,569 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:34:15,569 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:34:15,570 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:34:15,570 INFO sqlalchemy.engine.base.Engine Thread-62 : ()
2020-06-20 21:34:15,571 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:34:15,571 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:34:15,571 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:34:15,572 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:34:15,573 INFO sqlalchemy.engine.base.Engine Thread-62 : (127, 0)
2020-06-20 21:34:15,573 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:15,573 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:15,573 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:15,574 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:15,574 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:34:15,575 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:15,575 INFO sqlalchemy.engine.base.Engine Thread-62 : (92,)
2020-06-20 21:34:15,575 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:15,576 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:34:15,576 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:34:15,576 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:34:15,576 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:34:15,581 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:15,581 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-06-20 21:34:15,581 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,581 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,585 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-20 21:34:15,840 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-20 21:34:15,841 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:15,841 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-20 21:34:15,841 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,842 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,846 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-20 21:34:15,847 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:15,847 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-20 21:34:15,847 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,851 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,850 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-20 21:34:15,853 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:15,852 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-20 21:34:15,853 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-20 21:34:15,855 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-20 21:34:15,859 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-20 21:34:15,860 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:15,860 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-20 21:34:15,861 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,862 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,862 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,862 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,864 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-20 21:34:15,865 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-20 21:34:15,894 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-20 21:34:15,895 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:15,895 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-20 21:34:15,896 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:15,896 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:15,897 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-20 21:34:24,173 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-20 21:34:24,174 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:24,174 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-20 21:34:24,175 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,175 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,177 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:24,177 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-06-20 21:34:24,178 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,178 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,180 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:34:24,180 INFO sqlalchemy.engine.base.Engine Thread-77 : ('56', 1)
2020-06-20 21:34:24,181 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:34:24,181 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, None)
2020-06-20 21:34:24,186 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:24,186 INFO sqlalchemy.engine.base.Engine Thread-77 : (82,)
2020-06-20 21:34:24,187 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:24,187 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:34:24,187 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:34:24,187 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:34:24,188 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:34:24,188 INFO sqlalchemy.engine.base.Engine Thread-77 : (1,)
2020-06-20 21:34:24,189 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:24,189 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:34:24,189 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:34:24,190 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:34:24,190 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-06-20 21:34:24,191 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:34:24,191 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:34:24,191 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:34:24,193 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:34:24,193 INFO sqlalchemy.engine.base.Engine Thread-77 : (127, 0)
2020-06-20 21:34:24,194 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:24,194 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:24,194 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:24,194 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:24,194 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:34:24,195 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:24,195 INFO sqlalchemy.engine.base.Engine Thread-77 : (92,)
2020-06-20 21:34:24,196 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:24,196 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:34:24,196 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:34:24,196 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:34:24,196 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:34:24,199 INFO sqlalchemy.engine.base.Engine Thread-77 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_change_ref=%s WHERE datesofinterest.id = %s
2020-06-20 21:34:24,199 INFO sqlalchemy.engine.base.Engine Thread-77 : ('56', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'SCR123456', 56)
2020-06-20 21:34:24,200 INFO sqlalchemy.engine.base.Engine Thread-77 : COMMIT
2020-06-20 21:34:24,253 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-20 21:34:24,254 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:24,254 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-20 21:34:24,255 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,255 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,257 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:24,257 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-20 21:34:24,258 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,258 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,261 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:24,261 INFO sqlalchemy.engine.base.Engine Thread-78 : (132,)
2020-06-20 21:34:24,262 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:24,262 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:34:24,262 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:34:24,262 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:34:24,262 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:34:24,272 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:34:24,272 INFO sqlalchemy.engine.base.Engine Thread-78 : (datetime.datetime(2020, 6, 20, 21, 34, 24, 262860), datetime.datetime(2020, 7, 4, 21, 34, 24, 262860), datetime.datetime(2020, 6, 20, 21, 34, 24, 262860), datetime.datetime(2020, 7, 4, 21, 34, 24, 262860), datetime.datetime(2020, 6, 20, 21, 34, 24, 262860), datetime.datetime(2020, 7, 4, 21, 34, 24, 262860))
2020-06-20 21:34:24,273 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:34:24,273 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:34:24,277 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:24,278 INFO sqlalchemy.engine.base.Engine Thread-78 : ('philip', 1, 1)
2020-06-20 21:34:24,278 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,278 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,282 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-20 21:34:24,540 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-20 21:34:24,541 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:24,541 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-20 21:34:24,542 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,542 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,543 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-20 21:34:24,616 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-20 21:34:24,618 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-20 21:34:24,620 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-20 21:34:24,623 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-20 21:34:24,624 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:24,625 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:24,627 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:24,628 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:24,628 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-20 21:34:24,628 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-20 21:34:24,629 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,628 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-20 21:34:24,628 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-20 21:34:24,630 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,630 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,630 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,631 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,632 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,632 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:24,635 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:24,634 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-20 21:34:24,635 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-20 21:34:24,633 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-20 21:34:24,636 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-20 21:34:27,022 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-20 21:34:27,024 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:27,024 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-20 21:34:27,025 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,025 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,028 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:27,028 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-20 21:34:27,028 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,029 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,030 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 21:34:27,030 INFO sqlalchemy.engine.base.Engine Thread-93 : ('56', 1)
2020-06-20 21:34:27,031 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 21:34:27,031 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456')
2020-06-20 21:34:27,033 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:27,033 INFO sqlalchemy.engine.base.Engine Thread-93 : (82,)
2020-06-20 21:34:27,034 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:27,034 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:34:27,034 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 21:34:27,034 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 21:34:27,035 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 21:34:27,036 INFO sqlalchemy.engine.base.Engine Thread-93 : (1,)
2020-06-20 21:34:27,036 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:27,036 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 21:34:27,036 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 21:34:27,038 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 21:34:27,038 INFO sqlalchemy.engine.base.Engine Thread-93 : ()
2020-06-20 21:34:27,038 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:34:27,038 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:34:27,038 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:34:27,040 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 21:34:27,040 INFO sqlalchemy.engine.base.Engine Thread-93 : (127, 0)
2020-06-20 21:34:27,041 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:27,041 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:27,041 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:27,041 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 21:34:27,041 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 21:34:27,042 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:27,042 INFO sqlalchemy.engine.base.Engine Thread-93 : (92,)
2020-06-20 21:34:27,043 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:27,043 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 21:34:27,043 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 21:34:27,043 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 21:34:27,043 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 21:34:27,048 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:27,048 INFO sqlalchemy.engine.base.Engine Thread-93 : ('philip', 1, 1)
2020-06-20 21:34:27,049 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,049 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,052 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-20 21:34:27,282 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-20 21:34:27,283 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:27,283 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-20 21:34:27,284 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,284 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,286 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-20 21:34:27,357 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-20 21:34:27,358 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-20 21:34:27,359 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:27,366 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-20 21:34:27,365 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:27,366 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-20 21:34:27,363 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-20 21:34:27,366 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,370 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,369 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:27,370 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-20 21:34:27,368 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-20 21:34:27,373 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:27,371 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,374 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,373 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-20 21:34:27,371 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,375 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,375 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-20 21:34:27,372 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-20 21:34:27,376 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:27,377 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-20 21:34:27,379 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:27,380 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-20 21:34:30,238 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-20 21:34:30,239 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:30,239 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-06-20 21:34:30,240 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,240 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,243 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:30,243 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-20 21:34:30,244 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,244 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,246 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:34:30,246 INFO sqlalchemy.engine.base.Engine Thread-108 : (132,)
2020-06-20 21:34:30,247 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:34:30,247 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 21:34:30,247 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 21:34:30,247 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 21:34:30,247 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 21:34:30,256 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:34:30,256 INFO sqlalchemy.engine.base.Engine Thread-108 : (datetime.datetime(2020, 6, 20, 21, 34, 30, 248131), datetime.datetime(2020, 7, 4, 21, 34, 30, 248131), datetime.datetime(2020, 6, 20, 21, 34, 30, 248131), datetime.datetime(2020, 7, 4, 21, 34, 30, 248131), datetime.datetime(2020, 6, 20, 21, 34, 30, 248131), datetime.datetime(2020, 7, 4, 21, 34, 30, 248131))
2020-06-20 21:34:30,257 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 21:34:30,257 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 21:34:30,262 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:34:30,262 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-06-20 21:34:30,262 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,262 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,265 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-20 21:34:30,505 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-20 21:34:30,506 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:30,506 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-20 21:34:30,507 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,507 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,508 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-20 21:34:30,567 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-20 21:34:30,568 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:30,568 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-20 21:34:30,569 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,569 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,570 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-20 21:34:30,573 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-20 21:34:30,576 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:30,576 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-20 21:34:30,577 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,580 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-20 21:34:30,581 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-20 21:34:30,582 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,585 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-20 21:34:30,584 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:30,583 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:34:30,585 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-20 21:34:30,586 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-20 21:34:30,587 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,588 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,588 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:34:30,589 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:34:30,590 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-20 21:34:30,590 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-20 21:35:06,279 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-06-20 21:35:06,286 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:35:06,286 INFO sqlalchemy.engine.base.Engine Thread-123 : ()
2020-06-20 21:35:06,288 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:35:06,289 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:35:06,289 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:35:06,290 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:35:06,290 INFO sqlalchemy.engine.base.Engine Thread-123 : (100,)
2020-06-20 21:35:06,291 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:35:06,291 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 21:35:06,291 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 21:35:06,291 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 21:35:06,292 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 21:35:06,292 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 21:35:06,294 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:06,294 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-06-20 21:35:06,295 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:06,295 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:06,306 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:35:06,306 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-06-20 21:35:06,307 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:06,307 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:06,308 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-06-20 21:35:06,745 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-20 21:35:06,746 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:06,746 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-20 21:35:06,747 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:06,747 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:06,748 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-20 21:35:06,865 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-06-20 21:35:06,866 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:06,866 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-06-20 21:35:06,867 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:06,867 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:06,868 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-06-20 21:35:06,871 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-20 21:35:06,872 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:06,872 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-06-20 21:35:06,873 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:06,874 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:06,876 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-20 21:35:06,879 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-20 21:35:06,880 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:06,882 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-06-20 21:35:06,883 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-20 21:35:06,885 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:06,885 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-20 21:35:06,886 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:06,886 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:06,887 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:06,887 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:06,888 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-20 21:35:06,889 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-20 21:35:08,586 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-06-20 21:35:08,588 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 21:35:08,588 INFO sqlalchemy.engine.base.Engine Thread-138 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 21:35:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 21:35:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 21:35:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 21:35:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 21:35:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:08,598 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 21:35:08,598 INFO sqlalchemy.engine.base.Engine Thread-138 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:08,599 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:08,599 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 21:35:08,605 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 21:35:08,605 INFO sqlalchemy.engine.base.Engine Thread-138 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:08,606 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:08,606 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 21:35:08,607 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-06-20 21:35:08,670 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-06-20 21:35:08,672 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 21:35:08,672 INFO sqlalchemy.engine.base.Engine Thread-139 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:08,674 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 21:35:08,674 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 21:35:08,674 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 21:35:08,674 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 21:35:08,674 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 21:35:08,675 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:08,675 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:08,675 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:08,675 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:08,675 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:08,680 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 21:35:08,680 INFO sqlalchemy.engine.base.Engine Thread-139 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:08,681 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:08,681 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 21:35:08,686 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 21:35:08,686 INFO sqlalchemy.engine.base.Engine Thread-139 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:08,687 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:08,688 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 21:35:08,689 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-06-20 21:35:08,786 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-06-20 21:35:08,788 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:08,791 INFO sqlalchemy.engine.base.Engine Thread-140 : (1, 1)
2020-06-20 21:35:08,790 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-06-20 21:35:08,792 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:08,793 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:08,793 INFO sqlalchemy.engine.base.Engine Thread-141 : (1, 1)
2020-06-20 21:35:08,795 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-06-20 21:35:08,796 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:08,797 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:08,800 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-06-20 21:35:08,803 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:08,811 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-06-20 21:35:08,813 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:08,822 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-06-20 21:35:08,822 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:08,823 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-06-20 21:35:08,827 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:08,827 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-06-20 21:35:08,824 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-06-20 21:35:08,823 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:08,826 INFO sqlalchemy.engine.base.Engine Thread-140 : (15, 1)
2020-06-20 21:35:08,825 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:08,839 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-06-20 21:35:08,827 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:08,828 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:08,825 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:08,840 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:08,842 INFO sqlalchemy.engine.base.Engine Thread-141 : (19, 1)
2020-06-20 21:35:08,841 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:08,846 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, None, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:35:08,841 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:08,842 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:08,840 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:08,864 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:08,841 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:08,864 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:08,912 INFO sqlalchemy.engine.base.Engine Thread-143 : (21, 1)
2020-06-20 21:35:08,887 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:08,919 INFO sqlalchemy.engine.base.Engine Thread-142 : (20, 1)
2020-06-20 21:35:08,893 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:08,919 INFO sqlalchemy.engine.base.Engine Thread-144 : (22, 1)
2020-06-20 21:35:08,846 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:08,920 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, None, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:35:08,900 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:08,921 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:08,921 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:08,922 INFO sqlalchemy.engine.base.Engine Thread-145 : (23, 1)
2020-06-20 21:35:08,930 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:35:08,942 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-06-20 21:35:08,943 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:08,944 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:08,949 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-06-20 21:35:08,950 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-06-20 21:35:08,951 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, None, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:35:08,953 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-06-20 21:35:08,955 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-06-20 21:35:08,958 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:08,959 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:35:08,960 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-06-20 21:35:09,027 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-06-20 21:35:09,029 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-06-20 21:35:09,031 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-06-20 21:35:09,033 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:09,035 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-06-20 21:35:09,037 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:09,042 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-06-20 21:35:09,040 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:09,042 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-06-20 21:35:09,041 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-06-20 21:35:09,039 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-06-20 21:35:09,044 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:09,044 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-06-20 21:35:09,043 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:09,043 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:09,042 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:09,045 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:09,045 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:09,046 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:09,048 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:09,048 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-06-20 21:35:09,049 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:09,060 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:09,076 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 21:35:09,097 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:09,103 INFO sqlalchemy.engine.base.Engine Thread-147 : (31, 1)
2020-06-20 21:35:09,108 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:09,127 INFO sqlalchemy.engine.base.Engine Thread-148 : (27, 1)
2020-06-20 21:35:09,114 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:09,125 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:09,133 INFO sqlalchemy.engine.base.Engine Thread-146 : (56, 1)
2020-06-20 21:35:09,126 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 21:35:09,138 INFO sqlalchemy.engine.base.Engine Thread-150 : (30, 1)
2020-06-20 21:35:09,139 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:09,140 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:09,141 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 21:35:09,145 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:35:09,146 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:09,146 INFO sqlalchemy.engine.base.Engine Thread-149 : (57, 1)
2020-06-20 21:35:09,147 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 21:35:09,148 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-06-20 21:35:09,148 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:09,149 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-06-20 21:35:09,184 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:09,187 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:35:09,189 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:09,191 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:09,194 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-06-20 21:35:09,193 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-06-20 21:35:09,195 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-06-20 21:35:21,663 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-06-20 21:35:21,664 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:21,665 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-06-20 21:35:21,665 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:21,665 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:21,672 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 21:35:21,672 INFO sqlalchemy.engine.base.Engine Thread-151 : (datetime.datetime(2020, 7, 3, 0, 0), datetime.datetime(2020, 7, 3, 23, 59), datetime.datetime(2020, 7, 3, 0, 0), datetime.datetime(2020, 7, 3, 23, 59), datetime.datetime(2020, 7, 3, 0, 0), datetime.datetime(2020, 7, 3, 23, 59))
2020-06-20 21:35:21,673 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-20 21:35:21,693 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-06-20 21:35:47,496 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-06-20 21:35:47,498 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:35:47,498 INFO sqlalchemy.engine.base.Engine Thread-152 : ()
2020-06-20 21:35:47,500 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:35:47,500 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:35:47,501 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:35:47,502 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:35:47,502 INFO sqlalchemy.engine.base.Engine Thread-152 : (100,)
2020-06-20 21:35:47,503 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:35:47,503 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 21:35:47,503 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 21:35:47,503 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 21:35:47,503 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 21:35:47,503 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 21:35:47,506 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:47,506 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-06-20 21:35:47,506 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:47,507 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:47,512 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:35:47,512 INFO sqlalchemy.engine.base.Engine Thread-152 : ('philip', 1, 1)
2020-06-20 21:35:47,512 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:47,513 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:47,514 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-06-20 21:35:47,933 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-06-20 21:35:47,934 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:47,934 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-06-20 21:35:47,935 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:47,935 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:47,936 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-06-20 21:35:48,066 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-06-20 21:35:48,068 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:48,068 INFO sqlalchemy.engine.base.Engine Thread-163 : (1, 1)
2020-06-20 21:35:48,070 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-06-20 21:35:48,073 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-06-20 21:35:48,073 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:48,077 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:48,075 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:48,078 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-06-20 21:35:48,078 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-06-20 21:35:48,077 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:48,082 INFO sqlalchemy.engine.base.Engine Thread-165 : (1, 1)
2020-06-20 21:35:48,081 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-06-20 21:35:48,083 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:48,083 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:48,084 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:48,084 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-06-20 21:35:48,084 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:48,086 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:48,085 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-06-20 21:35:48,086 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:48,087 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:48,088 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-06-20 21:35:48,087 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-06-20 21:35:49,342 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-06-20 21:35:49,344 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 21:35:49,344 INFO sqlalchemy.engine.base.Engine Thread-167 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:49,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:49,347 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:49,347 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:49,351 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 21:35:49,351 INFO sqlalchemy.engine.base.Engine Thread-167 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:49,352 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:49,353 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 21:35:49,357 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 21:35:49,357 INFO sqlalchemy.engine.base.Engine Thread-167 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:49,358 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:49,358 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 21:35:49,359 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-06-20 21:35:49,426 INFO sqlalchemy.engine.base.Engine Thread-169 : BEGIN (implicit)
2020-06-20 21:35:49,428 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 21:35:49,428 INFO sqlalchemy.engine.base.Engine Thread-169 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:49,430 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 21:35:49,430 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 21:35:49,430 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 21:35:49,430 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 21:35:49,430 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 21:35:49,430 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:49,430 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:35:49,431 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:49,431 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:49,431 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:35:49,437 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 21:35:49,437 INFO sqlalchemy.engine.base.Engine Thread-169 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:49,438 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:49,438 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 21:35:49,442 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 21:35:49,443 INFO sqlalchemy.engine.base.Engine Thread-169 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:35:49,443 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:35:49,444 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 21:35:49,445 INFO sqlalchemy.engine.base.Engine Thread-169 : ROLLBACK
2020-06-20 21:35:49,560 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-06-20 21:35:49,562 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,562 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-06-20 21:35:49,564 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-06-20 21:35:49,565 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,568 INFO sqlalchemy.engine.base.Engine Thread-171 : (1, 1)
2020-06-20 21:35:49,568 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-06-20 21:35:49,569 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,571 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-06-20 21:35:49,573 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,577 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-06-20 21:35:49,573 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,575 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,578 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-06-20 21:35:49,577 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,573 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,577 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-06-20 21:35:49,598 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,599 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-06-20 21:35:49,578 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,598 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,605 INFO sqlalchemy.engine.base.Engine Thread-170 : (15, 1)
2020-06-20 21:35:49,599 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,597 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-06-20 21:35:49,599 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,608 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,622 INFO sqlalchemy.engine.base.Engine Thread-171 : (19, 1)
2020-06-20 21:35:49,608 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,622 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,621 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,628 INFO sqlalchemy.engine.base.Engine Thread-172 : (20, 1)
2020-06-20 21:35:49,622 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,619 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,620 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,638 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,648 INFO sqlalchemy.engine.base.Engine Thread-173 : (21, 1)
2020-06-20 21:35:49,640 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, None, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:35:49,647 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,649 INFO sqlalchemy.engine.base.Engine Thread-174 : (22, 1)
2020-06-20 21:35:49,648 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-06-20 21:35:49,648 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,651 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, None, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:35:49,649 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,639 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,652 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,658 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,664 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, None, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:35:49,694 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-06-20 21:35:49,691 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,692 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-06-20 21:35:49,693 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:35:49,681 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:49,711 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,711 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-06-20 21:35:49,714 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-06-20 21:35:49,714 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-06-20 21:35:49,715 INFO sqlalchemy.engine.base.Engine Thread-175 : (23, 1)
2020-06-20 21:35:49,718 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,719 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:35:49,720 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-06-20 21:35:49,792 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-06-20 21:35:49,793 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,795 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-06-20 21:35:49,796 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-06-20 21:35:49,798 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-06-20 21:35:49,799 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,807 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-06-20 21:35:49,805 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-06-20 21:35:49,805 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,809 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,802 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-06-20 21:35:49,808 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,821 INFO sqlalchemy.engine.base.Engine Thread-180 : (1, 1)
2020-06-20 21:35:49,806 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,820 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,821 INFO sqlalchemy.engine.base.Engine Thread-176 : (27, 1)
2020-06-20 21:35:49,808 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,822 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,821 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-06-20 21:35:49,821 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:49,833 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,835 INFO sqlalchemy.engine.base.Engine Thread-177 : (56, 1)
2020-06-20 21:35:49,834 INFO sqlalchemy.engine.base.Engine Thread-179 : (1, 1)
2020-06-20 21:35:49,834 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,837 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:49,834 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,839 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,836 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,838 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-06-20 21:35:49,835 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:49,836 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,851 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,864 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,865 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:49,867 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:49,878 INFO sqlalchemy.engine.base.Engine Thread-180 : (30, 1)
2020-06-20 21:35:49,899 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,905 INFO sqlalchemy.engine.base.Engine Thread-179 : (31, 1)
2020-06-20 21:35:49,906 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-06-20 21:35:49,907 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 21:35:49,907 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:35:49,911 INFO sqlalchemy.engine.base.Engine Thread-178 : (57, 1)
2020-06-20 21:35:49,910 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:35:49,908 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 21:35:49,912 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-06-20 21:35:49,915 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:35:49,916 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:49,917 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-06-20 21:35:49,914 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:35:49,919 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-06-20 21:35:59,207 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-06-20 21:35:59,208 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:59,208 INFO sqlalchemy.engine.base.Engine Thread-181 : (1, 1)
2020-06-20 21:35:59,209 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:59,210 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:59,218 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:35:59,218 INFO sqlalchemy.engine.base.Engine Thread-181 : (56,)
2020-06-20 21:35:59,219 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:35:59,220 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:35:59,221 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-06-20 21:35:59,233 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-06-20 21:35:59,234 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:35:59,234 INFO sqlalchemy.engine.base.Engine Thread-182 : (1, 1)
2020-06-20 21:35:59,235 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:35:59,235 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:35:59,239 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:35:59,239 INFO sqlalchemy.engine.base.Engine Thread-182 : (56,)
2020-06-20 21:35:59,239 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-20 21:35:59,240 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131)
2020-06-20 21:35:59,244 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:35:59,244 INFO sqlalchemy.engine.base.Engine Thread-182 : (56,)
2020-06-20 21:35:59,244 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:35:59,246 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:35:59,247 INFO sqlalchemy.engine.base.Engine Thread-182 : ()
2020-06-20 21:35:59,247 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:35:59,247 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:35:59,247 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:35:59,251 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:35:59,251 INFO sqlalchemy.engine.base.Engine Thread-182 : ()
2020-06-20 21:35:59,252 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:35:59,252 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:35:59,252 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:35:59,255 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:35:59,255 INFO sqlalchemy.engine.base.Engine Thread-182 : (56,)
2020-06-20 21:35:59,255 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:35:59,256 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:35:59,257 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:35:59,257 INFO sqlalchemy.engine.base.Engine Thread-182 : (1,)
2020-06-20 21:35:59,257 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexgroups_1_group_members',)
2020-06-20 21:35:59,257 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row ('1',)
2020-06-20 21:35:59,265 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:35:59,265 INFO sqlalchemy.engine.base.Engine Thread-182 : ('1',)
2020-06-20 21:35:59,266 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:35:59,266 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:35:59,267 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:35:59,267 INFO sqlalchemy.engine.base.Engine Thread-182 : (1, 1)
2020-06-20 21:35:59,268 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:35:59,268 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (5,)
2020-06-20 21:35:59,285 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-06-20 21:36:10,579 INFO sqlalchemy.engine.base.Engine Thread-183 : BEGIN (implicit)
2020-06-20 21:36:10,581 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:36:10,581 INFO sqlalchemy.engine.base.Engine Thread-183 : (1, 1)
2020-06-20 21:36:10,581 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:36:10,582 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:36:10,590 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:36:10,590 INFO sqlalchemy.engine.base.Engine Thread-183 : (57,)
2020-06-20 21:36:10,591 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:36:10,591 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:36:10,593 INFO sqlalchemy.engine.base.Engine Thread-183 : ROLLBACK
2020-06-20 21:36:10,609 INFO sqlalchemy.engine.base.Engine Thread-184 : BEGIN (implicit)
2020-06-20 21:36:10,610 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:36:10,610 INFO sqlalchemy.engine.base.Engine Thread-184 : (1, 1)
2020-06-20 21:36:10,611 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:36:10,611 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:36:10,615 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:36:10,615 INFO sqlalchemy.engine.base.Engine Thread-184 : (57,)
2020-06-20 21:36:10,615 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-20 21:36:10,615 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131)
2020-06-20 21:36:10,620 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:36:10,620 INFO sqlalchemy.engine.base.Engine Thread-184 : (57,)
2020-06-20 21:36:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:36:10,622 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:36:10,623 INFO sqlalchemy.engine.base.Engine Thread-184 : ()
2020-06-20 21:36:10,623 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:36:10,623 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:36:10,623 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:36:10,627 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:36:10,627 INFO sqlalchemy.engine.base.Engine Thread-184 : ()
2020-06-20 21:36:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:36:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:36:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:36:10,632 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:36:10,632 INFO sqlalchemy.engine.base.Engine Thread-184 : (57,)
2020-06-20 21:36:10,632 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:36:10,632 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:36:10,634 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:36:10,634 INFO sqlalchemy.engine.base.Engine Thread-184 : (1,)
2020-06-20 21:36:10,634 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexgroups_1_group_members',)
2020-06-20 21:36:10,634 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row ('1',)
2020-06-20 21:36:10,640 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:36:10,640 INFO sqlalchemy.engine.base.Engine Thread-184 : ('1',)
2020-06-20 21:36:10,640 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:36:10,640 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:36:10,642 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:36:10,642 INFO sqlalchemy.engine.base.Engine Thread-184 : (1, 1)
2020-06-20 21:36:10,642 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:36:10,642 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (5,)
2020-06-20 21:36:10,643 INFO sqlalchemy.engine.base.Engine Thread-184 : ROLLBACK
2020-06-20 21:37:33,793 INFO sqlalchemy.engine.base.Engine Thread-185 : BEGIN (implicit)
2020-06-20 21:37:33,794 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:37:33,794 INFO sqlalchemy.engine.base.Engine Thread-185 : (1, 1)
2020-06-20 21:37:33,796 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:37:33,796 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:37:33,804 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:37:33,805 INFO sqlalchemy.engine.base.Engine Thread-185 : (27,)
2020-06-20 21:37:33,805 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:37:33,806 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:37:33,807 INFO sqlalchemy.engine.base.Engine Thread-185 : ROLLBACK
2020-06-20 21:37:33,821 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-06-20 21:37:33,822 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:37:33,822 INFO sqlalchemy.engine.base.Engine Thread-186 : (1, 1)
2020-06-20 21:37:33,823 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:37:33,823 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:37:33,827 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:37:33,827 INFO sqlalchemy.engine.base.Engine Thread-186 : (27,)
2020-06-20 21:37:33,827 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-20 21:37:33,827 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131)
2020-06-20 21:37:33,831 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:37:33,832 INFO sqlalchemy.engine.base.Engine Thread-186 : (27,)
2020-06-20 21:37:33,832 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:37:33,834 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:37:33,834 INFO sqlalchemy.engine.base.Engine Thread-186 : ()
2020-06-20 21:37:33,834 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:37:33,834 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:37:33,835 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:37:33,838 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:37:33,838 INFO sqlalchemy.engine.base.Engine Thread-186 : ()
2020-06-20 21:37:33,838 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:37:33,839 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:37:33,839 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:37:33,842 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:37:33,842 INFO sqlalchemy.engine.base.Engine Thread-186 : (27,)
2020-06-20 21:37:33,842 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:37:33,842 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:37:33,843 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:37:33,843 INFO sqlalchemy.engine.base.Engine Thread-186 : (1,)
2020-06-20 21:37:33,844 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexgroups_1_group_members',)
2020-06-20 21:37:33,844 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row ('1',)
2020-06-20 21:37:33,849 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:37:33,849 INFO sqlalchemy.engine.base.Engine Thread-186 : ('1',)
2020-06-20 21:37:33,850 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:37:33,850 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:37:33,851 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:37:33,851 INFO sqlalchemy.engine.base.Engine Thread-186 : (1, 1)
2020-06-20 21:37:33,851 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:37:33,851 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (5,)
2020-06-20 21:37:33,853 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-06-20 21:40:30,484 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:40:30,484 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:40:30,485 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:40:30,486 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:40:30,486 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:40:30,486 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:40:30,487 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:40:30,487 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:40:30,487 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:40:30,487 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:40:30,488 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:40:30,488 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:40:30,488 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:40:30,488 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:40:30,489 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:40:30,489 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:40:30,490 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:40:30,490 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:40:30,491 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:40:30,491 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:40:30,492 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:40:30,492 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:40:30,492 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:40:30,495 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:40:30,495 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:40:30,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:40:30,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:40:30,509 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:40:30,509 INFO sqlalchemy.engine.base.Engine Thread-2 : (20,)
2020-06-20 21:40:30,510 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:40:30,511 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:40:30,514 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:40:30,654 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-20 21:40:30,655 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:40:30,655 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-20 21:40:30,656 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:40:30,656 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:40:30,660 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:40:30,660 INFO sqlalchemy.engine.base.Engine Thread-3 : (20,)
2020-06-20 21:40:30,661 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:40:30,661 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None)
2020-06-20 21:44:24,994 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:44:24,994 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:44:24,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:44:24,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:44:24,996 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:44:24,997 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:44:24,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:44:24,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:44:24,997 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:44:24,997 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:44:24,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:44:24,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:44:24,998 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:44:24,998 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:44:24,999 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:44:24,999 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:44:25,000 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:44:25,000 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:44:25,000 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:44:25,001 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:44:25,001 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:44:25,001 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:44:25,002 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:44:25,004 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:44:25,004 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:44:25,005 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:44:25,005 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:44:25,015 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:44:25,015 INFO sqlalchemy.engine.base.Engine Thread-2 : (56,)
2020-06-20 21:44:25,016 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:44:25,017 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:44:25,019 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:44:25,038 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-20 21:44:25,040 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:44:25,040 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-20 21:44:25,040 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:44:25,041 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:44:25,045 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:44:25,045 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 21:44:25,045 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:44:25,046 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 21:44:25,052 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:44:25,052 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 21:44:25,052 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:44:25,055 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:44:25,055 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-20 21:44:25,056 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:44:25,056 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:44:25,056 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:44:25,064 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:44:25,064 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-20 21:44:25,065 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:44:25,066 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:44:25,066 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:44:25,068 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:44:25,069 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 21:44:25,069 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:44:25,069 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:44:25,070 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:44:25,070 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-20 21:44:25,071 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-20 21:44:25,071 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-20 21:44:25,077 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:44:25,077 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-20 21:44:25,077 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:44:25,078 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:44:25,079 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:44:25,079 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-20 21:44:25,079 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:44:25,080 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-20 21:44:44,308 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-20 21:44:44,310 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-20 21:44:44,312 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:44:44,312 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-20 21:44:44,313 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:44:44,314 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:44:44,322 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:44:44,322 INFO sqlalchemy.engine.base.Engine Thread-4 : (56,)
2020-06-20 21:44:44,323 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:44:44,324 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:44:44,325 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-20 21:44:44,338 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-20 21:44:44,339 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:44:44,340 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-20 21:44:44,340 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:44:44,340 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:44:44,344 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:44:44,344 INFO sqlalchemy.engine.base.Engine Thread-5 : (56,)
2020-06-20 21:44:44,345 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:44:44,345 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 21:44:44,349 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:44:44,349 INFO sqlalchemy.engine.base.Engine Thread-5 : (56,)
2020-06-20 21:44:44,350 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:44:44,352 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:44:44,352 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-20 21:44:44,352 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:44:44,353 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:44:44,353 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:44:44,356 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:44:44,356 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-20 21:44:44,357 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:44:44,357 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:44:44,357 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:44:44,360 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:44:44,360 INFO sqlalchemy.engine.base.Engine Thread-5 : (56,)
2020-06-20 21:44:44,360 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:44:44,361 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:44:44,362 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:44:44,362 INFO sqlalchemy.engine.base.Engine Thread-5 : (1,)
2020-06-20 21:44:44,362 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_group_members',)
2020-06-20 21:44:44,362 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('1',)
2020-06-20 21:44:44,367 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:44:44,368 INFO sqlalchemy.engine.base.Engine Thread-5 : ('1',)
2020-06-20 21:44:44,368 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:44:44,368 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:44:44,369 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:44:44,369 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-20 21:44:44,370 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:44:44,370 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (5,)
2020-06-20 21:44:44,387 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-20 21:45:26,860 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-20 21:45:26,861 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:45:26,861 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-20 21:45:26,862 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:45:26,863 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:45:26,872 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:45:26,872 INFO sqlalchemy.engine.base.Engine Thread-6 : (57,)
2020-06-20 21:45:26,873 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:45:26,877 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:45:26,879 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-20 21:45:26,927 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-20 21:45:26,928 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:45:26,928 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-20 21:45:26,929 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:45:26,929 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:45:26,934 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:45:26,934 INFO sqlalchemy.engine.base.Engine Thread-7 : (57,)
2020-06-20 21:45:26,934 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:45:26,934 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 21:45:26,939 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:45:26,939 INFO sqlalchemy.engine.base.Engine Thread-7 : (57,)
2020-06-20 21:45:26,940 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:45:26,942 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:45:26,942 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-20 21:45:26,942 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:45:26,943 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:45:26,943 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:45:26,946 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:45:26,946 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-20 21:45:26,947 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:45:26,947 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:45:26,948 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:45:26,950 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:45:26,950 INFO sqlalchemy.engine.base.Engine Thread-7 : (57,)
2020-06-20 21:45:26,951 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:45:26,951 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:45:26,952 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:45:26,952 INFO sqlalchemy.engine.base.Engine Thread-7 : (1,)
2020-06-20 21:45:26,953 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_group_members',)
2020-06-20 21:45:26,953 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row ('1',)
2020-06-20 21:45:26,959 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:45:26,959 INFO sqlalchemy.engine.base.Engine Thread-7 : ('1',)
2020-06-20 21:45:26,959 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:45:26,959 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:45:26,960 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:45:26,961 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-20 21:45:26,961 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:45:26,961 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (5,)
2020-06-20 21:45:26,980 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-20 21:45:44,688 INFO sqlalchemy.engine.base.Engine Thread-8 : BEGIN (implicit)
2020-06-20 21:45:44,689 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:45:44,689 INFO sqlalchemy.engine.base.Engine Thread-8 : (1, 1)
2020-06-20 21:45:44,690 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:45:44,690 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:45:44,698 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:45:44,698 INFO sqlalchemy.engine.base.Engine Thread-8 : (56,)
2020-06-20 21:45:44,699 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:45:44,699 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:45:44,700 INFO sqlalchemy.engine.base.Engine Thread-8 : ROLLBACK
2020-06-20 21:45:44,712 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-06-20 21:45:44,713 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:45:44,713 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-06-20 21:45:44,714 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:45:44,714 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:45:44,718 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:45:44,718 INFO sqlalchemy.engine.base.Engine Thread-9 : (56,)
2020-06-20 21:45:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:45:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 21:45:44,723 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:45:44,723 INFO sqlalchemy.engine.base.Engine Thread-9 : (56,)
2020-06-20 21:45:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:45:44,725 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:45:44,725 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-06-20 21:45:44,726 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:45:44,726 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:45:44,726 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:45:44,729 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:45:44,729 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-06-20 21:45:44,730 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:45:44,730 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:45:44,730 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:45:44,733 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:45:44,733 INFO sqlalchemy.engine.base.Engine Thread-9 : (56,)
2020-06-20 21:45:44,733 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:45:44,733 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:45:44,734 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:45:44,734 INFO sqlalchemy.engine.base.Engine Thread-9 : (1,)
2020-06-20 21:45:44,735 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_1_group_members',)
2020-06-20 21:45:44,735 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row ('1',)
2020-06-20 21:45:44,740 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:45:44,740 INFO sqlalchemy.engine.base.Engine Thread-9 : ('1',)
2020-06-20 21:45:44,741 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:45:44,741 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:45:44,742 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:45:44,742 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-06-20 21:45:44,742 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:45:44,742 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (5,)
2020-06-20 21:45:44,743 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-06-20 21:46:31,648 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 21:46:31,648 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:46:31,649 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:46:31,650 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 21:46:31,650 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 21:46:31,650 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:46:31,651 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 21:46:31,651 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 21:46:31,652 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 21:46:31,652 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:46:31,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 21:46:31,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 21:46:31,652 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 21:46:31,652 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:46:31,653 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 21:46:31,653 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 21:46:31,654 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 21:46:31,654 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:46:31,654 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 21:46:31,654 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:46:31,655 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 21:46:31,655 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 21:46:31,656 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 21:46:31,658 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:31,658 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 21:46:31,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:31,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:31,669 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:31,669 INFO sqlalchemy.engine.base.Engine Thread-2 : (56,)
2020-06-20 21:46:31,670 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:46:31,671 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:46:31,673 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 21:46:31,686 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-20 21:46:31,687 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:31,688 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-20 21:46:31,688 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:31,688 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:31,693 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:31,693 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 21:46:31,693 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:46:31,694 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 21:46:31,700 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:46:31,700 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 21:46:31,701 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:46:31,704 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:46:31,705 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-20 21:46:31,705 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:46:31,706 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:46:31,706 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:46:31,713 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:46:31,714 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-20 21:46:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:46:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:46:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:46:31,718 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:31,718 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 21:46:31,719 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:46:31,719 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:46:31,720 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:46:31,720 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-20 21:46:31,721 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-20 21:46:31,721 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-20 21:46:31,727 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:46:31,727 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-20 21:46:31,727 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:46:31,727 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:46:31,729 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:46:31,729 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-20 21:46:31,730 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:46:31,730 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-20 21:46:31,758 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-06-20 21:46:42,090 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-20 21:46:42,092 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:46:42,092 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-06-20 21:46:42,093 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:46:42,094 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:46:42,094 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:46:42,096 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 21:46:42,096 INFO sqlalchemy.engine.base.Engine Thread-4 : (100,)
2020-06-20 21:46:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 21:46:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 21:46:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 21:46:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 21:46:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 21:46:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 21:46:42,099 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:42,099 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-20 21:46:42,100 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:42,100 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:42,163 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 21:46:42,163 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-06-20 21:46:42,164 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:42,164 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:42,166 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-20 21:46:42,429 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 21:46:42,431 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:42,431 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 21:46:42,434 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:42,435 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:42,438 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 21:46:42,438 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-06-20 21:46:42,439 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:42,450 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:42,450 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 21:46:42,451 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 21:46:42,451 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-06-20 21:46:42,452 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:42,457 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:42,456 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-06-20 21:46:42,460 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:42,459 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 21:46:42,460 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-06-20 21:46:42,458 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:42,461 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:42,463 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-06-20 21:46:42,461 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:42,463 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:42,464 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-06-20 21:46:42,502 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-06-20 21:46:42,503 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:42,503 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-06-20 21:46:42,504 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:42,504 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:42,505 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-06-20 21:46:43,141 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-06-20 21:46:43,143 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 21:46:43,143 INFO sqlalchemy.engine.base.Engine Thread-19 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:46:43,146 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 21:46:43,146 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 21:46:43,146 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 21:46:43,146 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 21:46:43,146 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 21:46:43,147 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:46:43,147 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:46:43,147 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:46:43,147 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:46:43,147 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:46:43,152 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 21:46:43,152 INFO sqlalchemy.engine.base.Engine Thread-19 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:46:43,153 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:46:43,153 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 21:46:43,158 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 21:46:43,158 INFO sqlalchemy.engine.base.Engine Thread-19 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:46:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:46:43,159 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 21:46:43,160 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-06-20 21:46:43,185 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-06-20 21:46:43,187 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 21:46:43,187 INFO sqlalchemy.engine.base.Engine Thread-20 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:46:43,189 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 21:46:43,189 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 21:46:43,189 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 21:46:43,190 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 21:46:43,190 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 21:46:43,190 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:46:43,190 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 21:46:43,190 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:46:43,190 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:46:43,190 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 21:46:43,194 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 21:46:43,195 INFO sqlalchemy.engine.base.Engine Thread-20 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:46:43,196 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:46:43,197 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 21:46:43,202 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 21:46:43,202 INFO sqlalchemy.engine.base.Engine Thread-20 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 21:46:43,203 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 21:46:43,204 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 21:46:43,205 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-06-20 21:46:43,238 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-06-20 21:46:43,239 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,239 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-06-20 21:46:43,240 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,241 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,248 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-06-20 21:46:43,254 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,254 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-06-20 21:46:43,255 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,257 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-06-20 21:46:43,257 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,261 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,261 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,258 INFO sqlalchemy.engine.base.Engine Thread-22 : (15, 1)
2020-06-20 21:46:43,272 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,275 INFO sqlalchemy.engine.base.Engine Thread-23 : (19, 1)
2020-06-20 21:46:43,273 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-06-20 21:46:43,276 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,273 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-06-20 21:46:43,276 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,277 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,288 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, None, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:46:43,278 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,286 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-06-20 21:46:43,281 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,294 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, None, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:46:43,301 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,319 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-06-20 21:46:43,316 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-06-20 21:46:43,319 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-06-20 21:46:43,302 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,320 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-06-20 21:46:43,320 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-20 21:46:43,321 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,321 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,324 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,323 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,330 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-20 21:46:43,324 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,322 INFO sqlalchemy.engine.base.Engine Thread-24 : (20, 1)
2020-06-20 21:46:43,342 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,351 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,350 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,362 INFO sqlalchemy.engine.base.Engine Thread-26 : (22, 1)
2020-06-20 21:46:43,349 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 21:46:43,351 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,361 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,365 INFO sqlalchemy.engine.base.Engine Thread-27 : (23, 1)
2020-06-20 21:46:43,362 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,365 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,365 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,365 INFO sqlalchemy.engine.base.Engine Thread-25 : (21, 1)
2020-06-20 21:46:43,367 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:46:43,369 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-06-20 21:46:43,367 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,371 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:46:43,367 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 21:46:43,363 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 21:46:43,370 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,368 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:46:43,372 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-20 21:46:43,374 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,374 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,377 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,376 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-06-20 21:46:43,376 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 21:46:43,375 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, None, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 21:46:43,388 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,390 INFO sqlalchemy.engine.base.Engine Thread-29 : (56, 1)
2020-06-20 21:46:43,391 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-06-20 21:46:43,391 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,392 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:46:43,393 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,393 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,407 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 21:46:43,408 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 21:46:43,410 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,416 INFO sqlalchemy.engine.base.Engine Thread-28 : (27, 1)
2020-06-20 21:46:43,411 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,416 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-06-20 21:46:43,412 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 21:46:43,416 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,417 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,418 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,418 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,430 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:46:43,418 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-06-20 21:46:43,415 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-06-20 21:46:43,445 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:43,444 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,446 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-06-20 21:46:43,436 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 21:46:43,446 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,447 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,446 INFO sqlalchemy.engine.base.Engine Thread-31 : (31, 1)
2020-06-20 21:46:43,447 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:43,458 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:43,458 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,464 INFO sqlalchemy.engine.base.Engine Thread-30 : (57, 1)
2020-06-20 21:46:43,469 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 21:46:43,470 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:46:43,472 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 21:46:43,472 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 21:46:43,484 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:46:43,486 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 21:46:43,487 INFO sqlalchemy.engine.base.Engine Thread-32 : (30, 1)
2020-06-20 21:46:43,488 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 21:46:43,490 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:46:43,491 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 21:46:43,492 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-06-20 21:46:44,960 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-20 21:46:44,961 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:44,961 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-20 21:46:44,962 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:44,962 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:44,971 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:44,972 INFO sqlalchemy.engine.base.Engine Thread-33 : (56,)
2020-06-20 21:46:44,972 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:46:44,973 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:46:44,974 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-20 21:46:44,989 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-20 21:46:44,990 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:44,990 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-20 21:46:44,991 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:44,994 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:44,998 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:44,998 INFO sqlalchemy.engine.base.Engine Thread-34 : (56,)
2020-06-20 21:46:44,999 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:46:44,999 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 21:46:45,003 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:46:45,003 INFO sqlalchemy.engine.base.Engine Thread-34 : (56,)
2020-06-20 21:46:45,004 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:46:45,006 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:46:45,006 INFO sqlalchemy.engine.base.Engine Thread-34 : ()
2020-06-20 21:46:45,007 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:46:45,007 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:46:45,007 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:46:45,010 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:46:45,010 INFO sqlalchemy.engine.base.Engine Thread-34 : ()
2020-06-20 21:46:45,011 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:46:45,011 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:46:45,011 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:46:45,014 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:45,014 INFO sqlalchemy.engine.base.Engine Thread-34 : (56,)
2020-06-20 21:46:45,015 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:46:45,015 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:46:45,016 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:46:45,016 INFO sqlalchemy.engine.base.Engine Thread-34 : (1,)
2020-06-20 21:46:45,016 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('complexgroups_1_group_members',)
2020-06-20 21:46:45,016 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row ('1',)
2020-06-20 21:46:45,021 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:46:45,022 INFO sqlalchemy.engine.base.Engine Thread-34 : ('1',)
2020-06-20 21:46:45,023 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:46:45,023 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:46:45,024 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:46:45,024 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-20 21:46:45,025 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:46:45,025 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (5,)
2020-06-20 21:46:45,026 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-20 21:46:48,968 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-20 21:46:48,969 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:48,970 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-06-20 21:46:48,970 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:48,970 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:48,979 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:48,979 INFO sqlalchemy.engine.base.Engine Thread-35 : (20,)
2020-06-20 21:46:48,980 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 21:46:48,981 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 21:46:48,983 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-20 21:46:48,996 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-20 21:46:48,998 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 21:46:48,998 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-20 21:46:48,999 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 21:46:48,999 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 21:46:49,003 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:49,003 INFO sqlalchemy.engine.base.Engine Thread-36 : (20,)
2020-06-20 21:46:49,004 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 21:46:49,004 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'test', 131, None)
2020-06-20 21:46:49,008 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 21:46:49,008 INFO sqlalchemy.engine.base.Engine Thread-36 : (20,)
2020-06-20 21:46:49,008 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 21:46:49,009 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 21:46:49,009 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-20 21:46:49,009 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-20 21:46:49,009 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-20 21:46:49,011 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 21:46:49,011 INFO sqlalchemy.engine.base.Engine Thread-36 : ()
2020-06-20 21:46:49,011 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 21:46:49,011 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 21:46:49,011 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 21:46:49,014 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 21:46:49,014 INFO sqlalchemy.engine.base.Engine Thread-36 : ()
2020-06-20 21:46:49,015 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 21:46:49,015 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 21:46:49,016 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 21:46:49,018 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 21:46:49,018 INFO sqlalchemy.engine.base.Engine Thread-36 : (20,)
2020-06-20 21:46:49,019 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 21:46:49,019 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'Zone 2 Complexes')
2020-06-20 21:46:49,020 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 21:46:49,020 INFO sqlalchemy.engine.base.Engine Thread-36 : (1,)
2020-06-20 21:46:49,020 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('complexgroups_1_group_members',)
2020-06-20 21:46:49,020 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row ('1',)
2020-06-20 21:46:49,026 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 21:46:49,026 INFO sqlalchemy.engine.base.Engine Thread-36 : ('1',)
2020-06-20 21:46:49,026 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 21:46:49,027 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'Made Up CheckPoint')
2020-06-20 21:46:49,028 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 21:46:49,028 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-20 21:46:49,028 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('complexgroups_1_max_slots',)
2020-06-20 21:46:49,028 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (5,)
2020-06-20 21:46:49,030 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-06-20 22:08:35,088 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-06-20 22:08:35,089 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:08:35,089 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-06-20 22:08:35,092 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:08:35,092 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:08:35,102 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:08:35,102 INFO sqlalchemy.engine.base.Engine Thread-38 : (56,)
2020-06-20 22:08:35,103 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:08:35,104 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:08:35,106 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-06-20 22:08:35,120 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-06-20 22:08:35,122 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:08:35,122 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-06-20 22:08:35,122 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:08:35,123 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:08:35,127 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:08:35,127 INFO sqlalchemy.engine.base.Engine Thread-39 : (56,)
2020-06-20 22:08:35,128 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:08:35,128 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:08:35,133 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:08:35,133 INFO sqlalchemy.engine.base.Engine Thread-39 : (56,)
2020-06-20 22:08:35,134 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:08:35,136 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:08:35,137 INFO sqlalchemy.engine.base.Engine Thread-39 : ()
2020-06-20 22:08:35,137 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:08:35,137 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:08:35,138 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:08:35,141 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:08:35,141 INFO sqlalchemy.engine.base.Engine Thread-39 : ()
2020-06-20 22:08:35,142 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:08:35,142 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:08:35,143 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:08:35,145 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:08:35,146 INFO sqlalchemy.engine.base.Engine Thread-39 : (56,)
2020-06-20 22:08:35,146 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:08:35,146 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:08:35,147 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:08:35,147 INFO sqlalchemy.engine.base.Engine Thread-39 : (1,)
2020-06-20 22:08:35,148 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexgroups_1_group_members',)
2020-06-20 22:08:35,148 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row ('1',)
2020-06-20 22:08:35,154 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:08:35,154 INFO sqlalchemy.engine.base.Engine Thread-39 : ('1',)
2020-06-20 22:08:35,155 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:08:35,155 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:08:35,156 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:08:35,156 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-06-20 22:08:35,156 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:08:35,157 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (5,)
2020-06-20 22:08:35,158 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-06-20 22:09:30,821 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-06-20 22:09:30,821 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 22:09:30,822 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 22:09:30,822 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-06-20 22:09:30,823 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-06-20 22:09:30,823 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 22:09:30,824 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-06-20 22:09:30,824 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-06-20 22:09:30,824 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-06-20 22:09:30,824 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 22:09:30,824 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-06-20 22:09:30,825 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-06-20 22:09:30,825 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-06-20 22:09:30,825 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 22:09:30,826 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-06-20 22:09:30,826 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-06-20 22:09:30,826 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-06-20 22:09:30,827 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 22:09:30,827 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-06-20 22:09:30,827 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 22:09:30,828 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-06-20 22:09:30,828 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-06-20 22:09:30,828 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-06-20 22:09:30,831 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:09:30,831 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-06-20 22:09:30,832 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:09:30,832 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:09:30,842 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:09:30,842 INFO sqlalchemy.engine.base.Engine Thread-2 : (56,)
2020-06-20 22:09:30,843 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:09:30,844 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:09:30,846 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-06-20 22:09:30,861 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-06-20 22:09:30,862 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:09:30,862 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-20 22:09:30,863 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:09:30,863 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:09:30,867 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:09:30,867 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 22:09:30,868 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:09:30,868 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:09:30,874 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:09:30,874 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 22:09:30,874 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:09:30,877 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:09:30,878 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-20 22:09:30,878 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:09:30,878 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:09:30,878 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:09:30,887 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:09:30,887 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-06-20 22:09:30,888 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:09:30,889 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:09:30,889 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:09:30,892 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:09:30,892 INFO sqlalchemy.engine.base.Engine Thread-3 : (56,)
2020-06-20 22:09:30,892 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:09:30,892 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:09:30,893 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:09:30,894 INFO sqlalchemy.engine.base.Engine Thread-3 : (1,)
2020-06-20 22:09:30,894 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_group_members',)
2020-06-20 22:09:30,894 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('1',)
2020-06-20 22:09:30,900 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:09:30,900 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-06-20 22:09:30,900 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:09:30,900 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:09:30,901 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:09:30,902 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-06-20 22:09:30,902 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:09:30,902 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (5,)
2020-06-20 22:10:09,930 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-20 22:10:09,934 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-06-20 22:10:09,935 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:09,935 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-06-20 22:10:09,936 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:09,936 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:09,947 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:09,947 INFO sqlalchemy.engine.base.Engine Thread-4 : (27,)
2020-06-20 22:10:09,948 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:10:09,949 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:10:09,950 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-06-20 22:10:10,026 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-06-20 22:10:10,028 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:10,028 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-20 22:10:10,029 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:10,029 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:10,033 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:10,033 INFO sqlalchemy.engine.base.Engine Thread-5 : (27,)
2020-06-20 22:10:10,034 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:10:10,034 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:10:10,039 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:10:10,039 INFO sqlalchemy.engine.base.Engine Thread-5 : (27,)
2020-06-20 22:10:10,040 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:10:10,042 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:10:10,042 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-20 22:10:10,042 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:10:10,042 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:10,043 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:10,046 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:10:10,046 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-06-20 22:10:10,047 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:10:10,048 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:10,048 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:10:10,051 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:10,051 INFO sqlalchemy.engine.base.Engine Thread-5 : (27,)
2020-06-20 22:10:10,051 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:10:10,052 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:10:10,053 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:10:10,053 INFO sqlalchemy.engine.base.Engine Thread-5 : (1,)
2020-06-20 22:10:10,053 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_group_members',)
2020-06-20 22:10:10,053 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row ('1',)
2020-06-20 22:10:10,059 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:10:10,059 INFO sqlalchemy.engine.base.Engine Thread-5 : ('1',)
2020-06-20 22:10:10,059 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:10:10,059 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:10:10,061 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:10:10,061 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-06-20 22:10:10,061 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:10:10,061 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (5,)
2020-06-20 22:10:10,086 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-06-20 22:10:12,437 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-06-20 22:10:12,438 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:12,438 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-06-20 22:10:12,439 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:12,439 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:12,450 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:12,451 INFO sqlalchemy.engine.base.Engine Thread-6 : (20,)
2020-06-20 22:10:12,451 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:10:12,452 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:10:12,453 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-06-20 22:10:12,535 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-06-20 22:10:12,536 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:12,536 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-20 22:10:12,537 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:12,537 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:12,541 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:12,541 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-20 22:10:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:10:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'test', 131, None)
2020-06-20 22:10:12,546 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:10:12,546 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-20 22:10:12,547 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:10:12,547 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 22:10:12,547 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-20 22:10:12,547 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-20 22:10:12,547 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-20 22:10:12,549 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:10:12,549 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-20 22:10:12,550 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:10:12,550 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:12,550 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:12,553 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:10:12,553 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-06-20 22:10:12,554 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:10:12,554 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:12,554 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:10:12,557 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:12,557 INFO sqlalchemy.engine.base.Engine Thread-7 : (20,)
2020-06-20 22:10:12,558 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:10:12,558 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:10:12,559 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:10:12,559 INFO sqlalchemy.engine.base.Engine Thread-7 : (1,)
2020-06-20 22:10:12,559 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_group_members',)
2020-06-20 22:10:12,560 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row ('1',)
2020-06-20 22:10:12,565 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:10:12,565 INFO sqlalchemy.engine.base.Engine Thread-7 : ('1',)
2020-06-20 22:10:12,566 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:10:12,566 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:10:12,567 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:10:12,567 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-06-20 22:10:12,567 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:10:12,568 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (5,)
2020-06-20 22:10:12,569 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-06-20 22:10:15,302 INFO sqlalchemy.engine.base.Engine Thread-8 : BEGIN (implicit)
2020-06-20 22:10:15,303 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:15,303 INFO sqlalchemy.engine.base.Engine Thread-8 : (1, 1)
2020-06-20 22:10:15,304 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:15,304 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:15,313 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:15,313 INFO sqlalchemy.engine.base.Engine Thread-8 : (56,)
2020-06-20 22:10:15,314 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:10:15,315 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:10:15,316 INFO sqlalchemy.engine.base.Engine Thread-8 : ROLLBACK
2020-06-20 22:10:15,333 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-06-20 22:10:15,334 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:15,335 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-06-20 22:10:15,335 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:15,336 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:15,340 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:15,340 INFO sqlalchemy.engine.base.Engine Thread-9 : (56,)
2020-06-20 22:10:15,341 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:10:15,341 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:10:15,345 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:10:15,345 INFO sqlalchemy.engine.base.Engine Thread-9 : (56,)
2020-06-20 22:10:15,346 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:10:15,348 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:10:15,348 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-06-20 22:10:15,348 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:10:15,349 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:15,349 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:15,352 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:10:15,352 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-06-20 22:10:15,353 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:10:15,353 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:15,354 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:10:15,356 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:15,356 INFO sqlalchemy.engine.base.Engine Thread-9 : (56,)
2020-06-20 22:10:15,357 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:10:15,357 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:10:15,358 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:10:15,358 INFO sqlalchemy.engine.base.Engine Thread-9 : (1,)
2020-06-20 22:10:15,359 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_1_group_members',)
2020-06-20 22:10:15,359 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row ('1',)
2020-06-20 22:10:15,365 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:10:15,365 INFO sqlalchemy.engine.base.Engine Thread-9 : ('1',)
2020-06-20 22:10:15,365 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:10:15,365 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:10:15,366 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:10:15,367 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-06-20 22:10:15,367 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:10:15,367 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (5,)
2020-06-20 22:10:15,368 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-06-20 22:10:17,225 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-06-20 22:10:17,227 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:17,227 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-06-20 22:10:17,227 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:17,228 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:17,233 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 22:10:17,233 INFO sqlalchemy.engine.base.Engine Thread-10 : (datetime.datetime(2020, 7, 8, 0, 0), datetime.datetime(2020, 7, 8, 23, 59), datetime.datetime(2020, 7, 8, 0, 0), datetime.datetime(2020, 7, 8, 23, 59), datetime.datetime(2020, 7, 8, 0, 0), datetime.datetime(2020, 7, 8, 23, 59))
2020-06-20 22:10:17,234 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type')
2020-06-20 22:10:17,234 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131)
2020-06-20 22:10:17,256 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-06-20 22:10:19,637 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-06-20 22:10:19,638 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:19,638 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-06-20 22:10:19,639 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:19,639 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:19,649 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:19,649 INFO sqlalchemy.engine.base.Engine Thread-11 : (57,)
2020-06-20 22:10:19,650 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:10:19,651 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:10:19,652 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-06-20 22:10:19,667 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-06-20 22:10:19,668 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:19,668 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 22:10:19,669 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:19,669 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:19,673 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:19,673 INFO sqlalchemy.engine.base.Engine Thread-12 : (57,)
2020-06-20 22:10:19,674 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:10:19,674 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:10:19,678 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:10:19,678 INFO sqlalchemy.engine.base.Engine Thread-12 : (57,)
2020-06-20 22:10:19,679 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:10:19,681 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:10:19,681 INFO sqlalchemy.engine.base.Engine Thread-12 : ()
2020-06-20 22:10:19,682 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:10:19,682 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:19,682 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:19,685 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:10:19,685 INFO sqlalchemy.engine.base.Engine Thread-12 : ()
2020-06-20 22:10:19,686 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:10:19,687 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:19,687 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:10:19,690 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:19,690 INFO sqlalchemy.engine.base.Engine Thread-12 : (57,)
2020-06-20 22:10:19,691 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:10:19,691 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:10:19,692 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:10:19,692 INFO sqlalchemy.engine.base.Engine Thread-12 : (1,)
2020-06-20 22:10:19,693 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_1_group_members',)
2020-06-20 22:10:19,693 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row ('1',)
2020-06-20 22:10:19,699 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:10:19,699 INFO sqlalchemy.engine.base.Engine Thread-12 : ('1',)
2020-06-20 22:10:19,700 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:10:19,700 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:10:19,701 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:10:19,701 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-06-20 22:10:19,702 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:10:19,702 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (5,)
2020-06-20 22:10:19,703 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-06-20 22:10:23,673 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-06-20 22:10:23,676 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:23,676 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-06-20 22:10:23,677 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:23,677 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:23,685 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:23,686 INFO sqlalchemy.engine.base.Engine Thread-13 : (27,)
2020-06-20 22:10:23,686 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:10:23,687 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:10:23,688 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-06-20 22:10:23,706 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-06-20 22:10:23,707 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:23,707 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 22:10:23,708 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:23,708 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:23,712 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:23,712 INFO sqlalchemy.engine.base.Engine Thread-14 : (27,)
2020-06-20 22:10:23,713 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:10:23,713 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:10:23,717 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:10:23,717 INFO sqlalchemy.engine.base.Engine Thread-14 : (27,)
2020-06-20 22:10:23,717 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:10:23,719 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:10:23,719 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-06-20 22:10:23,720 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:10:23,720 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:23,720 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:23,723 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:10:23,723 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-06-20 22:10:23,724 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:10:23,724 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:23,724 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:10:23,727 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:23,727 INFO sqlalchemy.engine.base.Engine Thread-14 : (27,)
2020-06-20 22:10:23,727 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:10:23,727 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:10:23,728 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:10:23,728 INFO sqlalchemy.engine.base.Engine Thread-14 : (1,)
2020-06-20 22:10:23,729 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_group_members',)
2020-06-20 22:10:23,729 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row ('1',)
2020-06-20 22:10:23,734 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:10:23,734 INFO sqlalchemy.engine.base.Engine Thread-14 : ('1',)
2020-06-20 22:10:23,734 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:10:23,735 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:10:23,736 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:10:23,736 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-06-20 22:10:23,736 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:10:23,736 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (5,)
2020-06-20 22:10:23,737 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-06-20 22:10:29,110 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-06-20 22:10:29,113 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:10:29,113 INFO sqlalchemy.engine.base.Engine Thread-15 : ()
2020-06-20 22:10:29,114 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:10:29,114 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:29,114 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:10:29,117 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:10:29,117 INFO sqlalchemy.engine.base.Engine Thread-15 : (100,)
2020-06-20 22:10:29,117 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:10:29,118 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 22:10:29,118 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 22:10:29,118 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 22:10:29,118 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 22:10:29,118 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 22:10:29,120 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:29,120 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-06-20 22:10:29,121 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:29,121 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:29,190 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:10:29,191 INFO sqlalchemy.engine.base.Engine Thread-15 : ('philip', 1, 1)
2020-06-20 22:10:29,191 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:29,192 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:29,193 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-06-20 22:10:29,483 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-06-20 22:10:29,484 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:29,484 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-06-20 22:10:29,490 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:29,491 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:29,500 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-06-20 22:10:29,506 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-06-20 22:10:29,508 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-06-20 22:10:29,510 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:29,510 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-06-20 22:10:29,512 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:29,511 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-06-20 22:10:29,511 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:29,514 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-06-20 22:10:29,513 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-06-20 22:10:29,514 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:29,515 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:29,515 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:29,516 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:29,517 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-06-20 22:10:29,518 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-06-20 22:10:29,518 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:29,520 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:29,521 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-06-20 22:10:29,531 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-06-20 22:10:29,532 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:29,533 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-06-20 22:10:29,533 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:29,533 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:29,535 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-06-20 22:10:30,304 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-06-20 22:10:30,306 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 22:10:30,307 INFO sqlalchemy.engine.base.Engine Thread-30 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:10:30,309 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 22:10:30,309 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 22:10:30,309 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 22:10:30,309 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 22:10:30,310 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 22:10:30,310 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:10:30,310 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:10:30,310 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:10:30,310 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:10:30,310 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:10:30,316 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 22:10:30,316 INFO sqlalchemy.engine.base.Engine Thread-30 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:10:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:10:30,317 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 22:10:30,322 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 22:10:30,322 INFO sqlalchemy.engine.base.Engine Thread-30 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:10:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:10:30,323 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 22:10:30,324 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-06-20 22:10:30,355 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-06-20 22:10:30,358 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 22:10:30,358 INFO sqlalchemy.engine.base.Engine Thread-31 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:10:30,360 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 22:10:30,361 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 22:10:30,361 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 22:10:30,361 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 22:10:30,362 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 22:10:30,362 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:10:30,362 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:10:30,362 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:10:30,362 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:10:30,362 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:10:30,368 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 22:10:30,368 INFO sqlalchemy.engine.base.Engine Thread-31 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:10:30,369 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:10:30,369 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 22:10:30,374 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 22:10:30,374 INFO sqlalchemy.engine.base.Engine Thread-31 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:10:30,375 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:10:30,375 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 22:10:30,377 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-06-20 22:10:30,412 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-06-20 22:10:30,413 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,413 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-06-20 22:10:30,414 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,414 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,422 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-06-20 22:10:30,430 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-06-20 22:10:30,431 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,433 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-06-20 22:10:30,435 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,436 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,439 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-06-20 22:10:30,440 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,440 INFO sqlalchemy.engine.base.Engine Thread-33 : (15, 1)
2020-06-20 22:10:30,443 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-06-20 22:10:30,444 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-06-20 22:10:30,444 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-06-20 22:10:30,445 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,446 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-06-20 22:10:30,446 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-06-20 22:10:30,447 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,447 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,449 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,448 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,448 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,448 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-06-20 22:10:30,449 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,462 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,460 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,461 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,461 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,448 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,467 INFO sqlalchemy.engine.base.Engine Thread-36 : (22, 1)
2020-06-20 22:10:30,467 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,484 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,484 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,501 INFO sqlalchemy.engine.base.Engine Thread-34 : (19, 1)
2020-06-20 22:10:30,499 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,500 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,501 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,515 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:30,496 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, None, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:10:30,501 INFO sqlalchemy.engine.base.Engine Thread-37 : (21, 1)
2020-06-20 22:10:30,508 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,513 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,501 INFO sqlalchemy.engine.base.Engine Thread-35 : (20, 1)
2020-06-20 22:10:30,523 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, None, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:10:30,528 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,542 INFO sqlalchemy.engine.base.Engine Thread-38 : (23, 1)
2020-06-20 22:10:30,562 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,558 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-06-20 22:10:30,560 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-06-20 22:10:30,561 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, None, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:10:30,557 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-06-20 22:10:30,563 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:30,564 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,566 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-06-20 22:10:30,568 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:30,568 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-06-20 22:10:30,571 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-06-20 22:10:30,585 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-06-20 22:10:30,587 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-06-20 22:10:30,589 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,590 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,590 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-06-20 22:10:30,592 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-06-20 22:10:30,593 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-06-20 22:10:30,595 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-06-20 22:10:30,597 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,601 INFO sqlalchemy.engine.base.Engine Thread-41 : (1, 1)
2020-06-20 22:10:30,599 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,599 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-06-20 22:10:30,601 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,601 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,614 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-06-20 22:10:30,602 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,614 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,614 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,625 INFO sqlalchemy.engine.base.Engine Thread-39 : (27, 1)
2020-06-20 22:10:30,602 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,620 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,627 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,626 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,626 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,603 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:30,632 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,670 INFO sqlalchemy.engine.base.Engine Thread-40 : (56, 1)
2020-06-20 22:10:30,691 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-06-20 22:10:30,696 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,704 INFO sqlalchemy.engine.base.Engine Thread-42 : (31, 1)
2020-06-20 22:10:30,697 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:30,706 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-06-20 22:10:30,705 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:30,704 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,707 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,707 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:30,708 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 22:10:30,709 INFO sqlalchemy.engine.base.Engine Thread-41 : (57, 1)
2020-06-20 22:10:30,710 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:30,723 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:30,736 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 22:10:30,737 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-06-20 22:10:30,738 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:10:30,739 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-06-20 22:10:30,739 INFO sqlalchemy.engine.base.Engine Thread-43 : (30, 1)
2020-06-20 22:10:30,740 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:30,742 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 22:10:30,744 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-06-20 22:10:30,746 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:30,748 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-06-20 22:10:31,966 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-06-20 22:10:31,967 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:31,967 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-06-20 22:10:31,967 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:31,968 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:31,978 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:31,978 INFO sqlalchemy.engine.base.Engine Thread-44 : (27,)
2020-06-20 22:10:31,979 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:10:31,979 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:10:31,981 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-06-20 22:10:31,995 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-06-20 22:10:31,996 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:10:31,996 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 22:10:31,997 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:10:31,997 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:10:32,001 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:32,001 INFO sqlalchemy.engine.base.Engine Thread-45 : (27,)
2020-06-20 22:10:32,002 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:10:32,002 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:10:32,006 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:10:32,007 INFO sqlalchemy.engine.base.Engine Thread-45 : (27,)
2020-06-20 22:10:32,007 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:10:32,009 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:10:32,009 INFO sqlalchemy.engine.base.Engine Thread-45 : ()
2020-06-20 22:10:32,010 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:10:32,010 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:10:32,010 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:10:32,013 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:10:32,013 INFO sqlalchemy.engine.base.Engine Thread-45 : ()
2020-06-20 22:10:32,014 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:10:32,015 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:10:32,015 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:10:32,018 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:10:32,018 INFO sqlalchemy.engine.base.Engine Thread-45 : (27,)
2020-06-20 22:10:32,018 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:10:32,018 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:10:32,020 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:10:32,020 INFO sqlalchemy.engine.base.Engine Thread-45 : (1,)
2020-06-20 22:10:32,020 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexgroups_1_group_members',)
2020-06-20 22:10:32,020 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row ('1',)
2020-06-20 22:10:32,025 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:10:32,025 INFO sqlalchemy.engine.base.Engine Thread-45 : ('1',)
2020-06-20 22:10:32,026 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:10:32,026 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:10:32,027 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:10:32,027 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-06-20 22:10:32,028 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:10:32,028 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (5,)
2020-06-20 22:10:32,029 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-06-20 22:11:15,317 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-06-20 22:11:15,318 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:11:15,318 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-06-20 22:11:15,319 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:11:15,320 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:11:15,328 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:11:15,328 INFO sqlalchemy.engine.base.Engine Thread-46 : (27,)
2020-06-20 22:11:15,329 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:11:15,330 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:11:15,331 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-06-20 22:11:15,407 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-06-20 22:11:15,408 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:11:15,408 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 22:11:15,409 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:11:15,409 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:11:15,413 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:11:15,414 INFO sqlalchemy.engine.base.Engine Thread-47 : (27,)
2020-06-20 22:11:15,414 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:11:15,414 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:11:15,419 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:11:15,419 INFO sqlalchemy.engine.base.Engine Thread-47 : (27,)
2020-06-20 22:11:15,419 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:11:15,421 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:11:15,421 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-06-20 22:11:15,422 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:11:15,422 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:11:15,422 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:11:15,425 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:11:15,426 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-06-20 22:11:15,426 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:11:15,427 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:11:15,427 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:11:15,430 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:11:15,430 INFO sqlalchemy.engine.base.Engine Thread-47 : (27,)
2020-06-20 22:11:15,431 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:11:15,431 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:11:15,432 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:11:15,432 INFO sqlalchemy.engine.base.Engine Thread-47 : (1,)
2020-06-20 22:11:15,432 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexgroups_1_group_members',)
2020-06-20 22:11:15,432 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row ('1',)
2020-06-20 22:11:15,438 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:11:15,438 INFO sqlalchemy.engine.base.Engine Thread-47 : ('1',)
2020-06-20 22:11:15,439 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:11:15,439 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:11:15,440 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:11:15,440 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-06-20 22:11:15,441 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:11:15,441 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (5,)
2020-06-20 22:11:15,460 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-06-20 22:11:19,057 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-06-20 22:11:19,058 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:11:19,058 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-06-20 22:11:19,059 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:11:19,059 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:11:19,067 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:11:19,067 INFO sqlalchemy.engine.base.Engine Thread-48 : (56,)
2020-06-20 22:11:19,068 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:11:19,069 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:11:19,070 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-06-20 22:11:19,083 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-06-20 22:11:19,084 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:11:19,084 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-20 22:11:19,084 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:11:19,085 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:11:19,089 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:11:19,089 INFO sqlalchemy.engine.base.Engine Thread-49 : (56,)
2020-06-20 22:11:19,090 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:11:19,090 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:11:19,094 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:11:19,094 INFO sqlalchemy.engine.base.Engine Thread-49 : (56,)
2020-06-20 22:11:19,095 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:11:19,097 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:11:19,097 INFO sqlalchemy.engine.base.Engine Thread-49 : ()
2020-06-20 22:11:19,097 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:11:19,098 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:11:19,098 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:11:19,101 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:11:19,101 INFO sqlalchemy.engine.base.Engine Thread-49 : ()
2020-06-20 22:11:19,102 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:11:19,102 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:11:19,103 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:11:19,105 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:11:19,105 INFO sqlalchemy.engine.base.Engine Thread-49 : (56,)
2020-06-20 22:11:19,106 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:11:19,106 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:11:19,107 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:11:19,107 INFO sqlalchemy.engine.base.Engine Thread-49 : (1,)
2020-06-20 22:11:19,107 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexgroups_1_group_members',)
2020-06-20 22:11:19,107 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row ('1',)
2020-06-20 22:11:19,112 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:11:19,112 INFO sqlalchemy.engine.base.Engine Thread-49 : ('1',)
2020-06-20 22:11:19,113 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:11:19,113 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:11:19,114 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:11:19,114 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-06-20 22:11:19,114 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:11:19,115 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (5,)
2020-06-20 22:11:19,116 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-06-20 22:12:05,044 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-06-20 22:12:05,045 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:12:05,045 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-06-20 22:12:05,046 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:12:05,046 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:12:05,057 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:12:05,057 INFO sqlalchemy.engine.base.Engine Thread-50 : (27,)
2020-06-20 22:12:05,057 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:12:05,058 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:12:05,060 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-06-20 22:12:05,072 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-06-20 22:12:05,073 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:12:05,073 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-06-20 22:12:05,074 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:12:05,074 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:12:05,078 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:12:05,078 INFO sqlalchemy.engine.base.Engine Thread-51 : (27,)
2020-06-20 22:12:05,079 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:12:05,079 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:12:05,083 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:12:05,083 INFO sqlalchemy.engine.base.Engine Thread-51 : (27,)
2020-06-20 22:12:05,084 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:12:05,085 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:12:05,085 INFO sqlalchemy.engine.base.Engine Thread-51 : ()
2020-06-20 22:12:05,086 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:12:05,086 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:12:05,086 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:12:05,089 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:12:05,089 INFO sqlalchemy.engine.base.Engine Thread-51 : ()
2020-06-20 22:12:05,090 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:12:05,090 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:12:05,090 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:12:05,093 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:12:05,093 INFO sqlalchemy.engine.base.Engine Thread-51 : (27,)
2020-06-20 22:12:05,093 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:12:05,093 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:12:05,094 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:12:05,094 INFO sqlalchemy.engine.base.Engine Thread-51 : (1,)
2020-06-20 22:12:05,095 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexgroups_1_group_members',)
2020-06-20 22:12:05,095 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row ('1',)
2020-06-20 22:12:05,100 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:12:05,100 INFO sqlalchemy.engine.base.Engine Thread-51 : ('1',)
2020-06-20 22:12:05,101 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:12:05,101 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:12:05,102 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:12:05,102 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-06-20 22:12:05,103 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:12:05,103 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (5,)
2020-06-20 22:12:05,122 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-06-20 22:12:07,144 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-06-20 22:12:07,145 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:12:07,145 INFO sqlalchemy.engine.base.Engine Thread-52 : (1, 1)
2020-06-20 22:12:07,146 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:12:07,146 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:12:07,154 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:12:07,154 INFO sqlalchemy.engine.base.Engine Thread-52 : (56,)
2020-06-20 22:12:07,154 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:12:07,155 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:12:07,156 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-06-20 22:12:07,172 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-06-20 22:12:07,173 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:12:07,173 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-06-20 22:12:07,178 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:12:07,179 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:12:07,183 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:12:07,183 INFO sqlalchemy.engine.base.Engine Thread-53 : (56,)
2020-06-20 22:12:07,183 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:12:07,183 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:12:07,187 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:12:07,187 INFO sqlalchemy.engine.base.Engine Thread-53 : (56,)
2020-06-20 22:12:07,188 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:12:07,190 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:12:07,190 INFO sqlalchemy.engine.base.Engine Thread-53 : ()
2020-06-20 22:12:07,191 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:12:07,192 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:12:07,192 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:12:07,195 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:12:07,196 INFO sqlalchemy.engine.base.Engine Thread-53 : ()
2020-06-20 22:12:07,197 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:12:07,197 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:12:07,198 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:12:07,200 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:12:07,201 INFO sqlalchemy.engine.base.Engine Thread-53 : (56,)
2020-06-20 22:12:07,201 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:12:07,201 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:12:07,202 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:12:07,202 INFO sqlalchemy.engine.base.Engine Thread-53 : (1,)
2020-06-20 22:12:07,203 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexgroups_1_group_members',)
2020-06-20 22:12:07,203 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row ('1',)
2020-06-20 22:12:07,208 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:12:07,208 INFO sqlalchemy.engine.base.Engine Thread-53 : ('1',)
2020-06-20 22:12:07,209 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:12:07,209 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:12:07,210 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:12:07,210 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-06-20 22:12:07,210 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:12:07,211 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (5,)
2020-06-20 22:12:07,212 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-06-20 22:13:20,165 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-06-20 22:13:20,167 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:13:20,167 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-06-20 22:13:20,167 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:13:20,168 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:13:20,177 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:20,177 INFO sqlalchemy.engine.base.Engine Thread-54 : (20,)
2020-06-20 22:13:20,178 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:13:20,179 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:13:20,181 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-06-20 22:13:20,306 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-06-20 22:13:20,307 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:13:20,307 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-06-20 22:13:20,308 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:13:20,308 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:13:20,313 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:20,313 INFO sqlalchemy.engine.base.Engine Thread-55 : (20,)
2020-06-20 22:13:20,314 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:13:20,314 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'test', 131, None)
2020-06-20 22:13:20,318 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:13:20,318 INFO sqlalchemy.engine.base.Engine Thread-55 : (20,)
2020-06-20 22:13:20,319 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:13:20,319 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 22:13:20,319 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-20 22:13:20,319 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-20 22:13:20,319 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-20 22:13:20,321 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:13:20,321 INFO sqlalchemy.engine.base.Engine Thread-55 : ()
2020-06-20 22:13:20,322 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:13:20,322 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:13:20,322 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:13:20,325 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:13:20,325 INFO sqlalchemy.engine.base.Engine Thread-55 : ()
2020-06-20 22:13:20,326 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:13:20,327 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:13:20,327 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:13:20,330 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:20,330 INFO sqlalchemy.engine.base.Engine Thread-55 : (20,)
2020-06-20 22:13:20,331 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:13:20,331 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:13:20,332 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:13:20,332 INFO sqlalchemy.engine.base.Engine Thread-55 : (1,)
2020-06-20 22:13:20,334 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('complexgroups_1_group_members',)
2020-06-20 22:13:20,334 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row ('1',)
2020-06-20 22:13:20,340 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:13:20,340 INFO sqlalchemy.engine.base.Engine Thread-55 : ('1',)
2020-06-20 22:13:20,340 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:13:20,341 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:13:20,342 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:13:20,342 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-06-20 22:13:20,342 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:13:20,342 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (5,)
2020-06-20 22:13:20,362 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-06-20 22:13:26,587 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-06-20 22:13:26,588 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:13:26,588 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-06-20 22:13:26,589 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:13:26,589 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:13:26,600 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:26,600 INFO sqlalchemy.engine.base.Engine Thread-56 : (57,)
2020-06-20 22:13:26,601 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:13:26,601 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:13:26,603 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-06-20 22:13:26,698 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-06-20 22:13:26,699 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:13:26,700 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-20 22:13:26,700 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:13:26,700 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:13:26,705 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:26,705 INFO sqlalchemy.engine.base.Engine Thread-57 : (57,)
2020-06-20 22:13:26,705 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:13:26,706 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:13:26,710 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:13:26,710 INFO sqlalchemy.engine.base.Engine Thread-57 : (57,)
2020-06-20 22:13:26,711 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:13:26,713 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:13:26,713 INFO sqlalchemy.engine.base.Engine Thread-57 : ()
2020-06-20 22:13:26,714 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:13:26,714 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:13:26,714 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:13:26,717 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:13:26,717 INFO sqlalchemy.engine.base.Engine Thread-57 : ()
2020-06-20 22:13:26,718 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:13:26,718 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:13:26,719 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:13:26,721 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:26,722 INFO sqlalchemy.engine.base.Engine Thread-57 : (57,)
2020-06-20 22:13:26,722 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:13:26,722 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:13:26,723 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:13:26,723 INFO sqlalchemy.engine.base.Engine Thread-57 : (1,)
2020-06-20 22:13:26,724 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexgroups_1_group_members',)
2020-06-20 22:13:26,724 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row ('1',)
2020-06-20 22:13:26,730 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:13:26,730 INFO sqlalchemy.engine.base.Engine Thread-57 : ('1',)
2020-06-20 22:13:26,730 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:13:26,730 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:13:26,731 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:13:26,731 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-06-20 22:13:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:13:26,732 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (5,)
2020-06-20 22:13:26,733 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-06-20 22:13:54,046 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-06-20 22:13:54,047 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:13:54,047 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-06-20 22:13:54,047 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:13:54,048 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:13:54,056 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:54,056 INFO sqlalchemy.engine.base.Engine Thread-58 : (27,)
2020-06-20 22:13:54,057 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:13:54,057 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:13:54,059 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-06-20 22:13:54,087 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-06-20 22:13:54,088 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:13:54,088 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 22:13:54,089 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:13:54,089 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:13:54,093 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:54,093 INFO sqlalchemy.engine.base.Engine Thread-59 : (27,)
2020-06-20 22:13:54,094 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:13:54,094 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:13:54,098 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:13:54,098 INFO sqlalchemy.engine.base.Engine Thread-59 : (27,)
2020-06-20 22:13:54,098 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:13:54,100 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:13:54,100 INFO sqlalchemy.engine.base.Engine Thread-59 : ()
2020-06-20 22:13:54,101 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:13:54,101 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:13:54,101 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:13:54,104 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:13:54,104 INFO sqlalchemy.engine.base.Engine Thread-59 : ()
2020-06-20 22:13:54,105 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:13:54,106 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:13:54,106 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:13:54,109 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:13:54,109 INFO sqlalchemy.engine.base.Engine Thread-59 : (27,)
2020-06-20 22:13:54,109 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:13:54,109 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:13:54,110 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:13:54,110 INFO sqlalchemy.engine.base.Engine Thread-59 : (1,)
2020-06-20 22:13:54,111 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('complexgroups_1_group_members',)
2020-06-20 22:13:54,111 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row ('1',)
2020-06-20 22:13:54,116 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:13:54,116 INFO sqlalchemy.engine.base.Engine Thread-59 : ('1',)
2020-06-20 22:13:54,117 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:13:54,117 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:13:54,118 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:13:54,118 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-06-20 22:13:54,118 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:13:54,118 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (5,)
2020-06-20 22:13:54,139 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-06-20 22:14:06,246 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-06-20 22:14:06,248 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:14:06,248 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-06-20 22:14:06,249 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:14:06,249 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:14:06,257 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:06,257 INFO sqlalchemy.engine.base.Engine Thread-60 : (27,)
2020-06-20 22:14:06,258 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:14:06,259 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:14:06,260 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-06-20 22:14:06,280 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-06-20 22:14:06,281 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:14:06,281 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 22:14:06,282 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:14:06,282 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:14:06,286 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:06,286 INFO sqlalchemy.engine.base.Engine Thread-61 : (27,)
2020-06-20 22:14:06,287 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:14:06,287 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:14:06,291 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:14:06,291 INFO sqlalchemy.engine.base.Engine Thread-61 : (27,)
2020-06-20 22:14:06,292 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:14:06,294 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:14:06,294 INFO sqlalchemy.engine.base.Engine Thread-61 : ()
2020-06-20 22:14:06,295 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:14:06,295 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:14:06,295 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:14:06,298 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:14:06,299 INFO sqlalchemy.engine.base.Engine Thread-61 : ()
2020-06-20 22:14:06,300 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:14:06,300 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:14:06,300 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:14:06,303 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:06,303 INFO sqlalchemy.engine.base.Engine Thread-61 : (27,)
2020-06-20 22:14:06,303 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:14:06,303 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:14:06,305 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:14:06,305 INFO sqlalchemy.engine.base.Engine Thread-61 : (1,)
2020-06-20 22:14:06,305 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexgroups_1_group_members',)
2020-06-20 22:14:06,305 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row ('1',)
2020-06-20 22:14:06,311 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:14:06,311 INFO sqlalchemy.engine.base.Engine Thread-61 : ('1',)
2020-06-20 22:14:06,312 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:14:06,312 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:14:06,313 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:14:06,313 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-06-20 22:14:06,314 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:14:06,314 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (5,)
2020-06-20 22:14:06,334 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-06-20 22:14:11,398 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-06-20 22:14:11,399 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:14:11,399 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-06-20 22:14:11,400 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:14:11,400 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:14:11,411 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:11,411 INFO sqlalchemy.engine.base.Engine Thread-62 : (56,)
2020-06-20 22:14:11,412 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:14:11,413 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:14:11,414 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-06-20 22:14:11,430 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-06-20 22:14:11,431 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:14:11,431 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-20 22:14:11,432 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:14:11,432 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:14:11,436 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:11,436 INFO sqlalchemy.engine.base.Engine Thread-63 : (56,)
2020-06-20 22:14:11,437 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:14:11,437 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:14:11,441 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:14:11,441 INFO sqlalchemy.engine.base.Engine Thread-63 : (56,)
2020-06-20 22:14:11,442 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:14:11,443 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:14:11,443 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-06-20 22:14:11,444 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:14:11,444 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:14:11,444 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:14:11,447 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:14:11,447 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-06-20 22:14:11,448 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:14:11,449 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:14:11,449 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:14:11,451 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:11,451 INFO sqlalchemy.engine.base.Engine Thread-63 : (56,)
2020-06-20 22:14:11,452 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:14:11,452 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:14:11,453 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:14:11,453 INFO sqlalchemy.engine.base.Engine Thread-63 : (1,)
2020-06-20 22:14:11,453 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexgroups_1_group_members',)
2020-06-20 22:14:11,454 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row ('1',)
2020-06-20 22:14:11,459 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:14:11,459 INFO sqlalchemy.engine.base.Engine Thread-63 : ('1',)
2020-06-20 22:14:11,459 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:14:11,459 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:14:11,461 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:14:11,461 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-06-20 22:14:11,461 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:14:11,461 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (5,)
2020-06-20 22:14:11,462 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-06-20 22:14:51,152 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-06-20 22:14:51,153 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:14:51,153 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-06-20 22:14:51,154 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:14:51,154 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:14:51,162 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:51,162 INFO sqlalchemy.engine.base.Engine Thread-64 : (57,)
2020-06-20 22:14:51,163 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:14:51,164 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:14:51,165 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-06-20 22:14:51,180 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-06-20 22:14:51,181 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:14:51,181 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-20 22:14:51,181 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:14:51,182 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:14:51,186 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:51,186 INFO sqlalchemy.engine.base.Engine Thread-65 : (57,)
2020-06-20 22:14:51,186 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:14:51,186 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:14:51,190 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:14:51,190 INFO sqlalchemy.engine.base.Engine Thread-65 : (57,)
2020-06-20 22:14:51,191 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:14:51,192 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:14:51,192 INFO sqlalchemy.engine.base.Engine Thread-65 : ()
2020-06-20 22:14:51,193 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:14:51,193 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:14:51,193 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:14:51,196 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:14:51,196 INFO sqlalchemy.engine.base.Engine Thread-65 : ()
2020-06-20 22:14:51,197 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:14:51,198 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:14:51,198 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:14:51,200 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:14:51,201 INFO sqlalchemy.engine.base.Engine Thread-65 : (57,)
2020-06-20 22:14:51,201 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:14:51,201 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:14:51,202 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:14:51,203 INFO sqlalchemy.engine.base.Engine Thread-65 : (1,)
2020-06-20 22:14:51,203 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexgroups_1_group_members',)
2020-06-20 22:14:51,203 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row ('1',)
2020-06-20 22:14:51,208 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:14:51,208 INFO sqlalchemy.engine.base.Engine Thread-65 : ('1',)
2020-06-20 22:14:51,209 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:14:51,209 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:14:51,210 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:14:51,211 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-06-20 22:14:51,211 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:14:51,211 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (5,)
2020-06-20 22:14:51,212 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-06-20 22:14:58,332 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-06-20 22:14:58,334 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 22:14:58,334 INFO sqlalchemy.engine.base.Engine Thread-66 : ('DATE', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-20 22:14:58,336 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 22:14:58,336 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (11, datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 22:14:58,336 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (12, datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 22:14:58,336 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (13, datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 22:14:58,336 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 22:14:58,336 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (58, datetime.datetime(2020, 7, 15, 2, 0), datetime.datetime(2020, 7, 15, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (59, datetime.datetime(2020, 7, 22, 2, 0), datetime.datetime(2020, 7, 22, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:14:58,337 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (60, datetime.datetime(2020, 7, 29, 2, 0), datetime.datetime(2020, 7, 29, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:14:58,342 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 22:14:58,342 INFO sqlalchemy.engine.base.Engine Thread-66 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-20 22:14:58,343 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:14:58,343 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 22:14:58,347 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 22:14:58,347 INFO sqlalchemy.engine.base.Engine Thread-66 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-06-20 22:14:58,348 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:14:58,348 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 22:14:58,350 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-06-20 22:14:58,415 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-06-20 22:14:58,416 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:14:58,416 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-06-20 22:14:58,417 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:14:58,417 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:14:58,418 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-06-20 22:15:03,661 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-06-20 22:15:03,663 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:03,663 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-06-20 22:15:03,664 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:03,664 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:03,675 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:03,675 INFO sqlalchemy.engine.base.Engine Thread-68 : (27,)
2020-06-20 22:15:03,676 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:15:03,676 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:15:03,678 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-06-20 22:15:03,692 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-06-20 22:15:03,693 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:03,693 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-06-20 22:15:03,694 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:03,694 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:03,697 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:03,698 INFO sqlalchemy.engine.base.Engine Thread-69 : (27,)
2020-06-20 22:15:03,698 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:15:03,699 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:15:03,702 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:15:03,702 INFO sqlalchemy.engine.base.Engine Thread-69 : (27,)
2020-06-20 22:15:03,703 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:15:03,705 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:15:03,705 INFO sqlalchemy.engine.base.Engine Thread-69 : ()
2020-06-20 22:15:03,705 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:15:03,705 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:15:03,705 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:15:03,708 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:15:03,708 INFO sqlalchemy.engine.base.Engine Thread-69 : ()
2020-06-20 22:15:03,709 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:15:03,710 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:15:03,710 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:15:03,713 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:03,713 INFO sqlalchemy.engine.base.Engine Thread-69 : (27,)
2020-06-20 22:15:03,713 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:15:03,713 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:15:03,714 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:15:03,714 INFO sqlalchemy.engine.base.Engine Thread-69 : (1,)
2020-06-20 22:15:03,715 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('complexgroups_1_group_members',)
2020-06-20 22:15:03,715 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row ('1',)
2020-06-20 22:15:03,720 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:15:03,720 INFO sqlalchemy.engine.base.Engine Thread-69 : ('1',)
2020-06-20 22:15:03,720 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:15:03,720 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:15:03,721 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:15:03,722 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-06-20 22:15:03,722 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:15:03,722 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (5,)
2020-06-20 22:15:03,723 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-06-20 22:15:29,536 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-06-20 22:15:29,537 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:29,537 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-06-20 22:15:29,538 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:29,538 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:29,546 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:29,546 INFO sqlalchemy.engine.base.Engine Thread-70 : (20,)
2020-06-20 22:15:29,547 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:15:29,548 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:15:29,549 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-06-20 22:15:29,566 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-06-20 22:15:29,566 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:29,567 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-06-20 22:15:29,567 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:29,567 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:29,571 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:29,571 INFO sqlalchemy.engine.base.Engine Thread-71 : (20,)
2020-06-20 22:15:29,572 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:15:29,572 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (20, 'BaU Zone 2', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'test', 131, None)
2020-06-20 22:15:29,576 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:15:29,576 INFO sqlalchemy.engine.base.Engine Thread-71 : (20,)
2020-06-20 22:15:29,577 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:15:29,577 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (32, 20, 'Test Booking BaU Zone 2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 17, 31, 27))
2020-06-20 22:15:29,577 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (33, 20, 'Test Booking Zone 2 #2', '123456', 'Bob', datetime.datetime(2020, 6, 14, 19, 30, 18))
2020-06-20 22:15:29,577 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (34, 20, 'Test Booking 3', '123456', 'philip', None)
2020-06-20 22:15:29,577 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (35, 20, 'Test Booking 4', '123456', 'philip', None)
2020-06-20 22:15:29,579 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:15:29,579 INFO sqlalchemy.engine.base.Engine Thread-71 : ()
2020-06-20 22:15:29,580 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:15:29,580 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:15:29,580 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:15:29,583 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:15:29,583 INFO sqlalchemy.engine.base.Engine Thread-71 : ()
2020-06-20 22:15:29,584 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:15:29,584 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:15:29,584 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:15:29,587 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:29,587 INFO sqlalchemy.engine.base.Engine Thread-71 : (20,)
2020-06-20 22:15:29,588 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:15:29,588 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:15:29,589 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:15:29,589 INFO sqlalchemy.engine.base.Engine Thread-71 : (1,)
2020-06-20 22:15:29,589 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('complexgroups_1_group_members',)
2020-06-20 22:15:29,589 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row ('1',)
2020-06-20 22:15:29,595 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:15:29,595 INFO sqlalchemy.engine.base.Engine Thread-71 : ('1',)
2020-06-20 22:15:29,595 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:15:29,595 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:15:29,596 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:15:29,597 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-06-20 22:15:29,597 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:15:29,597 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (5,)
2020-06-20 22:15:29,615 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-06-20 22:15:32,715 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-06-20 22:15:32,716 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:32,716 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-06-20 22:15:32,717 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:32,717 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:32,725 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:32,726 INFO sqlalchemy.engine.base.Engine Thread-72 : (57,)
2020-06-20 22:15:32,726 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:15:32,727 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:15:32,729 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-06-20 22:15:32,746 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-06-20 22:15:32,747 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:32,747 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-20 22:15:32,748 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:32,748 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:32,752 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:32,752 INFO sqlalchemy.engine.base.Engine Thread-73 : (57,)
2020-06-20 22:15:32,753 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:15:32,753 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:15:32,758 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:15:32,758 INFO sqlalchemy.engine.base.Engine Thread-73 : (57,)
2020-06-20 22:15:32,758 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:15:32,760 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:15:32,760 INFO sqlalchemy.engine.base.Engine Thread-73 : ()
2020-06-20 22:15:32,761 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:15:32,761 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:15:32,761 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:15:32,764 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:15:32,765 INFO sqlalchemy.engine.base.Engine Thread-73 : ()
2020-06-20 22:15:32,766 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:15:32,766 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:15:32,766 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:15:32,769 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:32,769 INFO sqlalchemy.engine.base.Engine Thread-73 : (57,)
2020-06-20 22:15:32,770 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:15:32,770 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:15:32,772 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:15:32,772 INFO sqlalchemy.engine.base.Engine Thread-73 : (1,)
2020-06-20 22:15:32,772 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('complexgroups_1_group_members',)
2020-06-20 22:15:32,772 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row ('1',)
2020-06-20 22:15:32,777 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:15:32,778 INFO sqlalchemy.engine.base.Engine Thread-73 : ('1',)
2020-06-20 22:15:32,778 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:15:32,778 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:15:32,779 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:15:32,779 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-06-20 22:15:32,780 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:15:32,780 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (5,)
2020-06-20 22:15:32,784 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-06-20 22:15:36,186 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-06-20 22:15:36,187 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:36,187 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-06-20 22:15:36,188 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:36,188 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:36,196 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:36,196 INFO sqlalchemy.engine.base.Engine Thread-74 : (56,)
2020-06-20 22:15:36,197 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:15:36,197 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:15:36,199 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-06-20 22:15:36,211 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-06-20 22:15:36,212 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:15:36,213 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-20 22:15:36,213 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:15:36,213 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:15:36,217 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:36,218 INFO sqlalchemy.engine.base.Engine Thread-75 : (56,)
2020-06-20 22:15:36,218 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:15:36,218 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:15:36,222 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:15:36,222 INFO sqlalchemy.engine.base.Engine Thread-75 : (56,)
2020-06-20 22:15:36,222 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:15:36,224 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:15:36,224 INFO sqlalchemy.engine.base.Engine Thread-75 : ()
2020-06-20 22:15:36,225 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:15:36,225 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:15:36,225 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:15:36,228 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:15:36,228 INFO sqlalchemy.engine.base.Engine Thread-75 : ()
2020-06-20 22:15:36,229 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:15:36,229 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:15:36,229 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:15:36,232 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:15:36,232 INFO sqlalchemy.engine.base.Engine Thread-75 : (56,)
2020-06-20 22:15:36,232 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:15:36,233 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:15:36,234 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:15:36,234 INFO sqlalchemy.engine.base.Engine Thread-75 : (1,)
2020-06-20 22:15:36,234 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexgroups_1_group_members',)
2020-06-20 22:15:36,234 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row ('1',)
2020-06-20 22:15:36,239 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:15:36,239 INFO sqlalchemy.engine.base.Engine Thread-75 : ('1',)
2020-06-20 22:15:36,240 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:15:36,240 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:15:36,241 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:15:36,241 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-06-20 22:15:36,241 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:15:36,242 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (5,)
2020-06-20 22:15:36,243 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-06-20 22:16:35,131 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-06-20 22:16:35,132 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:16:35,132 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-06-20 22:16:35,133 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:16:35,133 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:16:35,142 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:35,142 INFO sqlalchemy.engine.base.Engine Thread-76 : (27,)
2020-06-20 22:16:35,143 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:16:35,144 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:16:35,145 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-06-20 22:16:35,180 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-06-20 22:16:35,181 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:16:35,181 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-20 22:16:35,182 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:16:35,182 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:16:35,187 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:35,187 INFO sqlalchemy.engine.base.Engine Thread-77 : (27,)
2020-06-20 22:16:35,188 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:16:35,188 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:16:35,192 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:16:35,192 INFO sqlalchemy.engine.base.Engine Thread-77 : (27,)
2020-06-20 22:16:35,193 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:16:35,194 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:16:35,195 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-06-20 22:16:35,195 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:16:35,195 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:16:35,195 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:16:35,198 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:16:35,198 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-06-20 22:16:35,199 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:16:35,200 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:16:35,200 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:16:35,203 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:35,203 INFO sqlalchemy.engine.base.Engine Thread-77 : (27,)
2020-06-20 22:16:35,204 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:16:35,204 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:16:35,205 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:16:35,205 INFO sqlalchemy.engine.base.Engine Thread-77 : (1,)
2020-06-20 22:16:35,205 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexgroups_1_group_members',)
2020-06-20 22:16:35,205 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row ('1',)
2020-06-20 22:16:35,211 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:16:35,211 INFO sqlalchemy.engine.base.Engine Thread-77 : ('1',)
2020-06-20 22:16:35,211 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:16:35,211 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:16:35,212 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:16:35,212 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-06-20 22:16:35,213 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:16:35,213 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (5,)
2020-06-20 22:16:35,232 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-06-20 22:16:38,359 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-06-20 22:16:38,360 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:16:38,360 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-06-20 22:16:38,361 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:16:38,361 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:16:38,369 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:38,370 INFO sqlalchemy.engine.base.Engine Thread-78 : (56,)
2020-06-20 22:16:38,370 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:16:38,371 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:16:38,373 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-06-20 22:16:38,443 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-06-20 22:16:38,444 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:16:38,444 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-06-20 22:16:38,444 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:16:38,445 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:16:38,449 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:38,449 INFO sqlalchemy.engine.base.Engine Thread-79 : (56,)
2020-06-20 22:16:38,450 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:16:38,450 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:16:38,454 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:16:38,454 INFO sqlalchemy.engine.base.Engine Thread-79 : (56,)
2020-06-20 22:16:38,454 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:16:38,456 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:16:38,456 INFO sqlalchemy.engine.base.Engine Thread-79 : ()
2020-06-20 22:16:38,457 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:16:38,457 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:16:38,457 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:16:38,460 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:16:38,460 INFO sqlalchemy.engine.base.Engine Thread-79 : ()
2020-06-20 22:16:38,461 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:16:38,462 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:16:38,462 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:16:38,465 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:38,465 INFO sqlalchemy.engine.base.Engine Thread-79 : (56,)
2020-06-20 22:16:38,465 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:16:38,465 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:16:38,466 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:16:38,467 INFO sqlalchemy.engine.base.Engine Thread-79 : (1,)
2020-06-20 22:16:38,467 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('complexgroups_1_group_members',)
2020-06-20 22:16:38,467 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row ('1',)
2020-06-20 22:16:38,475 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:16:38,476 INFO sqlalchemy.engine.base.Engine Thread-79 : ('1',)
2020-06-20 22:16:38,476 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:16:38,476 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:16:38,477 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:16:38,477 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-06-20 22:16:38,478 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:16:38,478 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (5,)
2020-06-20 22:16:38,479 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-06-20 22:16:52,928 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-06-20 22:16:52,929 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:16:52,929 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-06-20 22:16:52,930 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:16:52,930 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:16:52,938 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:52,939 INFO sqlalchemy.engine.base.Engine Thread-80 : (27,)
2020-06-20 22:16:52,939 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:16:52,940 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:16:52,941 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-06-20 22:16:52,958 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-06-20 22:16:52,959 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:16:52,959 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-06-20 22:16:52,960 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:16:52,960 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:16:52,964 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:52,964 INFO sqlalchemy.engine.base.Engine Thread-81 : (27,)
2020-06-20 22:16:52,965 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:16:52,965 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:16:52,969 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:16:52,969 INFO sqlalchemy.engine.base.Engine Thread-81 : (27,)
2020-06-20 22:16:52,969 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:16:52,971 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:16:52,971 INFO sqlalchemy.engine.base.Engine Thread-81 : ()
2020-06-20 22:16:52,971 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:16:52,972 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:16:52,972 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:16:52,975 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:16:52,975 INFO sqlalchemy.engine.base.Engine Thread-81 : ()
2020-06-20 22:16:52,976 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:16:52,976 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:16:52,976 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:16:52,979 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:16:52,979 INFO sqlalchemy.engine.base.Engine Thread-81 : (27,)
2020-06-20 22:16:52,980 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:16:52,980 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:16:52,981 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:16:52,981 INFO sqlalchemy.engine.base.Engine Thread-81 : (1,)
2020-06-20 22:16:52,981 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexgroups_1_group_members',)
2020-06-20 22:16:52,982 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row ('1',)
2020-06-20 22:16:52,987 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:16:52,987 INFO sqlalchemy.engine.base.Engine Thread-81 : ('1',)
2020-06-20 22:16:52,987 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:16:52,987 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:16:52,988 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:16:52,989 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-06-20 22:16:52,989 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:16:52,989 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (5,)
2020-06-20 22:16:53,006 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-06-20 22:17:03,447 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-06-20 22:17:03,448 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:03,448 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-06-20 22:17:03,448 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:03,449 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:03,457 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:03,457 INFO sqlalchemy.engine.base.Engine Thread-82 : (56,)
2020-06-20 22:17:03,458 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:03,459 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:03,460 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-06-20 22:17:03,475 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-06-20 22:17:03,476 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:03,476 INFO sqlalchemy.engine.base.Engine Thread-83 : (1, 1)
2020-06-20 22:17:03,477 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:03,477 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:03,481 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:03,481 INFO sqlalchemy.engine.base.Engine Thread-83 : (56,)
2020-06-20 22:17:03,482 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:03,482 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:17:03,486 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:03,486 INFO sqlalchemy.engine.base.Engine Thread-83 : (56,)
2020-06-20 22:17:03,486 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:03,488 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:03,488 INFO sqlalchemy.engine.base.Engine Thread-83 : ()
2020-06-20 22:17:03,488 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:03,489 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:03,489 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:03,492 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:03,492 INFO sqlalchemy.engine.base.Engine Thread-83 : ()
2020-06-20 22:17:03,493 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:03,493 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:03,494 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:03,496 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:03,496 INFO sqlalchemy.engine.base.Engine Thread-83 : (56,)
2020-06-20 22:17:03,497 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:03,497 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:03,498 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:03,498 INFO sqlalchemy.engine.base.Engine Thread-83 : (1,)
2020-06-20 22:17:03,498 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:03,498 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row ('1',)
2020-06-20 22:17:03,504 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:03,504 INFO sqlalchemy.engine.base.Engine Thread-83 : ('1',)
2020-06-20 22:17:03,504 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:03,504 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:03,505 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:03,506 INFO sqlalchemy.engine.base.Engine Thread-83 : (1, 1)
2020-06-20 22:17:03,506 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:03,506 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (5,)
2020-06-20 22:17:03,524 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-06-20 22:17:05,489 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-06-20 22:17:05,490 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:05,490 INFO sqlalchemy.engine.base.Engine Thread-84 : (1, 1)
2020-06-20 22:17:05,491 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:05,491 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:05,499 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:05,500 INFO sqlalchemy.engine.base.Engine Thread-84 : (27,)
2020-06-20 22:17:05,500 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:05,501 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:05,502 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-06-20 22:17:05,515 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-06-20 22:17:05,516 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:05,516 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-06-20 22:17:05,516 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:05,517 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:05,521 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:05,521 INFO sqlalchemy.engine.base.Engine Thread-85 : (27,)
2020-06-20 22:17:05,521 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:05,522 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:17:05,526 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:05,526 INFO sqlalchemy.engine.base.Engine Thread-85 : (27,)
2020-06-20 22:17:05,526 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:05,528 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:05,528 INFO sqlalchemy.engine.base.Engine Thread-85 : ()
2020-06-20 22:17:05,529 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:05,529 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:05,529 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:05,532 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:05,532 INFO sqlalchemy.engine.base.Engine Thread-85 : ()
2020-06-20 22:17:05,533 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:05,533 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:05,533 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:05,536 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:05,536 INFO sqlalchemy.engine.base.Engine Thread-85 : (27,)
2020-06-20 22:17:05,536 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:05,536 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:05,537 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:05,538 INFO sqlalchemy.engine.base.Engine Thread-85 : (1,)
2020-06-20 22:17:05,538 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:05,538 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row ('1',)
2020-06-20 22:17:05,546 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:05,546 INFO sqlalchemy.engine.base.Engine Thread-85 : ('1',)
2020-06-20 22:17:05,546 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:05,547 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:05,548 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:05,548 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-06-20 22:17:05,548 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:05,548 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (5,)
2020-06-20 22:17:05,549 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-06-20 22:17:07,934 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-06-20 22:17:07,935 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:07,935 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-06-20 22:17:07,936 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:07,936 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:07,946 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:07,946 INFO sqlalchemy.engine.base.Engine Thread-86 : (56,)
2020-06-20 22:17:07,947 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:07,947 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:07,949 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-06-20 22:17:07,965 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-06-20 22:17:07,967 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:07,967 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-20 22:17:07,967 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:07,968 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:07,972 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:07,972 INFO sqlalchemy.engine.base.Engine Thread-87 : (56,)
2020-06-20 22:17:07,972 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:07,972 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:17:07,976 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:07,976 INFO sqlalchemy.engine.base.Engine Thread-87 : (56,)
2020-06-20 22:17:07,977 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:07,978 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:07,978 INFO sqlalchemy.engine.base.Engine Thread-87 : ()
2020-06-20 22:17:07,979 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:07,979 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:07,979 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:07,982 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:07,982 INFO sqlalchemy.engine.base.Engine Thread-87 : ()
2020-06-20 22:17:07,983 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:07,984 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:07,984 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:07,986 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:07,986 INFO sqlalchemy.engine.base.Engine Thread-87 : (56,)
2020-06-20 22:17:07,987 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:07,987 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:07,988 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:07,988 INFO sqlalchemy.engine.base.Engine Thread-87 : (1,)
2020-06-20 22:17:07,988 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:07,988 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row ('1',)
2020-06-20 22:17:07,994 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:07,994 INFO sqlalchemy.engine.base.Engine Thread-87 : ('1',)
2020-06-20 22:17:07,995 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:07,995 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:07,996 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:07,996 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-06-20 22:17:07,996 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:07,997 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (5,)
2020-06-20 22:17:07,998 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-06-20 22:17:10,950 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-06-20 22:17:10,951 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:10,951 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-06-20 22:17:10,952 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:10,952 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:10,961 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:10,961 INFO sqlalchemy.engine.base.Engine Thread-88 : (27,)
2020-06-20 22:17:10,962 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:10,962 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:10,964 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-06-20 22:17:10,975 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-06-20 22:17:10,976 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:10,977 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-20 22:17:10,977 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:10,977 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:10,982 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:10,982 INFO sqlalchemy.engine.base.Engine Thread-89 : (27,)
2020-06-20 22:17:10,983 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:10,983 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:17:10,987 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:10,987 INFO sqlalchemy.engine.base.Engine Thread-89 : (27,)
2020-06-20 22:17:10,988 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:10,990 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:10,990 INFO sqlalchemy.engine.base.Engine Thread-89 : ()
2020-06-20 22:17:10,990 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:10,991 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:10,991 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:10,994 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:10,994 INFO sqlalchemy.engine.base.Engine Thread-89 : ()
2020-06-20 22:17:10,995 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:10,996 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:10,996 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:10,999 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:10,999 INFO sqlalchemy.engine.base.Engine Thread-89 : (27,)
2020-06-20 22:17:11,000 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:11,000 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:11,001 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:11,001 INFO sqlalchemy.engine.base.Engine Thread-89 : (1,)
2020-06-20 22:17:11,002 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:11,002 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row ('1',)
2020-06-20 22:17:11,007 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:11,007 INFO sqlalchemy.engine.base.Engine Thread-89 : ('1',)
2020-06-20 22:17:11,008 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:11,008 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:11,009 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:11,009 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-06-20 22:17:11,009 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:11,009 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (5,)
2020-06-20 22:17:11,010 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-06-20 22:17:27,189 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-06-20 22:17:27,190 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:27,190 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-06-20 22:17:27,191 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:27,191 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:27,200 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:27,200 INFO sqlalchemy.engine.base.Engine Thread-90 : (56,)
2020-06-20 22:17:27,201 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:27,201 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:27,203 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-06-20 22:17:27,219 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-06-20 22:17:27,220 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:27,220 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-20 22:17:27,221 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:27,221 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:27,226 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:27,226 INFO sqlalchemy.engine.base.Engine Thread-91 : (56,)
2020-06-20 22:17:27,226 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:27,227 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 131, 'SCR123456')
2020-06-20 22:17:27,231 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:27,231 INFO sqlalchemy.engine.base.Engine Thread-91 : (56,)
2020-06-20 22:17:27,231 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:27,233 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:27,233 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-06-20 22:17:27,233 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:27,234 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:27,234 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:27,237 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:27,237 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-06-20 22:17:27,238 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:27,238 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:27,238 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:27,241 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:27,241 INFO sqlalchemy.engine.base.Engine Thread-91 : (56,)
2020-06-20 22:17:27,241 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:27,242 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:27,243 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:27,243 INFO sqlalchemy.engine.base.Engine Thread-91 : (1,)
2020-06-20 22:17:27,243 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:27,243 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row ('1',)
2020-06-20 22:17:27,251 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:27,251 INFO sqlalchemy.engine.base.Engine Thread-91 : ('1',)
2020-06-20 22:17:27,252 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:27,252 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:27,253 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:27,253 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-06-20 22:17:27,254 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:27,254 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (5,)
2020-06-20 22:17:27,271 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-06-20 22:17:29,442 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-06-20 22:17:29,443 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:29,443 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-06-20 22:17:29,444 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:29,444 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:29,452 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:29,453 INFO sqlalchemy.engine.base.Engine Thread-92 : (27,)
2020-06-20 22:17:29,453 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:29,454 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:29,455 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-06-20 22:17:29,466 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-06-20 22:17:29,467 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:29,467 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-20 22:17:29,468 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:29,468 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:29,472 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:29,472 INFO sqlalchemy.engine.base.Engine Thread-93 : (27,)
2020-06-20 22:17:29,473 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:29,473 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (27, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:17:29,477 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:29,477 INFO sqlalchemy.engine.base.Engine Thread-93 : (27,)
2020-06-20 22:17:29,478 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:29,480 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:29,480 INFO sqlalchemy.engine.base.Engine Thread-93 : ()
2020-06-20 22:17:29,480 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:29,481 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:29,481 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:29,484 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:29,484 INFO sqlalchemy.engine.base.Engine Thread-93 : ()
2020-06-20 22:17:29,485 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:29,485 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:29,486 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:29,489 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:29,489 INFO sqlalchemy.engine.base.Engine Thread-93 : (27,)
2020-06-20 22:17:29,489 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:29,489 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:29,490 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:29,490 INFO sqlalchemy.engine.base.Engine Thread-93 : (1,)
2020-06-20 22:17:29,491 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:29,491 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row ('1',)
2020-06-20 22:17:29,497 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:29,497 INFO sqlalchemy.engine.base.Engine Thread-93 : ('1',)
2020-06-20 22:17:29,497 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:29,497 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:29,499 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:29,499 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-06-20 22:17:29,499 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:29,499 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (5,)
2020-06-20 22:17:29,501 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-06-20 22:17:34,638 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-06-20 22:17:34,639 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:34,640 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-06-20 22:17:34,640 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:34,640 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:34,648 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:34,649 INFO sqlalchemy.engine.base.Engine Thread-94 : (57,)
2020-06-20 22:17:34,649 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:34,650 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:34,651 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-06-20 22:17:34,667 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-06-20 22:17:34,668 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:34,668 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-20 22:17:34,668 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:34,669 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:34,673 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:34,673 INFO sqlalchemy.engine.base.Engine Thread-95 : (57,)
2020-06-20 22:17:34,673 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:34,674 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:17:34,678 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:34,678 INFO sqlalchemy.engine.base.Engine Thread-95 : (57,)
2020-06-20 22:17:34,678 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:34,680 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:34,680 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-06-20 22:17:34,681 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:34,681 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:34,681 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:34,684 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:34,684 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-06-20 22:17:34,685 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:34,686 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:34,686 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:34,688 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:34,688 INFO sqlalchemy.engine.base.Engine Thread-95 : (57,)
2020-06-20 22:17:34,689 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:34,689 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:34,690 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:34,690 INFO sqlalchemy.engine.base.Engine Thread-95 : (1,)
2020-06-20 22:17:34,690 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:34,690 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row ('1',)
2020-06-20 22:17:34,696 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:34,696 INFO sqlalchemy.engine.base.Engine Thread-95 : ('1',)
2020-06-20 22:17:34,696 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:34,696 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:34,698 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:34,698 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-06-20 22:17:34,698 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:34,698 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (5,)
2020-06-20 22:17:34,699 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-06-20 22:17:38,663 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-06-20 22:17:38,664 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:38,664 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-06-20 22:17:38,665 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:38,665 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:38,675 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:38,675 INFO sqlalchemy.engine.base.Engine Thread-96 : (23,)
2020-06-20 22:17:38,675 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:38,676 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:38,677 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-06-20 22:17:38,695 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-06-20 22:17:38,696 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:38,696 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-06-20 22:17:38,696 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:38,697 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:38,701 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:38,701 INFO sqlalchemy.engine.base.Engine Thread-97 : (23,)
2020-06-20 22:17:38,702 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:38,702 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 131, None)
2020-06-20 22:17:38,706 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:38,706 INFO sqlalchemy.engine.base.Engine Thread-97 : (23,)
2020-06-20 22:17:38,707 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:38,709 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:38,709 INFO sqlalchemy.engine.base.Engine Thread-97 : ()
2020-06-20 22:17:38,709 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:38,710 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:38,710 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:38,713 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:38,713 INFO sqlalchemy.engine.base.Engine Thread-97 : ()
2020-06-20 22:17:38,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:38,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:38,714 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:38,717 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:38,717 INFO sqlalchemy.engine.base.Engine Thread-97 : (23,)
2020-06-20 22:17:38,717 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:38,717 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Zone 5 Complexes')
2020-06-20 22:17:38,718 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:38,719 INFO sqlalchemy.engine.base.Engine Thread-97 : (2,)
2020-06-20 22:17:38,719 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:38,719 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row ('1,2',)
2020-06-20 22:17:38,727 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s, %s)
2020-06-20 22:17:38,727 INFO sqlalchemy.engine.base.Engine Thread-97 : ('1', '2')
2020-06-20 22:17:38,728 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:38,728 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:38,728 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Made Up Fortigate')
2020-06-20 22:17:38,729 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:38,729 INFO sqlalchemy.engine.base.Engine Thread-97 : (2, 1)
2020-06-20 22:17:38,730 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:38,730 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2,)
2020-06-20 22:17:38,731 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-06-20 22:17:42,754 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-06-20 22:17:42,757 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 22:17:42,760 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-06-20 22:17:42,760 INFO sqlalchemy.engine.base.Engine Thread-98 : ('DATE', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0))
2020-06-20 22:17:42,762 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-06-20 22:17:42,764 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:42,766 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:42,766 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 22:17:42,767 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:42,766 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-06-20 22:17:42,767 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:42,767 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (58, datetime.datetime(2020, 7, 15, 2, 0), datetime.datetime(2020, 7, 15, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:42,767 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (59, datetime.datetime(2020, 7, 22, 2, 0), datetime.datetime(2020, 7, 22, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:42,767 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (60, datetime.datetime(2020, 7, 29, 2, 0), datetime.datetime(2020, 7, 29, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:42,766 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-06-20 22:17:42,773 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:42,773 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:42,774 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:42,774 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:42,772 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 22:17:42,797 INFO sqlalchemy.engine.base.Engine Thread-98 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0))
2020-06-20 22:17:42,791 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:42,799 INFO sqlalchemy.engine.base.Engine Thread-100 : (56, 1)
2020-06-20 22:17:42,798 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:42,799 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:17:42,800 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:42,800 INFO sqlalchemy.engine.base.Engine Thread-99 : (57, 1)
2020-06-20 22:17:42,805 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 22:17:42,807 INFO sqlalchemy.engine.base.Engine Thread-98 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0))
2020-06-20 22:17:42,807 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:42,808 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:42,810 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-06-20 22:17:42,809 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:17:42,806 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:42,812 INFO sqlalchemy.engine.base.Engine Thread-98 : ROLLBACK
2020-06-20 22:17:42,813 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-06-20 22:17:42,854 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-06-20 22:17:42,855 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:42,855 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-06-20 22:17:42,856 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:42,856 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:42,864 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-06-20 22:17:42,865 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:42,865 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-06-20 22:17:42,871 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:42,872 INFO sqlalchemy.engine.base.Engine Thread-101 : (56, 1)
2020-06-20 22:17:42,872 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:42,872 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:42,886 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-06-20 22:17:42,887 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:42,888 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-06-20 22:17:42,891 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:42,891 INFO sqlalchemy.engine.base.Engine Thread-102 : (57, 1)
2020-06-20 22:17:42,891 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:42,892 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:42,892 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:42,899 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:42,905 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:42,906 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:42,913 INFO sqlalchemy.engine.base.Engine Thread-103 : (59, 1)
2020-06-20 22:17:42,909 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-06-20 22:17:42,913 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:42,911 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-06-20 22:17:42,914 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:42,917 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-06-20 22:17:42,916 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:42,916 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-06-20 22:17:42,917 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:42,918 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (59, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 22, 2, 0), datetime.datetime(2020, 7, 22, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:42,921 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-06-20 22:17:42,919 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:42,919 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-06-20 22:17:42,915 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-06-20 22:17:42,922 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:42,928 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:42,934 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:42,940 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:42,947 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:42,948 INFO sqlalchemy.engine.base.Engine Thread-104 : (58, 1)
2020-06-20 22:17:42,948 INFO sqlalchemy.engine.base.Engine Thread-105 : (60, 1)
2020-06-20 22:17:42,949 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:42,950 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:42,951 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (60, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 29, 2, 0), datetime.datetime(2020, 7, 29, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:42,952 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (58, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 15, 2, 0), datetime.datetime(2020, 7, 15, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:42,954 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-06-20 22:17:42,955 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-06-20 22:17:43,841 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-06-20 22:17:43,842 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:43,842 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-06-20 22:17:43,843 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:43,844 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:43,852 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:43,852 INFO sqlalchemy.engine.base.Engine Thread-106 : (57,)
2020-06-20 22:17:43,853 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:17:43,854 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:17:43,856 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-06-20 22:17:43,870 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-06-20 22:17:43,871 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:43,871 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-20 22:17:43,872 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:43,872 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:43,876 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:43,877 INFO sqlalchemy.engine.base.Engine Thread-107 : (57,)
2020-06-20 22:17:43,877 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:17:43,877 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, None)
2020-06-20 22:17:43,882 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:17:43,882 INFO sqlalchemy.engine.base.Engine Thread-107 : (57,)
2020-06-20 22:17:43,883 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:17:43,884 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:17:43,885 INFO sqlalchemy.engine.base.Engine Thread-107 : ()
2020-06-20 22:17:43,885 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:17:43,885 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:43,885 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:43,889 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:17:43,889 INFO sqlalchemy.engine.base.Engine Thread-107 : ()
2020-06-20 22:17:43,890 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:17:43,890 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:43,891 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:17:43,894 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:17:43,894 INFO sqlalchemy.engine.base.Engine Thread-107 : (57,)
2020-06-20 22:17:43,894 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:17:43,894 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:17:43,895 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:17:43,896 INFO sqlalchemy.engine.base.Engine Thread-107 : (1,)
2020-06-20 22:17:43,896 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('complexgroups_1_group_members',)
2020-06-20 22:17:43,896 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row ('1',)
2020-06-20 22:17:43,905 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:17:43,905 INFO sqlalchemy.engine.base.Engine Thread-107 : ('1',)
2020-06-20 22:17:43,906 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:17:43,906 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:17:43,907 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:17:43,907 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-06-20 22:17:43,907 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:17:43,908 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (5,)
2020-06-20 22:17:43,909 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-06-20 22:17:48,329 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-06-20 22:17:48,331 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,331 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-06-20 22:17:48,335 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-06-20 22:17:48,337 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,337 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 22:17:48,340 INFO sqlalchemy.engine.base.Engine Thread-108 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:17:48,340 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,340 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-06-20 22:17:48,346 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,347 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-06-20 22:17:48,352 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,352 INFO sqlalchemy.engine.base.Engine Thread-109 : (56, 1)
2020-06-20 22:17:48,352 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 22:17:48,352 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 22:17:48,353 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,354 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:48,353 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 22:17:48,353 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,356 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,356 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 22:17:48,366 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 22:17:48,366 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,366 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:17:48,367 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:17:48,366 INFO sqlalchemy.engine.base.Engine Thread-110 : (57, 1)
2020-06-20 22:17:48,367 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:48,367 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:48,367 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:17:48,355 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-06-20 22:17:48,371 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 22:17:48,372 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,373 INFO sqlalchemy.engine.base.Engine Thread-108 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:17:48,374 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:48,375 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:17:48,376 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-06-20 22:17:48,376 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 22:17:48,380 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 22:17:48,381 INFO sqlalchemy.engine.base.Engine Thread-108 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:17:48,382 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:17:48,382 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 22:17:48,383 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-06-20 22:17:48,411 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-06-20 22:17:48,413 INFO sqlalchemy.engine.base.Engine Thread-112 : BEGIN (implicit)
2020-06-20 22:17:48,415 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,416 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,417 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-06-20 22:17:48,419 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,418 INFO sqlalchemy.engine.base.Engine Thread-112 : (1, 1)
2020-06-20 22:17:48,419 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,418 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-06-20 22:17:48,433 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,427 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-06-20 22:17:48,425 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,433 INFO sqlalchemy.engine.base.Engine Thread-113 : (1, 1)
2020-06-20 22:17:48,435 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,439 INFO sqlalchemy.engine.base.Engine Thread-111 : (15, 1)
2020-06-20 22:17:48,439 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,439 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,437 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-06-20 22:17:48,440 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-06-20 22:17:48,446 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,451 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,457 INFO sqlalchemy.engine.base.Engine Thread-112 : (19, 1)
2020-06-20 22:17:48,452 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,458 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-06-20 22:17:48,457 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, None, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:17:48,457 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,451 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,455 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-06-20 22:17:48,462 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,461 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-06-20 22:17:48,461 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,461 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,462 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-06-20 22:17:48,463 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,459 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,497 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, None, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:17:48,493 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-06-20 22:17:48,501 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,494 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,496 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,474 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,517 INFO sqlalchemy.engine.base.Engine Thread-114 : (21, 1)
2020-06-20 22:17:48,496 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,518 INFO sqlalchemy.engine.base.Engine Thread-113 : (20, 1)
2020-06-20 22:17:48,519 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,517 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,517 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,531 INFO sqlalchemy.engine.base.Engine Thread-115 : (22, 1)
2020-06-20 22:17:48,498 INFO sqlalchemy.engine.base.Engine Thread-112 : ROLLBACK
2020-06-20 22:17:48,519 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,520 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, None, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:17:48,536 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-06-20 22:17:48,533 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,536 INFO sqlalchemy.engine.base.Engine Thread-116 : (23, 1)
2020-06-20 22:17:48,502 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-06-20 22:17:48,534 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:48,537 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,538 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-06-20 22:17:48,539 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,539 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,540 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:48,541 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,543 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:17:48,544 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-06-20 22:17:48,547 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-06-20 22:17:48,565 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,560 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,566 INFO sqlalchemy.engine.base.Engine Thread-117 : (27, 1)
2020-06-20 22:17:48,564 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-06-20 22:17:48,565 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-06-20 22:17:48,568 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,563 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-06-20 22:17:48,569 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,568 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,550 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-06-20 22:17:48,568 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,569 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-06-20 22:17:48,581 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,586 INFO sqlalchemy.engine.base.Engine Thread-118 : (56, 1)
2020-06-20 22:17:48,583 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-06-20 22:17:48,587 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,588 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-06-20 22:17:48,586 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,588 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,588 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,600 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:48,584 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:48,613 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-06-20 22:17:48,605 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,585 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:48,614 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-06-20 22:17:48,613 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-06-20 22:17:48,614 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,612 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,631 INFO sqlalchemy.engine.base.Engine Thread-120 : (31, 1)
2020-06-20 22:17:48,626 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:48,637 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:48,649 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 22:17:48,649 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,651 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:48,655 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 22:17:48,656 INFO sqlalchemy.engine.base.Engine Thread-121 : (30, 1)
2020-06-20 22:17:48,656 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-06-20 22:17:48,655 INFO sqlalchemy.engine.base.Engine Thread-119 : (57, 1)
2020-06-20 22:17:48,658 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:17:48,657 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 22:17:48,659 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:17:48,661 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:17:48,662 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-06-20 22:17:48,663 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-06-20 22:17:51,452 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-06-20 22:17:51,453 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:51,453 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-06-20 22:17:51,454 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,454 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,456 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:17:51,456 INFO sqlalchemy.engine.base.Engine Thread-122 : ('philip', 1, 1)
2020-06-20 22:17:51,457 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,457 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,459 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:17:51,459 INFO sqlalchemy.engine.base.Engine Thread-122 : (132,)
2020-06-20 22:17:51,460 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:17:51,460 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 22:17:51,460 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 22:17:51,460 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 22:17:51,460 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 22:17:51,469 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 22:17:51,469 INFO sqlalchemy.engine.base.Engine Thread-122 : (datetime.datetime(2020, 6, 20, 22, 17, 51, 461037), datetime.datetime(2020, 7, 4, 22, 17, 51, 461037), datetime.datetime(2020, 6, 20, 22, 17, 51, 461037), datetime.datetime(2020, 7, 4, 22, 17, 51, 461037), datetime.datetime(2020, 6, 20, 22, 17, 51, 461037), datetime.datetime(2020, 7, 4, 22, 17, 51, 461037))
2020-06-20 22:17:51,470 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 22:17:51,470 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 22:17:51,488 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:17:51,488 INFO sqlalchemy.engine.base.Engine Thread-122 : ('philip', 1, 1)
2020-06-20 22:17:51,489 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,489 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,491 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-06-20 22:17:51,773 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-06-20 22:17:51,774 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:51,774 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-06-20 22:17:51,774 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,775 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,776 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-06-20 22:17:51,779 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-06-20 22:17:51,781 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:51,781 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-06-20 22:17:51,782 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,782 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,783 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-06-20 22:17:51,788 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-06-20 22:17:51,789 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:51,790 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-06-20 22:17:51,792 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-06-20 22:17:51,793 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:51,793 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-06-20 22:17:51,793 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,794 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,794 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,795 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,796 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-06-20 22:17:51,797 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-06-20 22:17:51,833 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-06-20 22:17:51,834 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:51,834 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-06-20 22:17:51,835 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:51,835 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:51,836 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-06-20 22:17:55,109 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-06-20 22:17:55,110 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:55,110 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-06-20 22:17:55,110 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,111 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,113 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:17:55,113 INFO sqlalchemy.engine.base.Engine Thread-137 : ('philip', 1, 1)
2020-06-20 22:17:55,114 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,114 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,116 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:17:55,116 INFO sqlalchemy.engine.base.Engine Thread-137 : (132,)
2020-06-20 22:17:55,116 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:17:55,116 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 22:17:55,117 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 22:17:55,117 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 22:17:55,117 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 22:17:55,125 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 22:17:55,126 INFO sqlalchemy.engine.base.Engine Thread-137 : (datetime.datetime(2019, 6, 22, 22, 17, 55, 117486), datetime.datetime(2021, 6, 19, 22, 17, 55, 117497), datetime.datetime(2019, 6, 22, 22, 17, 55, 117486), datetime.datetime(2021, 6, 19, 22, 17, 55, 117497), datetime.datetime(2019, 6, 22, 22, 17, 55, 117486), datetime.datetime(2021, 6, 19, 22, 17, 55, 117497))
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Production', 'Heightened Awareness Period (HAP)')
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-20 22:17:55,127 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (57, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (58, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 15, 2, 0), datetime.datetime(2020, 7, 15, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (59, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 22, 2, 0), datetime.datetime(2020, 7, 22, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,128 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (60, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 29, 2, 0), datetime.datetime(2020, 7, 29, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:17:55,133 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:17:55,133 INFO sqlalchemy.engine.base.Engine Thread-137 : ('philip', 1, 1)
2020-06-20 22:17:55,134 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,134 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,139 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-06-20 22:17:55,389 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-06-20 22:17:55,390 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:55,390 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-06-20 22:17:55,391 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,391 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,392 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-06-20 22:17:55,455 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-06-20 22:17:55,456 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:55,456 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-06-20 22:17:55,458 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-06-20 22:17:55,459 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,460 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:55,461 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,464 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-06-20 22:17:55,469 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:55,467 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-06-20 22:17:55,470 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:17:55,470 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-06-20 22:17:55,469 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-06-20 22:17:55,468 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-06-20 22:17:55,465 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-06-20 22:17:55,471 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,472 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,472 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,473 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,473 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:17:55,476 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:17:55,476 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-06-20 22:17:55,477 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-06-20 22:17:55,475 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-06-20 22:18:06,563 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-06-20 22:18:06,564 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:06,564 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-06-20 22:18:06,565 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,565 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,567 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:06,567 INFO sqlalchemy.engine.base.Engine Thread-152 : ('philip', 1, 1)
2020-06-20 22:18:06,568 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,568 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,570 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 22:18:06,570 INFO sqlalchemy.engine.base.Engine Thread-152 : ('56', 1)
2020-06-20 22:18:06,571 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 22:18:06,571 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456')
2020-06-20 22:18:06,574 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:06,574 INFO sqlalchemy.engine.base.Engine Thread-152 : (82,)
2020-06-20 22:18:06,574 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:06,575 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:18:06,575 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 22:18:06,575 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 22:18:06,576 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 22:18:06,576 INFO sqlalchemy.engine.base.Engine Thread-152 : (1,)
2020-06-20 22:18:06,577 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:06,577 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 22:18:06,577 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 22:18:06,578 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 22:18:06,578 INFO sqlalchemy.engine.base.Engine Thread-152 : ()
2020-06-20 22:18:06,579 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:18:06,579 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:06,579 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:06,580 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 22:18:06,580 INFO sqlalchemy.engine.base.Engine Thread-152 : (127, 0)
2020-06-20 22:18:06,581 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:06,581 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:06,581 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:06,581 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:06,581 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 22:18:06,583 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:06,583 INFO sqlalchemy.engine.base.Engine Thread-152 : (92,)
2020-06-20 22:18:06,583 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:06,583 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:18:06,583 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:18:06,584 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:18:06,584 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:18:06,623 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:06,623 INFO sqlalchemy.engine.base.Engine Thread-152 : ('philip', 1, 1)
2020-06-20 22:18:06,624 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,624 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,627 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-06-20 22:18:06,858 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-06-20 22:18:06,859 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:06,860 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-06-20 22:18:06,860 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,860 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,862 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-06-20 22:18:06,865 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-06-20 22:18:06,867 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-06-20 22:18:06,869 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:06,870 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:06,870 INFO sqlalchemy.engine.base.Engine Thread-163 : (1, 1)
2020-06-20 22:18:06,871 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-06-20 22:18:06,871 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,874 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-06-20 22:18:06,875 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,876 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,883 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,882 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-06-20 22:18:06,877 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:06,884 INFO sqlalchemy.engine.base.Engine Thread-165 : (1, 1)
2020-06-20 22:18:06,884 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-06-20 22:18:06,885 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,885 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,886 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-06-20 22:18:06,915 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-06-20 22:18:06,916 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:06,916 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-06-20 22:18:06,917 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:06,917 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:06,918 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-06-20 22:18:09,323 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-06-20 22:18:09,324 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:09,324 INFO sqlalchemy.engine.base.Engine Thread-167 : (1, 1)
2020-06-20 22:18:09,325 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,325 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,327 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:09,327 INFO sqlalchemy.engine.base.Engine Thread-167 : ('philip', 1, 1)
2020-06-20 22:18:09,328 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,328 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,330 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:09,330 INFO sqlalchemy.engine.base.Engine Thread-167 : (132,)
2020-06-20 22:18:09,330 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:09,331 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 22:18:09,331 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 22:18:09,331 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 22:18:09,331 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 22:18:09,340 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 22:18:09,340 INFO sqlalchemy.engine.base.Engine Thread-167 : (datetime.datetime(2020, 6, 20, 22, 18, 9, 331775), datetime.datetime(2020, 7, 4, 22, 18, 9, 331775), datetime.datetime(2020, 6, 20, 22, 18, 9, 331775), datetime.datetime(2020, 7, 4, 22, 18, 9, 331775), datetime.datetime(2020, 6, 20, 22, 18, 9, 331775), datetime.datetime(2020, 7, 4, 22, 18, 9, 331775))
2020-06-20 22:18:09,341 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 22:18:09,341 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 22:18:09,345 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:09,345 INFO sqlalchemy.engine.base.Engine Thread-167 : ('philip', 1, 1)
2020-06-20 22:18:09,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,346 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,348 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-06-20 22:18:09,596 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-06-20 22:18:09,598 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:09,598 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-06-20 22:18:09,601 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-06-20 22:18:09,601 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,605 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,605 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:09,609 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-06-20 22:18:09,606 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-06-20 22:18:09,609 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-06-20 22:18:09,604 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-06-20 22:18:09,610 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,613 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,613 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:09,614 INFO sqlalchemy.engine.base.Engine Thread-179 : (1, 1)
2020-06-20 22:18:09,614 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-06-20 22:18:09,612 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:09,615 INFO sqlalchemy.engine.base.Engine Thread-180 : (1, 1)
2020-06-20 22:18:09,615 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,616 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,617 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-06-20 22:18:09,617 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,618 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,619 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-06-20 22:18:09,650 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-06-20 22:18:09,651 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:09,651 INFO sqlalchemy.engine.base.Engine Thread-181 : (1, 1)
2020-06-20 22:18:09,652 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:09,652 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:09,653 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-06-20 22:18:12,523 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-06-20 22:18:12,524 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:12,524 INFO sqlalchemy.engine.base.Engine Thread-182 : (1, 1)
2020-06-20 22:18:12,525 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,525 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,527 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:12,528 INFO sqlalchemy.engine.base.Engine Thread-182 : ('philip', 1, 1)
2020-06-20 22:18:12,528 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,528 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,531 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:12,531 INFO sqlalchemy.engine.base.Engine Thread-182 : (132,)
2020-06-20 22:18:12,532 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:12,532 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 22:18:12,532 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 22:18:12,532 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 22:18:12,532 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 22:18:12,541 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 22:18:12,541 INFO sqlalchemy.engine.base.Engine Thread-182 : (datetime.datetime(2019, 6, 22, 22, 18, 12, 532965), datetime.datetime(2021, 6, 19, 22, 18, 12, 532975), datetime.datetime(2019, 6, 22, 22, 18, 12, 532965), datetime.datetime(2021, 6, 19, 22, 18, 12, 532975), datetime.datetime(2019, 6, 22, 22, 18, 12, 532965), datetime.datetime(2021, 6, 19, 22, 18, 12, 532975))
2020-06-20 22:18:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 22:18:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:18:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:18:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-20 22:18:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Production', 'Heightened Awareness Period (HAP)')
2020-06-20 22:18:12,542 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'Yes', 'Informational')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (20, 'BaU Zone 2', 'GBR,IND', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (21, 'Locked date', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (22, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (23, 'Zone 5 BAU', 'GBR,IND', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 22:18:12,543 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (57, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,544 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (58, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 15, 2, 0), datetime.datetime(2020, 7, 15, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,544 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (59, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 22, 2, 0), datetime.datetime(2020, 7, 22, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,544 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (60, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 29, 2, 0), datetime.datetime(2020, 7, 29, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-06-20 22:18:12,548 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:12,548 INFO sqlalchemy.engine.base.Engine Thread-182 : ('philip', 1, 1)
2020-06-20 22:18:12,549 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,549 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,554 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-06-20 22:18:12,801 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-06-20 22:18:12,802 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:12,802 INFO sqlalchemy.engine.base.Engine Thread-192 : (1, 1)
2020-06-20 22:18:12,803 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,803 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,804 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-06-20 22:18:12,866 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-06-20 22:18:12,867 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:12,867 INFO sqlalchemy.engine.base.Engine Thread-193 : (1, 1)
2020-06-20 22:18:12,868 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,868 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,869 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-06-20 22:18:12,872 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-06-20 22:18:12,874 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:12,874 INFO sqlalchemy.engine.base.Engine Thread-195 : (1, 1)
2020-06-20 22:18:12,874 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,875 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,876 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-06-20 22:18:12,879 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-06-20 22:18:12,881 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-06-20 22:18:12,884 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:12,885 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:12,885 INFO sqlalchemy.engine.base.Engine Thread-194 : (1, 1)
2020-06-20 22:18:12,885 INFO sqlalchemy.engine.base.Engine Thread-196 : (1, 1)
2020-06-20 22:18:12,886 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,887 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,887 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:12,888 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-06-20 22:18:12,888 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:12,890 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-06-20 22:18:22,796 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-06-20 22:18:22,797 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:22,797 INFO sqlalchemy.engine.base.Engine Thread-197 : (1, 1)
2020-06-20 22:18:22,797 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:22,798 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:22,800 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:22,800 INFO sqlalchemy.engine.base.Engine Thread-197 : ('philip', 1, 1)
2020-06-20 22:18:22,800 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:22,801 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:22,802 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 22:18:22,802 INFO sqlalchemy.engine.base.Engine Thread-197 : ('57', 1)
2020-06-20 22:18:22,803 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 22:18:22,803 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None)
2020-06-20 22:18:22,805 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:22,805 INFO sqlalchemy.engine.base.Engine Thread-197 : (82,)
2020-06-20 22:18:22,806 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:22,806 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:18:22,806 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 22:18:22,806 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 22:18:22,807 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 22:18:22,808 INFO sqlalchemy.engine.base.Engine Thread-197 : (1,)
2020-06-20 22:18:22,808 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:22,808 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 22:18:22,808 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 22:18:22,809 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 22:18:22,809 INFO sqlalchemy.engine.base.Engine Thread-197 : ()
2020-06-20 22:18:22,810 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:18:22,810 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:22,810 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:22,811 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 22:18:22,811 INFO sqlalchemy.engine.base.Engine Thread-197 : (127, 0)
2020-06-20 22:18:22,812 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:22,812 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:22,812 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:22,812 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:22,812 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 22:18:22,814 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:22,814 INFO sqlalchemy.engine.base.Engine Thread-197 : (92,)
2020-06-20 22:18:22,814 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:22,815 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:18:22,815 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:18:22,815 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:18:22,815 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:18:22,820 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:22,820 INFO sqlalchemy.engine.base.Engine Thread-197 : ('philip', 1, 1)
2020-06-20 22:18:22,820 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:22,820 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:22,823 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-06-20 22:18:23,067 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-06-20 22:18:23,068 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:23,068 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-06-20 22:18:23,071 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-06-20 22:18:23,071 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:23,073 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:23,072 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:23,077 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-06-20 22:18:23,077 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-06-20 22:18:23,082 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:23,080 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-06-20 22:18:23,081 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:23,083 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:23,074 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-06-20 22:18:23,083 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:23,082 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-06-20 22:18:23,085 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-06-20 22:18:23,086 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-06-20 22:18:23,087 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:23,088 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:23,089 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-06-20 22:18:23,090 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:23,090 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:23,091 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-06-20 22:18:23,127 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-06-20 22:18:23,128 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:23,128 INFO sqlalchemy.engine.base.Engine Thread-211 : (1, 1)
2020-06-20 22:18:23,129 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:23,129 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:23,130 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-06-20 22:18:25,316 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-06-20 22:18:25,317 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:25,317 INFO sqlalchemy.engine.base.Engine Thread-212 : (1, 1)
2020-06-20 22:18:25,317 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,318 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,320 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:25,320 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-06-20 22:18:25,321 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,321 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,322 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 22:18:25,322 INFO sqlalchemy.engine.base.Engine Thread-212 : ('57', 1)
2020-06-20 22:18:25,323 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 22:18:25,323 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None)
2020-06-20 22:18:25,327 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:25,327 INFO sqlalchemy.engine.base.Engine Thread-212 : (82,)
2020-06-20 22:18:25,327 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:25,327 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:18:25,328 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 22:18:25,328 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 22:18:25,329 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 22:18:25,329 INFO sqlalchemy.engine.base.Engine Thread-212 : (1,)
2020-06-20 22:18:25,329 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:25,330 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 22:18:25,330 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 22:18:25,331 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 22:18:25,331 INFO sqlalchemy.engine.base.Engine Thread-212 : ()
2020-06-20 22:18:25,331 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:18:25,332 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:25,332 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:25,334 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 22:18:25,334 INFO sqlalchemy.engine.base.Engine Thread-212 : (127, 0)
2020-06-20 22:18:25,334 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:25,334 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:25,334 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:25,335 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:25,335 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 22:18:25,336 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:25,336 INFO sqlalchemy.engine.base.Engine Thread-212 : (92,)
2020-06-20 22:18:25,336 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:25,337 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:18:25,337 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:18:25,337 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:18:25,337 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:18:25,344 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:25,344 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-06-20 22:18:25,345 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,345 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,349 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-06-20 22:18:25,599 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-06-20 22:18:25,600 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:25,600 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-06-20 22:18:25,603 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-06-20 22:18:25,603 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,610 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,607 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-06-20 22:18:25,612 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:25,612 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-06-20 22:18:25,611 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-06-20 22:18:25,604 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:25,614 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-06-20 22:18:25,610 INFO sqlalchemy.engine.base.Engine Thread-225 : BEGIN (implicit)
2020-06-20 22:18:25,615 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:25,615 INFO sqlalchemy.engine.base.Engine Thread-225 : (1, 1)
2020-06-20 22:18:25,615 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,616 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,613 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,617 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-06-20 22:18:25,617 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,618 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,617 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,620 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-06-20 22:18:25,619 INFO sqlalchemy.engine.base.Engine Thread-225 : ROLLBACK
2020-06-20 22:18:25,647 INFO sqlalchemy.engine.base.Engine Thread-226 : BEGIN (implicit)
2020-06-20 22:18:25,648 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:25,648 INFO sqlalchemy.engine.base.Engine Thread-226 : (1, 1)
2020-06-20 22:18:25,648 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:25,648 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:25,649 INFO sqlalchemy.engine.base.Engine Thread-226 : ROLLBACK
2020-06-20 22:18:28,725 INFO sqlalchemy.engine.base.Engine Thread-227 : BEGIN (implicit)
2020-06-20 22:18:28,726 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:28,727 INFO sqlalchemy.engine.base.Engine Thread-227 : (1, 1)
2020-06-20 22:18:28,727 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:28,727 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:28,730 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:28,730 INFO sqlalchemy.engine.base.Engine Thread-227 : ('philip', 1, 1)
2020-06-20 22:18:28,730 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:28,731 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:28,732 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 22:18:28,732 INFO sqlalchemy.engine.base.Engine Thread-227 : ('57', 1)
2020-06-20 22:18:28,733 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 22:18:28,733 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None)
2020-06-20 22:18:28,736 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:28,736 INFO sqlalchemy.engine.base.Engine Thread-227 : (82,)
2020-06-20 22:18:28,736 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:28,736 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:18:28,736 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 22:18:28,737 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 22:18:28,738 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 22:18:28,738 INFO sqlalchemy.engine.base.Engine Thread-227 : (1,)
2020-06-20 22:18:28,738 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:28,739 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 22:18:28,739 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 22:18:28,740 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 22:18:28,740 INFO sqlalchemy.engine.base.Engine Thread-227 : ()
2020-06-20 22:18:28,740 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:18:28,741 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:28,741 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:28,743 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 22:18:28,743 INFO sqlalchemy.engine.base.Engine Thread-227 : (127, 0)
2020-06-20 22:18:28,743 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:28,744 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:28,744 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:28,744 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:28,744 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 22:18:28,745 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:28,745 INFO sqlalchemy.engine.base.Engine Thread-227 : (92,)
2020-06-20 22:18:28,746 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:28,746 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:18:28,746 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:18:28,746 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:18:28,746 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:18:28,751 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:28,751 INFO sqlalchemy.engine.base.Engine Thread-227 : ('philip', 1, 1)
2020-06-20 22:18:28,751 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:28,752 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:28,756 INFO sqlalchemy.engine.base.Engine Thread-227 : ROLLBACK
2020-06-20 22:18:29,000 INFO sqlalchemy.engine.base.Engine Thread-237 : BEGIN (implicit)
2020-06-20 22:18:29,001 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:29,001 INFO sqlalchemy.engine.base.Engine Thread-237 : (1, 1)
2020-06-20 22:18:29,002 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:29,002 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:29,003 INFO sqlalchemy.engine.base.Engine Thread-237 : ROLLBACK
2020-06-20 22:18:29,065 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-06-20 22:18:29,066 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:29,066 INFO sqlalchemy.engine.base.Engine Thread-239 : (1, 1)
2020-06-20 22:18:29,068 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-06-20 22:18:29,069 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:29,069 INFO sqlalchemy.engine.base.Engine Thread-240 : (1, 1)
2020-06-20 22:18:29,069 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:29,072 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:29,072 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:29,075 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-06-20 22:18:29,076 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-06-20 22:18:29,076 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:29,079 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-06-20 22:18:29,083 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:29,081 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-06-20 22:18:29,080 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:29,083 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-06-20 22:18:29,083 INFO sqlalchemy.engine.base.Engine Thread-241 : (1, 1)
2020-06-20 22:18:29,084 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:29,085 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:29,085 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:29,086 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:29,087 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-06-20 22:18:29,088 INFO sqlalchemy.engine.base.Engine Thread-241 : ROLLBACK
2020-06-20 22:18:40,323 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-06-20 22:18:40,324 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:40,325 INFO sqlalchemy.engine.base.Engine Thread-242 : (1, 1)
2020-06-20 22:18:40,325 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,325 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,328 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:40,328 INFO sqlalchemy.engine.base.Engine Thread-242 : ('philip', 1, 1)
2020-06-20 22:18:40,329 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,329 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,331 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_environment AS datesofinterest_doi_environment, datesofinterest.doi_change_ref AS datesofinterest_doi_change_ref 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-06-20 22:18:40,331 INFO sqlalchemy.engine.base.Engine Thread-242 : ('57', 1)
2020-06-20 22:18:40,331 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_environment', 'datesofinterest_doi_change_ref')
2020-06-20 22:18:40,332 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 107, None)
2020-06-20 22:18:40,335 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:40,335 INFO sqlalchemy.engine.base.Engine Thread-242 : (82,)
2020-06-20 22:18:40,336 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:40,336 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:18:40,336 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-06-20 22:18:40,336 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-06-20 22:18:40,338 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-06-20 22:18:40,338 INFO sqlalchemy.engine.base.Engine Thread-242 : (1,)
2020-06-20 22:18:40,338 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:40,339 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-06-20 22:18:40,339 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-06-20 22:18:40,340 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-06-20 22:18:40,340 INFO sqlalchemy.engine.base.Engine Thread-242 : ()
2020-06-20 22:18:40,341 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:18:40,341 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:40,341 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:40,343 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s AND parameters.param_disabled = %s ORDER BY parameters.param_name
2020-06-20 22:18:40,343 INFO sqlalchemy.engine.base.Engine Thread-242 : (127, 0)
2020-06-20 22:18:40,343 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:40,344 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:40,344 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:40,344 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-06-20 22:18:40,344 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-06-20 22:18:40,345 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:40,346 INFO sqlalchemy.engine.base.Engine Thread-242 : (92,)
2020-06-20 22:18:40,346 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:40,347 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:18:40,347 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:18:40,347 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:18:40,347 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:18:40,350 INFO sqlalchemy.engine.base.Engine Thread-242 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_environment=%s, doi_change_ref=%s WHERE datesofinterest.id = %s
2020-06-20 22:18:40,350 INFO sqlalchemy.engine.base.Engine Thread-242 : ('57', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 0, 'SCR123999', 57)
2020-06-20 22:18:40,351 INFO sqlalchemy.engine.base.Engine Thread-242 : COMMIT
2020-06-20 22:18:40,402 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-06-20 22:18:40,404 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:40,404 INFO sqlalchemy.engine.base.Engine Thread-243 : (1, 1)
2020-06-20 22:18:40,404 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,404 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,407 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:40,407 INFO sqlalchemy.engine.base.Engine Thread-243 : ('philip', 1, 1)
2020-06-20 22:18:40,408 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,408 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,410 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:40,410 INFO sqlalchemy.engine.base.Engine Thread-243 : (132,)
2020-06-20 22:18:40,411 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:40,411 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (136, 'All Records', '0', 132, 0, 0, 1)
2020-06-20 22:18:40,411 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (133, 'Next 2 Weeks', '14', 132, 0, 0, 1)
2020-06-20 22:18:40,411 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (134, 'Next 4 Weeks', '28', 132, 0, 0, 1)
2020-06-20 22:18:40,412 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (135, 'Previous 4 Weeks', '-28', 132, 0, 0, 1)
2020-06-20 22:18:40,421 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS priority, parameters_2.param_name AS env, parameters_3.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_environment = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-06-20 22:18:40,421 INFO sqlalchemy.engine.base.Engine Thread-243 : (datetime.datetime(2020, 6, 20, 22, 18, 40, 412354), datetime.datetime(2020, 7, 4, 22, 18, 40, 412354), datetime.datetime(2020, 6, 20, 22, 18, 40, 412354), datetime.datetime(2020, 7, 4, 22, 18, 40, 412354), datetime.datetime(2020, 6, 20, 22, 18, 40, 412354), datetime.datetime(2020, 7, 4, 22, 18, 40, 412354))
2020-06-20 22:18:40,422 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'priority', 'env', 'type')
2020-06-20 22:18:40,422 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (56, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'High', 'Production', 'BaU Firewall Change')
2020-06-20 22:18:40,426 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:40,426 INFO sqlalchemy.engine.base.Engine Thread-243 : ('philip', 1, 1)
2020-06-20 22:18:40,427 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,427 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,430 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-06-20 22:18:40,676 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-06-20 22:18:40,677 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:40,677 INFO sqlalchemy.engine.base.Engine Thread-253 : (1, 1)
2020-06-20 22:18:40,678 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,679 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,680 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-06-20 22:18:40,683 INFO sqlalchemy.engine.base.Engine Thread-254 : BEGIN (implicit)
2020-06-20 22:18:40,684 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:40,684 INFO sqlalchemy.engine.base.Engine Thread-254 : (1, 1)
2020-06-20 22:18:40,685 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,686 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,689 INFO sqlalchemy.engine.base.Engine Thread-255 : BEGIN (implicit)
2020-06-20 22:18:40,691 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:40,691 INFO sqlalchemy.engine.base.Engine Thread-255 : (1, 1)
2020-06-20 22:18:40,690 INFO sqlalchemy.engine.base.Engine Thread-254 : ROLLBACK
2020-06-20 22:18:40,692 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,693 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,694 INFO sqlalchemy.engine.base.Engine Thread-255 : ROLLBACK
2020-06-20 22:18:40,698 INFO sqlalchemy.engine.base.Engine Thread-256 : BEGIN (implicit)
2020-06-20 22:18:40,699 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:40,699 INFO sqlalchemy.engine.base.Engine Thread-256 : (1, 1)
2020-06-20 22:18:40,700 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,700 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,701 INFO sqlalchemy.engine.base.Engine Thread-256 : ROLLBACK
2020-06-20 22:18:40,708 INFO sqlalchemy.engine.base.Engine Thread-257 : BEGIN (implicit)
2020-06-20 22:18:40,709 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:40,709 INFO sqlalchemy.engine.base.Engine Thread-257 : (1, 1)
2020-06-20 22:18:40,710 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:40,710 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:40,711 INFO sqlalchemy.engine.base.Engine Thread-257 : ROLLBACK
2020-06-20 22:18:45,210 INFO sqlalchemy.engine.base.Engine Thread-258 : BEGIN (implicit)
2020-06-20 22:18:45,212 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:18:45,212 INFO sqlalchemy.engine.base.Engine Thread-258 : ()
2020-06-20 22:18:45,213 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:18:45,213 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:18:45,213 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:18:45,215 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:18:45,215 INFO sqlalchemy.engine.base.Engine Thread-258 : (100,)
2020-06-20 22:18:45,215 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:18:45,215 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 22:18:45,215 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 22:18:45,215 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 22:18:45,216 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 22:18:45,216 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 22:18:45,217 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:45,218 INFO sqlalchemy.engine.base.Engine Thread-258 : (1, 1)
2020-06-20 22:18:45,218 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:45,219 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:45,223 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:18:45,223 INFO sqlalchemy.engine.base.Engine Thread-258 : ('philip', 1, 1)
2020-06-20 22:18:45,224 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:45,224 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:45,225 INFO sqlalchemy.engine.base.Engine Thread-258 : ROLLBACK
2020-06-20 22:18:45,475 INFO sqlalchemy.engine.base.Engine Thread-268 : BEGIN (implicit)
2020-06-20 22:18:45,477 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:45,477 INFO sqlalchemy.engine.base.Engine Thread-268 : (1, 1)
2020-06-20 22:18:45,478 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:45,478 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:45,479 INFO sqlalchemy.engine.base.Engine Thread-268 : ROLLBACK
2020-06-20 22:18:45,484 INFO sqlalchemy.engine.base.Engine Thread-269 : BEGIN (implicit)
2020-06-20 22:18:45,486 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:45,488 INFO sqlalchemy.engine.base.Engine Thread-270 : BEGIN (implicit)
2020-06-20 22:18:45,488 INFO sqlalchemy.engine.base.Engine Thread-269 : (1, 1)
2020-06-20 22:18:45,491 INFO sqlalchemy.engine.base.Engine Thread-270 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:45,491 INFO sqlalchemy.engine.base.Engine Thread-270 : (1, 1)
2020-06-20 22:18:45,492 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:45,492 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:45,493 INFO sqlalchemy.engine.base.Engine Thread-269 : ROLLBACK
2020-06-20 22:18:45,495 INFO sqlalchemy.engine.base.Engine Thread-271 : BEGIN (implicit)
2020-06-20 22:18:45,497 INFO sqlalchemy.engine.base.Engine Thread-271 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:45,497 INFO sqlalchemy.engine.base.Engine Thread-271 : (1, 1)
2020-06-20 22:18:45,498 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:45,498 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:45,499 INFO sqlalchemy.engine.base.Engine Thread-271 : ROLLBACK
2020-06-20 22:18:45,500 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:45,501 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:45,502 INFO sqlalchemy.engine.base.Engine Thread-270 : ROLLBACK
2020-06-20 22:18:45,531 INFO sqlalchemy.engine.base.Engine Thread-272 : BEGIN (implicit)
2020-06-20 22:18:45,532 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:45,532 INFO sqlalchemy.engine.base.Engine Thread-272 : (1, 1)
2020-06-20 22:18:45,533 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:45,533 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:45,534 INFO sqlalchemy.engine.base.Engine Thread-272 : ROLLBACK
2020-06-20 22:18:46,157 INFO sqlalchemy.engine.base.Engine Thread-273 : BEGIN (implicit)
2020-06-20 22:18:46,159 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 22:18:46,159 INFO sqlalchemy.engine.base.Engine Thread-273 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:18:46,161 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:18:46,166 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 22:18:46,166 INFO sqlalchemy.engine.base.Engine Thread-273 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:18:46,167 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:18:46,167 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 22:18:46,171 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 22:18:46,172 INFO sqlalchemy.engine.base.Engine Thread-273 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:18:46,172 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:18:46,173 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 22:18:46,174 INFO sqlalchemy.engine.base.Engine Thread-273 : ROLLBACK
2020-06-20 22:18:46,205 INFO sqlalchemy.engine.base.Engine Thread-274 : BEGIN (implicit)
2020-06-20 22:18:46,207 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 22:18:46,207 INFO sqlalchemy.engine.base.Engine Thread-274 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:18:46,209 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 22:18:46,209 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 22:18:46,209 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 22:18:46,209 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 22:18:46,209 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 22:18:46,209 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:18:46,210 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 22:18:46,210 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:18:46,210 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:18:46,210 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 22:18:46,214 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 22:18:46,214 INFO sqlalchemy.engine.base.Engine Thread-274 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:18:46,215 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:18:46,215 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 22:18:46,222 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 22:18:46,222 INFO sqlalchemy.engine.base.Engine Thread-274 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 22:18:46,223 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 22:18:46,223 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 22:18:46,224 INFO sqlalchemy.engine.base.Engine Thread-274 : ROLLBACK
2020-06-20 22:18:46,253 INFO sqlalchemy.engine.base.Engine Thread-275 : BEGIN (implicit)
2020-06-20 22:18:46,254 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,254 INFO sqlalchemy.engine.base.Engine Thread-275 : (1, 1)
2020-06-20 22:18:46,256 INFO sqlalchemy.engine.base.Engine Thread-276 : BEGIN (implicit)
2020-06-20 22:18:46,258 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,258 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,258 INFO sqlalchemy.engine.base.Engine Thread-276 : (1, 1)
2020-06-20 22:18:46,261 INFO sqlalchemy.engine.base.Engine Thread-277 : BEGIN (implicit)
2020-06-20 22:18:46,263 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,263 INFO sqlalchemy.engine.base.Engine Thread-277 : (1, 1)
2020-06-20 22:18:46,263 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,261 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,264 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,269 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,294 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,285 INFO sqlalchemy.engine.base.Engine Thread-279 : BEGIN (implicit)
2020-06-20 22:18:46,287 INFO sqlalchemy.engine.base.Engine Thread-280 : BEGIN (implicit)
2020-06-20 22:18:46,294 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,277 INFO sqlalchemy.engine.base.Engine Thread-278 : BEGIN (implicit)
2020-06-20 22:18:46,310 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,310 INFO sqlalchemy.engine.base.Engine Thread-278 : (1, 1)
2020-06-20 22:18:46,308 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,310 INFO sqlalchemy.engine.base.Engine Thread-277 : (20, 1)
2020-06-20 22:18:46,309 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,311 INFO sqlalchemy.engine.base.Engine Thread-280 : (1, 1)
2020-06-20 22:18:46,301 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,312 INFO sqlalchemy.engine.base.Engine Thread-275 : (15, 1)
2020-06-20 22:18:46,311 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,309 INFO sqlalchemy.engine.base.Engine Thread-276 : (19, 1)
2020-06-20 22:18:46,312 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,312 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,315 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,302 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,313 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,314 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:46,313 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,325 INFO sqlalchemy.engine.base.Engine Thread-279 : (1, 1)
2020-06-20 22:18:46,326 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,327 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, None, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:18:46,328 INFO sqlalchemy.engine.base.Engine Thread-277 : ROLLBACK
2020-06-20 22:18:46,329 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,343 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,345 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, None, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:18:46,345 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,348 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,346 INFO sqlalchemy.engine.base.Engine Thread-280 : (23, 1)
2020-06-20 22:18:46,347 INFO sqlalchemy.engine.base.Engine Thread-278 : (21, 1)
2020-06-20 22:18:46,348 INFO sqlalchemy.engine.base.Engine Thread-276 : ROLLBACK
2020-06-20 22:18:46,346 INFO sqlalchemy.engine.base.Engine Thread-275 : ROLLBACK
2020-06-20 22:18:46,360 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,360 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,363 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,369 INFO sqlalchemy.engine.base.Engine Thread-279 : (22, 1)
2020-06-20 22:18:46,366 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:46,368 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, None, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 22:18:46,364 INFO sqlalchemy.engine.base.Engine Thread-281 : BEGIN (implicit)
2020-06-20 22:18:46,371 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,371 INFO sqlalchemy.engine.base.Engine Thread-281 : (1, 1)
2020-06-20 22:18:46,372 INFO sqlalchemy.engine.base.Engine Thread-280 : ROLLBACK
2020-06-20 22:18:46,372 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,373 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,379 INFO sqlalchemy.engine.base.Engine Thread-278 : ROLLBACK
2020-06-20 22:18:46,386 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,387 INFO sqlalchemy.engine.base.Engine Thread-281 : (27, 1)
2020-06-20 22:18:46,388 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,389 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:46,390 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-06-20 22:18:46,393 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,395 INFO sqlalchemy.engine.base.Engine Thread-283 : BEGIN (implicit)
2020-06-20 22:18:46,397 INFO sqlalchemy.engine.base.Engine Thread-282 : BEGIN (implicit)
2020-06-20 22:18:46,399 INFO sqlalchemy.engine.base.Engine Thread-284 : BEGIN (implicit)
2020-06-20 22:18:46,401 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:46,403 INFO sqlalchemy.engine.base.Engine Thread-285 : BEGIN (implicit)
2020-06-20 22:18:46,404 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,409 INFO sqlalchemy.engine.base.Engine Thread-283 : (1, 1)
2020-06-20 22:18:46,407 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,409 INFO sqlalchemy.engine.base.Engine Thread-284 : (1, 1)
2020-06-20 22:18:46,408 INFO sqlalchemy.engine.base.Engine Thread-281 : ROLLBACK
2020-06-20 22:18:46,406 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,409 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:46,410 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,410 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,411 INFO sqlalchemy.engine.base.Engine Thread-282 : (1, 1)
2020-06-20 22:18:46,411 INFO sqlalchemy.engine.base.Engine Thread-285 : (1, 1)
2020-06-20 22:18:46,412 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,412 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,423 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,446 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,430 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:46,430 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,477 INFO sqlalchemy.engine.base.Engine Thread-283 : (57, 1)
2020-06-20 22:18:46,461 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:46,477 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,483 INFO sqlalchemy.engine.base.Engine Thread-285 : (30, 1)
2020-06-20 22:18:46,450 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,483 INFO sqlalchemy.engine.base.Engine Thread-284 : (31, 1)
2020-06-20 22:18:46,484 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,489 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 22:18:46,492 INFO sqlalchemy.engine.base.Engine Thread-282 : (56, 1)
2020-06-20 22:18:46,491 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 0, 'SCR123999', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:46,492 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 22:18:46,489 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 22:18:46,493 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 22:18:46,495 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:18:46,500 INFO sqlalchemy.engine.base.Engine Thread-285 : ROLLBACK
2020-06-20 22:18:46,498 INFO sqlalchemy.engine.base.Engine Thread-283 : ROLLBACK
2020-06-20 22:18:46,497 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:18:46,499 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:46,501 INFO sqlalchemy.engine.base.Engine Thread-284 : ROLLBACK
2020-06-20 22:18:46,504 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-06-20 22:18:49,735 INFO sqlalchemy.engine.base.Engine Thread-286 : BEGIN (implicit)
2020-06-20 22:18:49,736 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:49,736 INFO sqlalchemy.engine.base.Engine Thread-286 : (1, 1)
2020-06-20 22:18:49,737 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:49,737 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:49,745 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:18:49,746 INFO sqlalchemy.engine.base.Engine Thread-286 : (57,)
2020-06-20 22:18:49,746 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-06-20 22:18:49,747 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 0, 'SCR123999', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1)
2020-06-20 22:18:49,748 INFO sqlalchemy.engine.base.Engine Thread-286 : ROLLBACK
2020-06-20 22:18:49,764 INFO sqlalchemy.engine.base.Engine Thread-287 : BEGIN (implicit)
2020-06-20 22:18:49,765 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:18:49,765 INFO sqlalchemy.engine.base.Engine Thread-287 : (1, 1)
2020-06-20 22:18:49,766 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:18:49,766 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:18:49,770 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.id = %s
2020-06-20 22:18:49,770 INFO sqlalchemy.engine.base.Engine Thread-287 : (57,)
2020-06-20 22:18:49,771 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_change_ref')
2020-06-20 22:18:49,771 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (57, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 131, 'SCR123999')
2020-06-20 22:18:49,776 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.ticket AS bookings_1_ticket, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.approved_date AS bookings_1_approved_date 
FROM bookings AS bookings_1 
WHERE CAST(bookings_1.slot_id AS SIGNED INTEGER) = %s
2020-06-20 22:18:49,776 INFO sqlalchemy.engine.base.Engine Thread-287 : (57,)
2020-06-20 22:18:49,776 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_ticket', 'bookings_1_owner_id', 'bookings_1_approved_date')
2020-06-20 22:18:49,778 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name
2020-06-20 22:18:49,778 INFO sqlalchemy.engine.base.Engine Thread-287 : ()
2020-06-20 22:18:49,779 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-06-20 22:18:49,779 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 22:18:49,779 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 22:18:49,782 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 22:18:49,782 INFO sqlalchemy.engine.base.Engine Thread-287 : ()
2020-06-20 22:18:49,783 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 22:18:49,783 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 22:18:49,784 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 22:18:49,786 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name 
FROM complexgroups AS complexgroups_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s
2020-06-20 22:18:49,786 INFO sqlalchemy.engine.base.Engine Thread-287 : (57,)
2020-06-20 22:18:49,787 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('complexgroups_1_id', 'complexgroups_1_group_name')
2020-06-20 22:18:49,787 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'Zone 2 Complexes')
2020-06-20 22:18:49,788 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT complexgroups_1.group_members AS complexgroups_1_group_members 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s
2020-06-20 22:18:49,788 INFO sqlalchemy.engine.base.Engine Thread-287 : (1,)
2020-06-20 22:18:49,789 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('complexgroups_1_group_members',)
2020-06-20 22:18:49,789 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row ('1',)
2020-06-20 22:18:49,795 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name 
FROM complexes AS complexes_1 
WHERE complexes_1.id IN (%s)
2020-06-20 22:18:49,795 INFO sqlalchemy.engine.base.Engine Thread-287 : ('1',)
2020-06-20 22:18:49,796 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('complexes_1_id', 'complexes_1_complex_name')
2020-06-20 22:18:49,796 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'Made Up CheckPoint')
2020-06-20 22:18:49,797 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT complexgroups_1.max_slots AS complexgroups_1_max_slots 
FROM complexgroups AS complexgroups_1 
WHERE complexgroups_1.id = %s 
 LIMIT %s
2020-06-20 22:18:49,797 INFO sqlalchemy.engine.base.Engine Thread-287 : (1, 1)
2020-06-20 22:18:49,797 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('complexgroups_1_max_slots',)
2020-06-20 22:18:49,797 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (5,)
2020-06-20 22:18:49,798 INFO sqlalchemy.engine.base.Engine Thread-287 : ROLLBACK
2020-06-20 22:19:04,771 INFO sqlalchemy.engine.base.Engine Thread-288 : BEGIN (implicit)
2020-06-20 22:19:04,772 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:04,773 INFO sqlalchemy.engine.base.Engine Thread-288 : (1, 1)
2020-06-20 22:19:04,773 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:04,774 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:04,776 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:19:04,776 INFO sqlalchemy.engine.base.Engine Thread-288 : ('philip', 1, 1)
2020-06-20 22:19:04,777 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:04,777 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:04,780 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:19:04,780 INFO sqlalchemy.engine.base.Engine Thread-288 : (116,)
2020-06-20 22:19:04,780 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:04,781 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 22:19:04,781 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 22:19:04,781 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 22:19:04,781 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 22:19:04,782 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:19:04,782 INFO sqlalchemy.engine.base.Engine Thread-288 : (92,)
2020-06-20 22:19:04,783 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:04,783 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:19:04,783 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:19:04,783 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:19:04,783 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:19:04,801 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:19:04,801 INFO sqlalchemy.engine.base.Engine Thread-288 : ('philip', 1, 1)
2020-06-20 22:19:04,802 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:04,802 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:04,804 INFO sqlalchemy.engine.base.Engine Thread-288 : ROLLBACK
2020-06-20 22:19:05,034 INFO sqlalchemy.engine.base.Engine Thread-298 : BEGIN (implicit)
2020-06-20 22:19:05,035 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:05,036 INFO sqlalchemy.engine.base.Engine Thread-298 : (1, 1)
2020-06-20 22:19:05,036 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:05,037 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:05,039 INFO sqlalchemy.engine.base.Engine Thread-298 : ROLLBACK
2020-06-20 22:19:05,041 INFO sqlalchemy.engine.base.Engine Thread-299 : BEGIN (implicit)
2020-06-20 22:19:05,043 INFO sqlalchemy.engine.base.Engine Thread-300 : BEGIN (implicit)
2020-06-20 22:19:05,047 INFO sqlalchemy.engine.base.Engine Thread-299 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:05,050 INFO sqlalchemy.engine.base.Engine Thread-301 : BEGIN (implicit)
2020-06-20 22:19:05,051 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:05,054 INFO sqlalchemy.engine.base.Engine Thread-300 : (1, 1)
2020-06-20 22:19:05,054 INFO sqlalchemy.engine.base.Engine Thread-301 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:05,054 INFO sqlalchemy.engine.base.Engine Thread-301 : (1, 1)
2020-06-20 22:19:05,052 INFO sqlalchemy.engine.base.Engine Thread-299 : (1, 1)
2020-06-20 22:19:05,055 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:05,055 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:05,056 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:05,056 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:05,057 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:05,056 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:05,058 INFO sqlalchemy.engine.base.Engine Thread-300 : ROLLBACK
2020-06-20 22:19:05,059 INFO sqlalchemy.engine.base.Engine Thread-299 : ROLLBACK
2020-06-20 22:19:05,060 INFO sqlalchemy.engine.base.Engine Thread-301 : ROLLBACK
2020-06-20 22:19:05,093 INFO sqlalchemy.engine.base.Engine Thread-302 : BEGIN (implicit)
2020-06-20 22:19:05,094 INFO sqlalchemy.engine.base.Engine Thread-302 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:05,094 INFO sqlalchemy.engine.base.Engine Thread-302 : (1, 1)
2020-06-20 22:19:05,095 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:05,095 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:05,096 INFO sqlalchemy.engine.base.Engine Thread-302 : ROLLBACK
2020-06-20 22:19:09,069 INFO sqlalchemy.engine.base.Engine Thread-303 : BEGIN (implicit)
2020-06-20 22:19:09,070 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:09,070 INFO sqlalchemy.engine.base.Engine Thread-303 : (1, 1)
2020-06-20 22:19:09,071 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,071 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,074 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:19:09,074 INFO sqlalchemy.engine.base.Engine Thread-303 : ('philip', 1, 1)
2020-06-20 22:19:09,074 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,075 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,077 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:19:09,077 INFO sqlalchemy.engine.base.Engine Thread-303 : (116,)
2020-06-20 22:19:09,078 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:09,078 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 22:19:09,078 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 22:19:09,078 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 22:19:09,078 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 22:19:09,079 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:19:09,080 INFO sqlalchemy.engine.base.Engine Thread-303 : (92,)
2020-06-20 22:19:09,080 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:09,080 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:19:09,080 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:19:09,081 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:19:09,081 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:19:09,082 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 22:19:09,082 INFO sqlalchemy.engine.base.Engine Thread-303 : ('OPERATIONS_EMAILS', 1)
2020-06-20 22:19:09,083 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:09,083 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 22:19:09,084 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 22:19:09,084 INFO sqlalchemy.engine.base.Engine Thread-303 : ('137', 1)
2020-06-20 22:19:09,085 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:09,090 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 22:19:09,090 INFO sqlalchemy.engine.base.Engine Thread-303 : (datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59))
2020-06-20 22:19:09,091 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 22:19:09,095 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, datesofinterest_1.doi_name AS datesofinterest_1_doi_name 
FROM bookings AS bookings_1 LEFT OUTER JOIN datesofinterest AS datesofinterest_1 ON bookings_1.slot_id = datesofinterest_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 22:19:09,095 INFO sqlalchemy.engine.base.Engine Thread-303 : (datetime.datetime(2020, 6, 20, 0, 0), datetime.datetime(2020, 6, 20, 23, 59))
2020-06-20 22:19:09,096 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'datesofinterest_1_doi_name')
2020-06-20 22:19:09,101 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:19:09,101 INFO sqlalchemy.engine.base.Engine Thread-303 : ('philip', 1, 1)
2020-06-20 22:19:09,102 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,102 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,104 INFO sqlalchemy.engine.base.Engine Thread-303 : ROLLBACK
2020-06-20 22:19:09,341 INFO sqlalchemy.engine.base.Engine Thread-313 : BEGIN (implicit)
2020-06-20 22:19:09,344 INFO sqlalchemy.engine.base.Engine Thread-314 : BEGIN (implicit)
2020-06-20 22:19:09,345 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:09,346 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:09,347 INFO sqlalchemy.engine.base.Engine Thread-313 : (1, 1)
2020-06-20 22:19:09,349 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-06-20 22:19:09,350 INFO sqlalchemy.engine.base.Engine Thread-314 : (1, 1)
2020-06-20 22:19:09,353 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-06-20 22:19:09,354 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:09,354 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,356 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,356 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,357 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,356 INFO sqlalchemy.engine.base.Engine Thread-315 : (1, 1)
2020-06-20 22:19:09,356 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:09,358 INFO sqlalchemy.engine.base.Engine Thread-313 : ROLLBACK
2020-06-20 22:19:09,359 INFO sqlalchemy.engine.base.Engine Thread-314 : ROLLBACK
2020-06-20 22:19:09,360 INFO sqlalchemy.engine.base.Engine Thread-316 : (1, 1)
2020-06-20 22:19:09,360 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,362 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,363 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-06-20 22:19:09,364 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,364 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,366 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-06-20 22:19:09,392 INFO sqlalchemy.engine.base.Engine Thread-317 : BEGIN (implicit)
2020-06-20 22:19:09,393 INFO sqlalchemy.engine.base.Engine Thread-317 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:09,393 INFO sqlalchemy.engine.base.Engine Thread-317 : (1, 1)
2020-06-20 22:19:09,393 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:09,394 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:09,395 INFO sqlalchemy.engine.base.Engine Thread-317 : ROLLBACK
2020-06-20 22:19:15,960 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-06-20 22:19:15,961 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:15,961 INFO sqlalchemy.engine.base.Engine Thread-318 : (1, 1)
2020-06-20 22:19:15,962 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:15,962 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:15,964 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:19:15,964 INFO sqlalchemy.engine.base.Engine Thread-318 : ('philip', 1, 1)
2020-06-20 22:19:15,965 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:15,965 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:15,968 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:19:15,968 INFO sqlalchemy.engine.base.Engine Thread-318 : (116,)
2020-06-20 22:19:15,969 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:15,969 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 22:19:15,969 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 22:19:15,969 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 22:19:15,969 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 22:19:15,970 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 22:19:15,971 INFO sqlalchemy.engine.base.Engine Thread-318 : (92,)
2020-06-20 22:19:15,971 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:15,971 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 22:19:15,971 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 22:19:15,971 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 22:19:15,972 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 22:19:15,973 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 22:19:15,973 INFO sqlalchemy.engine.base.Engine Thread-318 : ('OPERATIONS_EMAILS', 1)
2020-06-20 22:19:15,974 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:15,974 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 22:19:15,975 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 22:19:15,975 INFO sqlalchemy.engine.base.Engine Thread-318 : ('137', 1)
2020-06-20 22:19:15,976 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 22:19:15,979 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 22:19:15,979 INFO sqlalchemy.engine.base.Engine Thread-318 : (datetime.datetime(2020, 7, 1, 0, 0), datetime.datetime(2020, 7, 1, 23, 59))
2020-06-20 22:19:15,980 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 22:19:15,980 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (56, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0))
2020-06-20 22:19:15,985 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, datesofinterest_1.doi_name AS datesofinterest_1_doi_name 
FROM bookings AS bookings_1 LEFT OUTER JOIN datesofinterest AS datesofinterest_1 ON bookings_1.slot_id = datesofinterest_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 22:19:15,985 INFO sqlalchemy.engine.base.Engine Thread-318 : (datetime.datetime(2020, 7, 1, 0, 0), datetime.datetime(2020, 7, 1, 23, 59))
2020-06-20 22:19:15,986 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'datesofinterest_1_doi_name')
2020-06-20 22:19:15,990 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 22:19:15,990 INFO sqlalchemy.engine.base.Engine Thread-318 : ('philip', 1, 1)
2020-06-20 22:19:15,991 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:15,991 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:15,993 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-06-20 22:19:16,252 INFO sqlalchemy.engine.base.Engine Thread-328 : BEGIN (implicit)
2020-06-20 22:19:16,253 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:16,256 INFO sqlalchemy.engine.base.Engine Thread-329 : BEGIN (implicit)
2020-06-20 22:19:16,256 INFO sqlalchemy.engine.base.Engine Thread-328 : (1, 1)
2020-06-20 22:19:16,258 INFO sqlalchemy.engine.base.Engine Thread-329 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:16,258 INFO sqlalchemy.engine.base.Engine Thread-329 : (1, 1)
2020-06-20 22:19:16,258 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:16,259 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:16,260 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:16,261 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:16,263 INFO sqlalchemy.engine.base.Engine Thread-330 : BEGIN (implicit)
2020-06-20 22:19:16,264 INFO sqlalchemy.engine.base.Engine Thread-328 : ROLLBACK
2020-06-20 22:19:16,268 INFO sqlalchemy.engine.base.Engine Thread-331 : BEGIN (implicit)
2020-06-20 22:19:16,268 INFO sqlalchemy.engine.base.Engine Thread-329 : ROLLBACK
2020-06-20 22:19:16,269 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:16,272 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:16,273 INFO sqlalchemy.engine.base.Engine Thread-330 : (1, 1)
2020-06-20 22:19:16,274 INFO sqlalchemy.engine.base.Engine Thread-331 : (1, 1)
2020-06-20 22:19:16,274 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:16,275 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:16,275 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:16,276 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:16,277 INFO sqlalchemy.engine.base.Engine Thread-330 : ROLLBACK
2020-06-20 22:19:16,278 INFO sqlalchemy.engine.base.Engine Thread-331 : ROLLBACK
2020-06-20 22:19:16,298 INFO sqlalchemy.engine.base.Engine Thread-332 : BEGIN (implicit)
2020-06-20 22:19:16,299 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 22:19:16,299 INFO sqlalchemy.engine.base.Engine Thread-332 : (1, 1)
2020-06-20 22:19:16,300 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 22:19:16,300 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 22:19:16,301 INFO sqlalchemy.engine.base.Engine Thread-332 : ROLLBACK
2020-06-20 23:16:51,000 INFO sqlalchemy.engine.base.Engine Thread-333 : BEGIN (implicit)
2020-06-20 23:16:51,004 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-06-20 23:16:51,004 INFO sqlalchemy.engine.base.Engine Thread-333 : ()
2020-06-20 23:16:51,007 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-06-20 23:16:51,007 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 23:16:51,007 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-06-20 23:16:51,009 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 23:16:51,009 INFO sqlalchemy.engine.base.Engine Thread-333 : (100,)
2020-06-20 23:16:51,010 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 23:16:51,010 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-06-20 23:16:51,010 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-06-20 23:16:51,010 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-06-20 23:16:51,010 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-06-20 23:16:51,010 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-06-20 23:16:51,013 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:51,013 INFO sqlalchemy.engine.base.Engine Thread-333 : (1, 1)
2020-06-20 23:16:51,013 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:51,014 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:51,018 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 23:16:51,019 INFO sqlalchemy.engine.base.Engine Thread-333 : ('philip', 1, 1)
2020-06-20 23:16:51,019 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:51,019 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:51,021 INFO sqlalchemy.engine.base.Engine Thread-333 : ROLLBACK
2020-06-20 23:16:51,285 INFO sqlalchemy.engine.base.Engine Thread-343 : BEGIN (implicit)
2020-06-20 23:16:51,288 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:51,288 INFO sqlalchemy.engine.base.Engine Thread-343 : (1, 1)
2020-06-20 23:16:51,289 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:51,289 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:51,290 INFO sqlalchemy.engine.base.Engine Thread-343 : ROLLBACK
2020-06-20 23:16:51,365 INFO sqlalchemy.engine.base.Engine Thread-345 : BEGIN (implicit)
2020-06-20 23:16:51,366 INFO sqlalchemy.engine.base.Engine Thread-344 : BEGIN (implicit)
2020-06-20 23:16:51,368 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:51,369 INFO sqlalchemy.engine.base.Engine Thread-344 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:51,369 INFO sqlalchemy.engine.base.Engine Thread-345 : (1, 1)
2020-06-20 23:16:51,369 INFO sqlalchemy.engine.base.Engine Thread-344 : (1, 1)
2020-06-20 23:16:51,370 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:51,373 INFO sqlalchemy.engine.base.Engine Thread-346 : BEGIN (implicit)
2020-06-20 23:16:51,374 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:51,378 INFO sqlalchemy.engine.base.Engine Thread-345 : ROLLBACK
2020-06-20 23:16:51,375 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:51,374 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:51,380 INFO sqlalchemy.engine.base.Engine Thread-347 : BEGIN (implicit)
2020-06-20 23:16:51,384 INFO sqlalchemy.engine.base.Engine Thread-347 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:51,382 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:51,385 INFO sqlalchemy.engine.base.Engine Thread-344 : ROLLBACK
2020-06-20 23:16:51,384 INFO sqlalchemy.engine.base.Engine Thread-347 : (1, 1)
2020-06-20 23:16:51,380 INFO sqlalchemy.engine.base.Engine Thread-346 : (1, 1)
2020-06-20 23:16:51,386 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:51,386 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:51,387 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:51,387 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:51,389 INFO sqlalchemy.engine.base.Engine Thread-347 : ROLLBACK
2020-06-20 23:16:51,390 INFO sqlalchemy.engine.base.Engine Thread-346 : ROLLBACK
2020-06-20 23:16:52,169 INFO sqlalchemy.engine.base.Engine Thread-348 : BEGIN (implicit)
2020-06-20 23:16:52,171 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 23:16:52,171 INFO sqlalchemy.engine.base.Engine Thread-348 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 23:16:52,173 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 23:16:52,173 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 23:16:52,173 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 23:16:52,173 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 23:16:52,174 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 23:16:52,174 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 23:16:52,174 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 23:16:52,174 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 23:16:52,174 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 23:16:52,174 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 23:16:52,179 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 23:16:52,179 INFO sqlalchemy.engine.base.Engine Thread-348 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 23:16:52,180 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 23:16:52,181 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 23:16:52,185 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 23:16:52,185 INFO sqlalchemy.engine.base.Engine Thread-348 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 23:16:52,186 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 23:16:52,186 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 23:16:52,187 INFO sqlalchemy.engine.base.Engine Thread-348 : ROLLBACK
2020-06-20 23:16:52,217 INFO sqlalchemy.engine.base.Engine Thread-349 : BEGIN (implicit)
2020-06-20 23:16:52,220 INFO sqlalchemy.engine.base.Engine Thread-349 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.typeid AS anon_1_typeid, anon_1.`eventType` AS `anon_1_eventType`, anon_1.`availableSlots` AS `anon_1_availableSlots`, anon_1.`maxSlots` AS `anon_1_maxSlots` 
FROM (SELECT datesofinterest_1.id AS id, datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, parameters_1.id AS typeid, %s AS `eventType`, fmapp.rem_slots(datesofinterest_1.id) AS `availableSlots`, complexgroups_1.max_slots AS `maxSlots` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-06-20 23:16:52,220 INFO sqlalchemy.engine.base.Engine Thread-349 : ('DATE', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_typeid', 'anon_1_eventType', 'anon_1_availableSlots', 'anon_1_maxSlots')
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (15, datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze 1234', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 129, 'DATE', None, None)
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (19, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Change Freeze RED', 'test locked', 'Informational', 'background-color: #ADD8E6; color: #000000;', 128, 'DATE', None, None)
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (20, datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'BaU Zone 2', 'test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 1, 5)
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (21, datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'Locked date', 'Locked', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 130, 'DATE', None, None)
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (22, datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'Zone 5 BAU', 'Zone 5 test', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (23, datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'Zone 5 BAU', 'Zone 5 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 2, 2)
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (27, datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 23:16:52,222 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (56, datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 23:16:52,223 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (57, datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 131, 'DATE', 5, 5)
2020-06-20 23:16:52,228 INFO sqlalchemy.engine.base.Engine Thread-349 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-06-20 23:16:52,228 INFO sqlalchemy.engine.base.Engine Thread-349 : ('background-color: #DAFFB9; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 23:16:52,229 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 23:16:52,229 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (31, datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), 'Big test', 'Bob', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Made Up CheckPoint', datetime.datetime(2020, 6, 14, 13, 4, 28), 'BOOKING', 'background-color: #DAFFB9; color: #000000;', 'black')
2020-06-20 23:16:52,234 INFO sqlalchemy.engine.base.Engine Thread-349 : SELECT anon_1.id AS anon_1_id, anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, anon_1.`eventType` AS `anon_1_eventType`, %s AS style, %s AS `textColor` 
FROM (SELECT bookings_1.id AS id, bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved, %s AS `eventType` 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND bookings_1.slot_id = %s AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-06-20 23:16:52,234 INFO sqlalchemy.engine.base.Engine Thread-349 : ('background-color: #CCCCCC; color: #000000;', 'black', 'BOOKING', 0.0, datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-06-20 23:16:52,235 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Col ('anon_1_id', 'anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'anon_1_eventType', 'style', 'textColor')
2020-06-20 23:16:52,236 DEBUG sqlalchemy.engine.base.Engine Thread-349 : Row (30, datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), 'Test Booking', 'Bob', 'test booking', 'Made Up CheckPoint', None, 'BOOKING', 'background-color: #CCCCCC; color: #000000;', 'black')
2020-06-20 23:16:52,237 INFO sqlalchemy.engine.base.Engine Thread-349 : ROLLBACK
2020-06-20 23:16:52,268 INFO sqlalchemy.engine.base.Engine Thread-351 : BEGIN (implicit)
2020-06-20 23:16:52,270 INFO sqlalchemy.engine.base.Engine Thread-350 : BEGIN (implicit)
2020-06-20 23:16:52,271 INFO sqlalchemy.engine.base.Engine Thread-351 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,278 INFO sqlalchemy.engine.base.Engine Thread-351 : (1, 1)
2020-06-20 23:16:52,275 INFO sqlalchemy.engine.base.Engine Thread-350 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,278 INFO sqlalchemy.engine.base.Engine Thread-350 : (1, 1)
2020-06-20 23:16:52,274 INFO sqlalchemy.engine.base.Engine Thread-352 : BEGIN (implicit)
2020-06-20 23:16:52,286 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,286 INFO sqlalchemy.engine.base.Engine Thread-352 : (1, 1)
2020-06-20 23:16:52,278 INFO sqlalchemy.engine.base.Engine Thread-353 : BEGIN (implicit)
2020-06-20 23:16:52,287 INFO sqlalchemy.engine.base.Engine Thread-353 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,285 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,287 INFO sqlalchemy.engine.base.Engine Thread-353 : (1, 1)
2020-06-20 23:16:52,279 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,282 INFO sqlalchemy.engine.base.Engine Thread-354 : BEGIN (implicit)
2020-06-20 23:16:52,284 INFO sqlalchemy.engine.base.Engine Thread-355 : BEGIN (implicit)
2020-06-20 23:16:52,291 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,291 INFO sqlalchemy.engine.base.Engine Thread-355 : (1, 1)
2020-06-20 23:16:52,289 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,289 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,302 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,288 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,288 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,297 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,290 INFO sqlalchemy.engine.base.Engine Thread-354 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,304 INFO sqlalchemy.engine.base.Engine Thread-350 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,325 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,326 INFO sqlalchemy.engine.base.Engine Thread-351 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,337 INFO sqlalchemy.engine.base.Engine Thread-351 : (19, 1)
2020-06-20 23:16:52,326 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,326 INFO sqlalchemy.engine.base.Engine Thread-354 : (1, 1)
2020-06-20 23:16:52,327 INFO sqlalchemy.engine.base.Engine Thread-350 : (15, 1)
2020-06-20 23:16:52,326 INFO sqlalchemy.engine.base.Engine Thread-353 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,351 INFO sqlalchemy.engine.base.Engine Thread-353 : (21, 1)
2020-06-20 23:16:52,350 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,339 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,351 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,352 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,352 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,355 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,417 INFO sqlalchemy.engine.base.Engine Thread-355 : (23, 1)
2020-06-20 23:16:52,414 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Row (19, 'Change Freeze RED', 83, 'test locked', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 128, 0, 106, None, 128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 23:16:52,414 INFO sqlalchemy.engine.base.Engine Thread-352 : (20, 1)
2020-06-20 23:16:52,416 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,417 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Row (21, 'Locked date', 83, 'Locked', datetime.datetime(2020, 6, 9, 0, 30), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 130, 0, 107, None, 130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 23:16:52,415 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze 1234', datetime.datetime(2020, 6, 17, 0, 15), datetime.datetime(2020, 6, 18, 23, 45), 'GBR,IND', 129, 0, 106, None, 129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, None, None, None, None, None, None, None, None)
2020-06-20 23:16:52,419 INFO sqlalchemy.engine.base.Engine Thread-351 : ROLLBACK
2020-06-20 23:16:52,425 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,425 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,426 INFO sqlalchemy.engine.base.Engine Thread-350 : ROLLBACK
2020-06-20 23:16:52,433 INFO sqlalchemy.engine.base.Engine Thread-354 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,434 INFO sqlalchemy.engine.base.Engine Thread-353 : ROLLBACK
2020-06-20 23:16:52,435 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (20, 'BaU Zone 2', 83, 'test', datetime.datetime(2020, 6, 17, 2, 0), datetime.datetime(2020, 6, 17, 6, 0), 'GBR,IND', 131, 1, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 1, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 23:16:52,437 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (23, 'Zone 5 BAU', 83, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 23:16:52,438 INFO sqlalchemy.engine.base.Engine Thread-354 : (22, 1)
2020-06-20 23:16:52,440 INFO sqlalchemy.engine.base.Engine Thread-352 : ROLLBACK
2020-06-20 23:16:52,440 INFO sqlalchemy.engine.base.Engine Thread-355 : ROLLBACK
2020-06-20 23:16:52,444 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,445 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Row (22, 'Zone 5 BAU', 83, 'Zone 5 test', datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 6, 9, 23, 45), 'GBR,IND', 131, 2, 107, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 2, 2, 'Zone 5 Complexes', 2, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-06-20 23:16:52,446 INFO sqlalchemy.engine.base.Engine Thread-354 : ROLLBACK
2020-06-20 23:16:52,452 INFO sqlalchemy.engine.base.Engine Thread-356 : BEGIN (implicit)
2020-06-20 23:16:52,453 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,454 INFO sqlalchemy.engine.base.Engine Thread-356 : (1, 1)
2020-06-20 23:16:52,456 INFO sqlalchemy.engine.base.Engine Thread-357 : BEGIN (implicit)
2020-06-20 23:16:52,457 INFO sqlalchemy.engine.base.Engine Thread-357 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,458 INFO sqlalchemy.engine.base.Engine Thread-357 : (1, 1)
2020-06-20 23:16:52,458 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,459 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,461 INFO sqlalchemy.engine.base.Engine Thread-358 : BEGIN (implicit)
2020-06-20 23:16:52,462 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,468 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,469 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,477 INFO sqlalchemy.engine.base.Engine Thread-359 : BEGIN (implicit)
2020-06-20 23:16:52,478 INFO sqlalchemy.engine.base.Engine Thread-357 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,480 INFO sqlalchemy.engine.base.Engine Thread-360 : BEGIN (implicit)
2020-06-20 23:16:52,481 INFO sqlalchemy.engine.base.Engine Thread-358 : (1, 1)
2020-06-20 23:16:52,492 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,495 INFO sqlalchemy.engine.base.Engine Thread-356 : (27, 1)
2020-06-20 23:16:52,495 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,493 INFO sqlalchemy.engine.base.Engine Thread-359 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,496 INFO sqlalchemy.engine.base.Engine Thread-359 : (1, 1)
2020-06-20 23:16:52,495 INFO sqlalchemy.engine.base.Engine Thread-360 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:52,497 INFO sqlalchemy.engine.base.Engine Thread-360 : (1, 1)
2020-06-20 23:16:52,496 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,493 INFO sqlalchemy.engine.base.Engine Thread-357 : (56, 1)
2020-06-20 23:16:52,496 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,503 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,513 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,510 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,512 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_type AS datesofinterest_1_doi_type, datesofinterest_1.doi_filter AS datesofinterest_1_doi_filter, datesofinterest_1.doi_environment AS datesofinterest_1_doi_environment, datesofinterest_1.doi_change_ref AS datesofinterest_1_doi_change_ref, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, fmapp.rem_slots(datesofinterest_1.id) AS `slotsAvailable`, complexgroups_1.id AS complexgroups_1_id, complexgroups_1.group_name AS complexgroups_1_group_name, complexgroups_1.max_slots AS complexgroups_1_max_slots, complexgroups_1.group_members AS complexgroups_1_group_members, complexgroups_1.group_created AS complexgroups_1_group_created, complexgroups_1.bau_only AS complexgroups_1_bau_only, complexgroups_1.group_active AS complexgroups_1_group_active 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_priority = parameters_2.id LEFT OUTER JOIN complexgroups AS complexgroups_1 ON datesofinterest_1.doi_filter = complexgroups_1.id 
WHERE datesofinterest_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,513 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (27, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 6, 24, 2, 0), datetime.datetime(2020, 6, 24, 6, 0), 'GBR,IND', 131, 1, 0, None, 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 23:16:52,540 INFO sqlalchemy.engine.base.Engine Thread-356 : ROLLBACK
2020-06-20 23:16:52,509 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:52,539 INFO sqlalchemy.engine.base.Engine Thread-358 : (57, 1)
2020-06-20 23:16:52,539 INFO sqlalchemy.engine.base.Engine Thread-359 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,525 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Row (56, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 1, 2, 0), datetime.datetime(2020, 7, 1, 6, 0), 'GBR,IND', 131, 1, 94, 'SCR123456', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 23:16:52,541 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:52,542 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_type', 'datesofinterest_1_doi_filter', 'datesofinterest_1_doi_environment', 'datesofinterest_1_doi_change_ref', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'slotsAvailable', 'complexgroups_1_id', 'complexgroups_1_group_name', 'complexgroups_1_max_slots', 'complexgroups_1_group_members', 'complexgroups_1_group_created', 'complexgroups_1_bau_only', 'complexgroups_1_group_active')
2020-06-20 23:16:52,542 INFO sqlalchemy.engine.base.Engine Thread-359 : (31, 1)
2020-06-20 23:16:52,549 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (57, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 7, 8, 2, 0), datetime.datetime(2020, 7, 8, 6, 0), 'GBR,IND', 131, 1, 0, 'SCR123999', 131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1, 83, 'High', 'High', 82, 0, 0, 1, 5, 1, 'Zone 2 Complexes', 5, '1', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-06-20 23:16:52,551 INFO sqlalchemy.engine.base.Engine Thread-358 : ROLLBACK
2020-06-20 23:16:52,550 INFO sqlalchemy.engine.base.Engine Thread-357 : ROLLBACK
2020-06-20 23:16:52,552 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 23:16:52,574 INFO sqlalchemy.engine.base.Engine Thread-360 : SELECT bookings_1.id AS bookings_1_id, bookings_1.slot_id AS bookings_1_slot_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, bookings_1.stakeholder_id AS bookings_1_stakeholder_id, bookings_1.budget AS bookings_1_budget, bookings_1.project AS bookings_1_project, bookings_1.description AS bookings_1_description, bookings_1.owner_id AS bookings_1_owner_id, bookings_1.complex AS bookings_1_complex, bookings_1.cluster AS bookings_1_cluster, bookings_1.approval_required AS bookings_1_approval_required, bookings_1.approved_date AS bookings_1_approved_date, bookings_1.approved_by AS bookings_1_approved_by, bookings_1.approval_reason AS bookings_1_approval_reason, bookings_1.change_ref AS bookings_1_change_ref, bookings_1.change_subref AS bookings_1_change_subref, bookings_1.logged AS bookings_1_logged, complexes_1.id AS complexes_1_id, complexes_1.complex_name AS complexes_1_complex_name, complexes_1.complex_manager AS complexes_1_complex_manager, complexes_1.complex_fw_inner_1 AS complexes_1_complex_fw_inner_1, complexes_1.complex_fw_inner_2 AS complexes_1_complex_fw_inner_2, complexes_1.complex_fw_outer_1 AS complexes_1_complex_fw_outer_1, complexes_1.complex_fw_outer_2 AS complexes_1_complex_fw_outer_2, complexes_1.complex_fw_location_1 AS complexes_1_complex_fw_location_1, complexes_1.complex_fw_location_2 AS complexes_1_complex_fw_location_2, complexes_1.complex_fw_type AS complexes_1_complex_fw_type, complexes_1.complex_serial AS complexes_1_complex_serial, complexes_1.complex_license AS complexes_1_complex_license, complexes_1.complex_push_start AS complexes_1_complex_push_start, complexes_1.complex_push_end AS complexes_1_complex_push_end, complexes_1.complex_push_days AS complexes_1_complex_push_days, complexes_1.complex_category AS complexes_1_complex_category, complexes_1.complex_hardware AS complexes_1_complex_hardware, complexes_1.complex_fw_inner_name_1 AS complexes_1_complex_fw_inner_name_1, complexes_1.complex_fw_inner_name_2 AS complexes_1_complex_fw_inner_name_2, complexes_1.complex_location_1 AS complexes_1_complex_location_1, complexes_1.complex_fw_outer_name_1 AS complexes_1_complex_fw_outer_name_1, complexes_1.complex_fw_outer_name_2 AS complexes_1_complex_fw_outer_name_2, complexes_1.complex_location_2 AS complexes_1_complex_location_2, complexes_1.complex_location_all AS complexes_1_complex_location_all, complexes_1.complex_area AS complexes_1_complex_area, complexes_1.complex_fw_info1 AS complexes_1_complex_fw_info1, complexes_1.complex_fw_info2 AS complexes_1_complex_fw_info2, complexes_1.complex_fw_inner_info1 AS complexes_1_complex_fw_inner_info1, complexes_1.complex_fw_inner_info2 AS complexes_1_complex_fw_inner_info2, complexes_1.complex_fw_outer_info1 AS complexes_1_complex_fw_outer_info1, complexes_1.complex_fw_outer_info2 AS complexes_1_complex_fw_outer_info2, complexes_1.complex_type AS complexes_1_complex_type, complexes_1.complex_info_1 AS complexes_1_complex_info_1, complexes_1.complex_country AS complexes_1_complex_country, complexes_1.complex_restricted AS complexes_1_complex_restricted, complexes_1.complex_restrict_start AS complexes_1_complex_restrict_start, complexes_1.complex_restrict_end AS complexes_1_complex_restrict_end, complexes_1.complex_allow_slot_day AS complexes_1_complex_allow_slot_day, complexes_1.complex_allow_slot_start AS complexes_1_complex_allow_slot_start, complexes_1.complex_allow_slot_end AS complexes_1_complex_allow_slot_end, complexes_1.complex_push_day_extra AS complexes_1_complex_push_day_extra, complexes_1.complex_change_info AS complexes_1_complex_change_info, complexes_1.complex_environment AS complexes_1_complex_environment, complexes_1.complex_updated AS complexes_1_complex_updated, complexes_1.complex_active AS complexes_1_complex_active 
FROM bookings AS bookings_1 INNER JOIN complexes AS complexes_1 ON bookings_1.complex = complexes_1.id 
WHERE bookings_1.id = %s 
 LIMIT %s
2020-06-20 23:16:52,576 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Row (31, 0, 'Big test', datetime.datetime(2020, 6, 14, 2, 0), datetime.datetime(2020, 6, 14, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'testing stuff with a big comment to see how it wraps in the tooltip or maybe it will make a mess', 'Bob', 1, 98, 0, datetime.datetime(2020, 6, 14, 13, 4, 28), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 6, 14, 13, 4, 27), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 23:16:52,576 INFO sqlalchemy.engine.base.Engine Thread-360 : (30, 1)
2020-06-20 23:16:52,577 INFO sqlalchemy.engine.base.Engine Thread-359 : ROLLBACK
2020-06-20 23:16:52,579 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Col ('bookings_1_id', 'bookings_1_slot_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'bookings_1_stakeholder_id', 'bookings_1_budget', 'bookings_1_project', 'bookings_1_description', 'bookings_1_owner_id', 'bookings_1_complex', 'bookings_1_cluster', 'bookings_1_approval_required', 'bookings_1_approved_date', 'bookings_1_approved_by', 'bookings_1_approval_reason', 'bookings_1_change_ref', 'bookings_1_change_subref', 'bookings_1_logged', 'complexes_1_id', 'complexes_1_complex_name', 'complexes_1_complex_manager', 'complexes_1_complex_fw_inner_1', 'complexes_1_complex_fw_inner_2', 'complexes_1_complex_fw_outer_1', 'complexes_1_complex_fw_outer_2', 'complexes_1_complex_fw_location_1', 'complexes_1_complex_fw_location_2', 'complexes_1_complex_fw_type', 'complexes_1_complex_serial', 'complexes_1_complex_license', 'complexes_1_complex_push_start', 'complexes_1_complex_push_end', 'complexes_1_complex_push_days', 'complexes_1_complex_category', 'complexes_1_complex_hardware', 'complexes_1_complex_fw_inner_name_1', 'complexes_1_complex_fw_inner_name_2', 'complexes_1_complex_location_1', 'complexes_1_complex_fw_outer_name_1', 'complexes_1_complex_fw_outer_name_2', 'complexes_1_complex_location_2', 'complexes_1_complex_location_all', 'complexes_1_complex_area', 'complexes_1_complex_fw_info1', 'complexes_1_complex_fw_info2', 'complexes_1_complex_fw_inner_info1', 'complexes_1_complex_fw_inner_info2', 'complexes_1_complex_fw_outer_info1', 'complexes_1_complex_fw_outer_info2', 'complexes_1_complex_type', 'complexes_1_complex_info_1', 'complexes_1_complex_country', 'complexes_1_complex_restricted', 'complexes_1_complex_restrict_start', 'complexes_1_complex_restrict_end', 'complexes_1_complex_allow_slot_day', 'complexes_1_complex_allow_slot_start', 'complexes_1_complex_allow_slot_end', 'complexes_1_complex_push_day_extra', 'complexes_1_complex_change_info', 'complexes_1_complex_environment', 'complexes_1_complex_updated', 'complexes_1_complex_active')
2020-06-20 23:16:52,581 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Row (30, 0, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', 'troopaq', '100000', 'Testing project', 'test booking', 'Bob', 1, 99, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 6, 7, 21, 19, 20), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 6, 19, 20, 34, 23), 67)
2020-06-20 23:16:52,582 INFO sqlalchemy.engine.base.Engine Thread-360 : ROLLBACK
2020-06-20 23:16:57,408 INFO sqlalchemy.engine.base.Engine Thread-361 : BEGIN (implicit)
2020-06-20 23:16:57,409 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:57,410 INFO sqlalchemy.engine.base.Engine Thread-361 : (1, 1)
2020-06-20 23:16:57,410 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,410 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,412 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 23:16:57,413 INFO sqlalchemy.engine.base.Engine Thread-361 : ('philip', 1, 1)
2020-06-20 23:16:57,413 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,413 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,415 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 23:16:57,416 INFO sqlalchemy.engine.base.Engine Thread-361 : (116,)
2020-06-20 23:16:57,416 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 23:16:57,417 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 23:16:57,417 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 23:16:57,417 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 23:16:57,417 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 23:16:57,419 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 23:16:57,419 INFO sqlalchemy.engine.base.Engine Thread-361 : (92,)
2020-06-20 23:16:57,419 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 23:16:57,420 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 23:16:57,420 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 23:16:57,420 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 23:16:57,420 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 23:16:57,425 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 23:16:57,425 INFO sqlalchemy.engine.base.Engine Thread-361 : ('philip', 1, 1)
2020-06-20 23:16:57,425 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,426 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,427 INFO sqlalchemy.engine.base.Engine Thread-361 : ROLLBACK
2020-06-20 23:16:57,695 INFO sqlalchemy.engine.base.Engine Thread-371 : BEGIN (implicit)
2020-06-20 23:16:57,696 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:57,696 INFO sqlalchemy.engine.base.Engine Thread-371 : (1, 1)
2020-06-20 23:16:57,697 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,697 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,698 INFO sqlalchemy.engine.base.Engine Thread-371 : ROLLBACK
2020-06-20 23:16:57,766 INFO sqlalchemy.engine.base.Engine Thread-372 : BEGIN (implicit)
2020-06-20 23:16:57,769 INFO sqlalchemy.engine.base.Engine Thread-372 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:57,769 INFO sqlalchemy.engine.base.Engine Thread-372 : (1, 1)
2020-06-20 23:16:57,770 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,771 INFO sqlalchemy.engine.base.Engine Thread-373 : BEGIN (implicit)
2020-06-20 23:16:57,772 DEBUG sqlalchemy.engine.base.Engine Thread-372 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,774 INFO sqlalchemy.engine.base.Engine Thread-373 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:57,776 INFO sqlalchemy.engine.base.Engine Thread-373 : (1, 1)
2020-06-20 23:16:57,777 INFO sqlalchemy.engine.base.Engine Thread-372 : ROLLBACK
2020-06-20 23:16:57,777 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,777 DEBUG sqlalchemy.engine.base.Engine Thread-373 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,779 INFO sqlalchemy.engine.base.Engine Thread-373 : ROLLBACK
2020-06-20 23:16:57,782 INFO sqlalchemy.engine.base.Engine Thread-375 : BEGIN (implicit)
2020-06-20 23:16:57,783 INFO sqlalchemy.engine.base.Engine Thread-375 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:57,784 INFO sqlalchemy.engine.base.Engine Thread-374 : BEGIN (implicit)
2020-06-20 23:16:57,785 INFO sqlalchemy.engine.base.Engine Thread-375 : (1, 1)
2020-06-20 23:16:57,786 INFO sqlalchemy.engine.base.Engine Thread-374 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:16:57,786 INFO sqlalchemy.engine.base.Engine Thread-374 : (1, 1)
2020-06-20 23:16:57,787 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,787 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:16:57,787 DEBUG sqlalchemy.engine.base.Engine Thread-375 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-374 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:16:57,790 INFO sqlalchemy.engine.base.Engine Thread-375 : ROLLBACK
2020-06-20 23:16:57,791 INFO sqlalchemy.engine.base.Engine Thread-374 : ROLLBACK
2020-06-20 23:17:02,845 INFO sqlalchemy.engine.base.Engine Thread-376 : BEGIN (implicit)
2020-06-20 23:17:02,846 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:17:02,847 INFO sqlalchemy.engine.base.Engine Thread-376 : (1, 1)
2020-06-20 23:17:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:02,849 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 23:17:02,850 INFO sqlalchemy.engine.base.Engine Thread-376 : ('philip', 1, 1)
2020-06-20 23:17:02,850 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:02,850 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:02,853 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 23:17:02,853 INFO sqlalchemy.engine.base.Engine Thread-376 : (116,)
2020-06-20 23:17:02,853 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 23:17:02,853 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (137, 'Attend Covid19 CRP', 'COVID19', 116, 0, 0, 1)
2020-06-20 23:17:02,853 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-06-20 23:17:02,853 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-06-20 23:17:02,854 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-06-20 23:17:02,855 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-06-20 23:17:02,855 INFO sqlalchemy.engine.base.Engine Thread-376 : (92,)
2020-06-20 23:17:02,855 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 23:17:02,856 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-06-20 23:17:02,856 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-06-20 23:17:02,856 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-06-20 23:17:02,856 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-06-20 23:17:02,857 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-06-20 23:17:02,857 INFO sqlalchemy.engine.base.Engine Thread-376 : ('OPERATIONS_EMAILS', 1)
2020-06-20 23:17:02,859 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 23:17:02,859 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-06-20 23:17:02,860 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-06-20 23:17:02,860 INFO sqlalchemy.engine.base.Engine Thread-376 : ('137', 1)
2020-06-20 23:17:02,861 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-06-20 23:17:02,864 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s
2020-06-20 23:17:02,864 INFO sqlalchemy.engine.base.Engine Thread-376 : (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 59))
2020-06-20 23:17:02,864 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt')
2020-06-20 23:17:02,865 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (19, 'Change Freeze RED', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45))
2020-06-20 23:17:02,865 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (23, 'Zone 5 BAU', datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 45))
2020-06-20 23:17:02,869 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT bookings_1.id AS bookings_1_id, bookings_1.title AS bookings_1_title, bookings_1.start_dt AS bookings_1_start_dt, bookings_1.end_dt AS bookings_1_end_dt, bookings_1.ticket AS bookings_1_ticket, datesofinterest_1.doi_name AS datesofinterest_1_doi_name 
FROM bookings AS bookings_1 LEFT OUTER JOIN datesofinterest AS datesofinterest_1 ON bookings_1.slot_id = datesofinterest_1.id 
WHERE bookings_1.start_dt BETWEEN %s AND %s
2020-06-20 23:17:02,869 INFO sqlalchemy.engine.base.Engine Thread-376 : (datetime.datetime(2020, 6, 10, 0, 0), datetime.datetime(2020, 6, 10, 23, 59))
2020-06-20 23:17:02,869 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('bookings_1_id', 'bookings_1_title', 'bookings_1_start_dt', 'bookings_1_end_dt', 'bookings_1_ticket', 'datesofinterest_1_doi_name')
2020-06-20 23:17:02,870 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (30, 'Test Booking', datetime.datetime(2020, 6, 10, 2, 0), datetime.datetime(2020, 6, 10, 4, 0), '123456', None)
2020-06-20 23:17:02,876 INFO sqlalchemy.engine.base.Engine Thread-376 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-06-20 23:17:02,876 INFO sqlalchemy.engine.base.Engine Thread-376 : ('philip', 1, 1)
2020-06-20 23:17:02,876 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:02,877 DEBUG sqlalchemy.engine.base.Engine Thread-376 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:02,878 INFO sqlalchemy.engine.base.Engine Thread-376 : ROLLBACK
2020-06-20 23:17:03,123 INFO sqlalchemy.engine.base.Engine Thread-386 : BEGIN (implicit)
2020-06-20 23:17:03,124 INFO sqlalchemy.engine.base.Engine Thread-386 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:17:03,125 INFO sqlalchemy.engine.base.Engine Thread-386 : (1, 1)
2020-06-20 23:17:03,125 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:03,126 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:03,127 INFO sqlalchemy.engine.base.Engine Thread-386 : ROLLBACK
2020-06-20 23:17:03,191 INFO sqlalchemy.engine.base.Engine Thread-387 : BEGIN (implicit)
2020-06-20 23:17:03,192 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:17:03,195 INFO sqlalchemy.engine.base.Engine Thread-388 : BEGIN (implicit)
2020-06-20 23:17:03,195 INFO sqlalchemy.engine.base.Engine Thread-387 : (1, 1)
2020-06-20 23:17:03,198 INFO sqlalchemy.engine.base.Engine Thread-389 : BEGIN (implicit)
2020-06-20 23:17:03,199 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:17:03,204 INFO sqlalchemy.engine.base.Engine Thread-388 : (1, 1)
2020-06-20 23:17:03,203 INFO sqlalchemy.engine.base.Engine Thread-389 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:17:03,204 INFO sqlalchemy.engine.base.Engine Thread-389 : (1, 1)
2020-06-20 23:17:03,204 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:03,205 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:03,204 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:03,207 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:03,208 INFO sqlalchemy.engine.base.Engine Thread-388 : ROLLBACK
2020-06-20 23:17:03,206 INFO sqlalchemy.engine.base.Engine Thread-387 : ROLLBACK
2020-06-20 23:17:03,205 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:03,208 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:03,202 INFO sqlalchemy.engine.base.Engine Thread-390 : BEGIN (implicit)
2020-06-20 23:17:03,209 INFO sqlalchemy.engine.base.Engine Thread-389 : ROLLBACK
2020-06-20 23:17:03,211 INFO sqlalchemy.engine.base.Engine Thread-390 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-06-20 23:17:03,211 INFO sqlalchemy.engine.base.Engine Thread-390 : (1, 1)
2020-06-20 23:17:03,212 DEBUG sqlalchemy.engine.base.Engine Thread-390 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-06-20 23:17:03,213 DEBUG sqlalchemy.engine.base.Engine Thread-390 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 6, 18, 20, 17, 58), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-06-20 23:17:03,214 INFO sqlalchemy.engine.base.Engine Thread-390 : ROLLBACK
