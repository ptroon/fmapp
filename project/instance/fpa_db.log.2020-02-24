2020-02-24 19:11:50,038 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-02-24 19:11:50,041 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-24 19:11:50,041 INFO sqlalchemy.engine.base.Engine Thread-219 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'YES')
2020-02-24 19:11:50,043 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 19:11:50,044 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 19:11:50,044 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 19:11:50,044 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 19:11:50,044 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 19:11:50,044 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 19:11:50,048 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-24 19:11:50,048 INFO sqlalchemy.engine.base.Engine Thread-219 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-02-24 19:11:50,049 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 19:11:50,049 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 19:11:50,049 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 19:11:50,049 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 19:11:50,049 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 19:11:50,050 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 19:11:50,053 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.description AS description, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-02-24 19:11:50,053 INFO sqlalchemy.engine.base.Engine Thread-219 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-02-24 19:11:50,054 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 19:11:50,054 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'test', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 19:11:50,054 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'zzz', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 19:11:50,054 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'project doing something', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 19:11:50,055 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'TestA', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 19:11:50,055 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'Booking for testing rules against complex 1', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 19:11:50,055 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'Booking for testing rules #2 on Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 19:11:50,055 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'werwer', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 19:11:50,058 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.description AS description, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s) AS anon_1 
WHERE anon_1.approved IS NULL
2020-02-24 19:11:50,058 INFO sqlalchemy.engine.base.Engine Thread-219 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-02-24 19:11:50,059 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 19:11:50,059 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'testing', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 19:11:50,060 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'testing 2', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 19:11:50,060 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'testing', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 19:11:50,060 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'test b', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 19:11:50,060 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'Testing booking #3', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 19:11:50,060 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'Booking test #4 on Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 19:11:50,062 INFO sqlalchemy.engine.base.Engine Thread-219 : ROLLBACK
2020-02-24 19:11:50,513 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-02-24 19:11:50,514 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-24 19:11:50,515 INFO sqlalchemy.engine.base.Engine Thread-220 : (1, 1)
2020-02-24 19:11:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-24 19:11:50,516 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 2, 21, 9, 56, 57), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-02-24 19:11:50,518 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-02-24 22:51:12,148 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-02-24 22:51:12,150 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-24 22:51:12,150 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'YES')
2020-02-24 22:51:12,152 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 22:51:12,153 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 22:51:12,153 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 22:51:12,153 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 22:51:12,153 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 22:51:12,153 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-02-24 22:51:12,157 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-24 22:51:12,157 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-02-24 22:51:12,158 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 22:51:12,158 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 22:51:12,158 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 22:51:12,158 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 22:51:12,158 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 22:51:12,158 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-02-24 22:51:12,162 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.description AS description, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-02-24 22:51:12,162 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'test', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'zzz', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'project doing something', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'TestA', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'Booking for testing rules against complex 1', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'Booking for testing rules #2 on Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 22:51:12,163 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'werwer', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-02-24 22:51:12,167 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.description AS description, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1 
WHERE bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s) AS anon_1 
WHERE anon_1.approved IS NULL
2020-02-24 22:51:12,167 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-02-24 22:51:12,168 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-02-24 22:51:12,169 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'testing', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 22:51:12,169 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'testing 2', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 22:51:12,169 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'testing', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 22:51:12,169 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'test b', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 22:51:12,169 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'Testing booking #3', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 22:51:12,169 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'Booking test #4 on Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-02-24 22:51:12,171 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-02-24 22:51:12,568 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-02-24 22:51:12,570 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-24 22:51:12,570 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-02-24 22:51:12,570 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-24 22:51:12,571 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 2, 21, 9, 56, 57), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-02-24 22:51:12,572 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
